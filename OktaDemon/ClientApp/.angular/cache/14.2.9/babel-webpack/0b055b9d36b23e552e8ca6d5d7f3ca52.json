{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { isTransactionMeta } from './types/Transaction.js';\nimport { warn } from '../util/console.js';\nimport { clearTransactionFromSharedStorage, saveTransactionToSharedStorage, pruneSharedStorage, loadTransactionFromSharedStorage } from './util/sharedStorage.js';\n\nfunction createTransactionManager() {\n  return class TransactionManager {\n    constructor(options) {\n      this.storageManager = options.storageManager;\n      this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n      this.saveLastResponse = options.saveLastResponse === false ? false : true;\n      this.options = options;\n    }\n\n    clear(options = {}) {\n      const transactionStorage = this.storageManager.getTransactionStorage();\n      const meta = transactionStorage.getStorage();\n      transactionStorage.clearStorage();\n\n      if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n        const state = options.state || (meta === null || meta === void 0 ? void 0 : meta.state);\n\n        if (state) {\n          clearTransactionFromSharedStorage(this.storageManager, state);\n        }\n      }\n    }\n\n    save(meta, options = {}) {\n      let storage = this.storageManager.getTransactionStorage();\n      const obj = storage.getStorage();\n\n      if (isTransactionMeta(obj) && !options.muteWarning) {\n        warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n      }\n\n      storage.setStorage(meta);\n\n      if (this.enableSharedStorage && meta.state) {\n        saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n      }\n    }\n\n    exists(options = {}) {\n      try {\n        const meta = this.load(options);\n        return !!meta;\n      } catch (_a) {\n        return false;\n      }\n    }\n\n    load(options = {}) {\n      let meta;\n\n      if (this.enableSharedStorage && options.state) {\n        pruneSharedStorage(this.storageManager);\n        meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n\n        if (isTransactionMeta(meta)) {\n          return meta;\n        }\n      }\n\n      let storage = this.storageManager.getTransactionStorage();\n      meta = storage.getStorage();\n\n      if (isTransactionMeta(meta)) {\n        return meta;\n      }\n\n      return null;\n    }\n\n  };\n}\n\nexport { createTransactionManager };","map":{"version":3,"names":["isTransactionMeta","warn","clearTransactionFromSharedStorage","saveTransactionToSharedStorage","pruneSharedStorage","loadTransactionFromSharedStorage","createTransactionManager","TransactionManager","constructor","options","storageManager","enableSharedStorage","saveLastResponse","clear","transactionStorage","getTransactionStorage","meta","getStorage","clearStorage","clearSharedStorage","state","save","storage","obj","muteWarning","setStorage","exists","load","_a"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/oidc/TransactionManager.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { isTransactionMeta } from './types/Transaction.js';\nimport { warn } from '../util/console.js';\nimport { clearTransactionFromSharedStorage, saveTransactionToSharedStorage, pruneSharedStorage, loadTransactionFromSharedStorage } from './util/sharedStorage.js';\n\nfunction createTransactionManager() {\n    return class TransactionManager {\n        constructor(options) {\n            this.storageManager = options.storageManager;\n            this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n            this.saveLastResponse = options.saveLastResponse === false ? false : true;\n            this.options = options;\n        }\n        clear(options = {}) {\n            const transactionStorage = this.storageManager.getTransactionStorage();\n            const meta = transactionStorage.getStorage();\n            transactionStorage.clearStorage();\n            if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n                const state = options.state || (meta === null || meta === void 0 ? void 0 : meta.state);\n                if (state) {\n                    clearTransactionFromSharedStorage(this.storageManager, state);\n                }\n            }\n        }\n        save(meta, options = {}) {\n            let storage = this.storageManager.getTransactionStorage();\n            const obj = storage.getStorage();\n            if (isTransactionMeta(obj) && !options.muteWarning) {\n                warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n            }\n            storage.setStorage(meta);\n            if (this.enableSharedStorage && meta.state) {\n                saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n            }\n        }\n        exists(options = {}) {\n            try {\n                const meta = this.load(options);\n                return !!meta;\n            }\n            catch (_a) {\n                return false;\n            }\n        }\n        load(options = {}) {\n            let meta;\n            if (this.enableSharedStorage && options.state) {\n                pruneSharedStorage(this.storageManager);\n                meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n                if (isTransactionMeta(meta)) {\n                    return meta;\n                }\n            }\n            let storage = this.storageManager.getTransactionStorage();\n            meta = storage.getStorage();\n            if (isTransactionMeta(meta)) {\n                return meta;\n            }\n            return null;\n        }\n    };\n}\n\nexport { createTransactionManager };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}