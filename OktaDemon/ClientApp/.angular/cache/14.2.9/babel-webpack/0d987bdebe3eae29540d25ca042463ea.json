{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction mixinStorage(Base, StorageManager) {\n  return class OktaAuthStorage extends Base {\n    constructor(...args) {\n      super(...args);\n      const {\n        storageManager,\n        cookies,\n        storageUtil\n      } = this.options;\n      this.storageManager = new StorageManager(storageManager, cookies, storageUtil);\n    }\n\n    clearStorage() {}\n\n  };\n}\n\nexport { mixinStorage };","map":{"version":3,"names":["mixinStorage","Base","StorageManager","OktaAuthStorage","constructor","args","storageManager","cookies","storageUtil","options","clearStorage"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/storage/mixin.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nfunction mixinStorage(Base, StorageManager) {\n    return class OktaAuthStorage extends Base {\n        constructor(...args) {\n            super(...args);\n            const { storageManager, cookies, storageUtil } = this.options;\n            this.storageManager = new StorageManager(storageManager, cookies, storageUtil);\n        }\n        clearStorage() {\n        }\n    };\n}\n\nexport { mixinStorage };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,cAA5B,EAA4C;EACxC,OAAO,MAAMC,eAAN,SAA8BF,IAA9B,CAAmC;IACtCG,WAAW,CAAC,GAAGC,IAAJ,EAAU;MACjB,MAAM,GAAGA,IAAT;MACA,MAAM;QAAEC,cAAF;QAAkBC,OAAlB;QAA2BC;MAA3B,IAA2C,KAAKC,OAAtD;MACA,KAAKH,cAAL,GAAsB,IAAIJ,cAAJ,CAAmBI,cAAnB,EAAmCC,OAAnC,EAA4CC,WAA5C,CAAtB;IACH;;IACDE,YAAY,GAAG,CACd;;EAPqC,CAA1C;AASH;;AAED,SAASV,YAAT"},"metadata":{},"sourceType":"module"}