{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { TOKEN_STORAGE_NAME, CACHE_STORAGE_NAME } from '../constants.js';\nimport { SavedObject } from './SavedObject.js';\nimport { isBrowser } from '../features.js';\nimport { warn } from '../util/console.js';\n\nfunction logServerSideMemoryStorageWarning(options) {\n  if (!isBrowser() && !options.storageProvider && !options.storageProvider) {\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\nclass BaseStorageManager {\n  constructor(storageManagerOptions, cookieOptions, storageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  getOptionsForSection(sectionName, overrideOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n\n  getStorage(options) {\n    options = Object.assign({}, this.cookieOptions, options);\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let {\n      storageType,\n      storageTypes\n    } = options;\n\n    if (storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n\n    if (!storageType) {\n      storageType = this.storageUtil.findStorageType(storageTypes);\n    }\n\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  getTokenStorage(options) {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getHttpCache(options) {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n}\n\nexport { BaseStorageManager, logServerSideMemoryStorageWarning };","map":{"version":3,"names":["TOKEN_STORAGE_NAME","CACHE_STORAGE_NAME","SavedObject","isBrowser","warn","logServerSideMemoryStorageWarning","options","storageProvider","BaseStorageManager","constructor","storageManagerOptions","cookieOptions","storageUtil","getOptionsForSection","sectionName","overrideOptions","Object","assign","getStorage","storageType","storageTypes","sessionCookie","idx","indexOf","slice","undefined","findStorageType","getStorageByType","getTokenStorage","storage","storageKey","getHttpCache"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/storage/BaseStorageManager.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { TOKEN_STORAGE_NAME, CACHE_STORAGE_NAME } from '../constants.js';\nimport { SavedObject } from './SavedObject.js';\nimport { isBrowser } from '../features.js';\nimport { warn } from '../util/console.js';\n\nfunction logServerSideMemoryStorageWarning(options) {\n    if (!isBrowser() && !options.storageProvider && !options.storageProvider) {\n        warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n    }\n}\nclass BaseStorageManager {\n    constructor(storageManagerOptions, cookieOptions, storageUtil) {\n        this.storageManagerOptions = storageManagerOptions;\n        this.cookieOptions = cookieOptions;\n        this.storageUtil = storageUtil;\n    }\n    getOptionsForSection(sectionName, overrideOptions) {\n        return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n    }\n    getStorage(options) {\n        options = Object.assign({}, this.cookieOptions, options);\n        if (options.storageProvider) {\n            return options.storageProvider;\n        }\n        let { storageType, storageTypes } = options;\n        if (storageType === 'sessionStorage') {\n            options.sessionCookie = true;\n        }\n        if (storageType && storageTypes) {\n            const idx = storageTypes.indexOf(storageType);\n            if (idx >= 0) {\n                storageTypes = storageTypes.slice(idx);\n                storageType = undefined;\n            }\n        }\n        if (!storageType) {\n            storageType = this.storageUtil.findStorageType(storageTypes);\n        }\n        return this.storageUtil.getStorageByType(storageType, options);\n    }\n    getTokenStorage(options) {\n        options = this.getOptionsForSection('token', options);\n        logServerSideMemoryStorageWarning(options);\n        const storage = this.getStorage(options);\n        const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n        return new SavedObject(storage, storageKey);\n    }\n    getHttpCache(options) {\n        options = this.getOptionsForSection('cache', options);\n        const storage = this.getStorage(options);\n        const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n        return new SavedObject(storage, storageKey);\n    }\n}\n\nexport { BaseStorageManager, logServerSideMemoryStorageWarning };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,kBAAT,EAA6BC,kBAA7B,QAAuD,iBAAvD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,IAAT,QAAqB,oBAArB;;AAEA,SAASC,iCAAT,CAA2CC,OAA3C,EAAoD;EAChD,IAAI,CAACH,SAAS,EAAV,IAAgB,CAACG,OAAO,CAACC,eAAzB,IAA4C,CAACD,OAAO,CAACC,eAAzD,EAA0E;IACtEH,IAAI,CAAC,6KAAD,CAAJ;EACH;AACJ;;AACD,MAAMI,kBAAN,CAAyB;EACrBC,WAAW,CAACC,qBAAD,EAAwBC,aAAxB,EAAuCC,WAAvC,EAAoD;IAC3D,KAAKF,qBAAL,GAA6BA,qBAA7B;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,WAAL,GAAmBA,WAAnB;EACH;;EACDC,oBAAoB,CAACC,WAAD,EAAcC,eAAd,EAA+B;IAC/C,OAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKP,qBAAL,CAA2BI,WAA3B,CAAlB,EAA2DC,eAA3D,CAAP;EACH;;EACDG,UAAU,CAACZ,OAAD,EAAU;IAChBA,OAAO,GAAGU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKN,aAAvB,EAAsCL,OAAtC,CAAV;;IACA,IAAIA,OAAO,CAACC,eAAZ,EAA6B;MACzB,OAAOD,OAAO,CAACC,eAAf;IACH;;IACD,IAAI;MAAEY,WAAF;MAAeC;IAAf,IAAgCd,OAApC;;IACA,IAAIa,WAAW,KAAK,gBAApB,EAAsC;MAClCb,OAAO,CAACe,aAAR,GAAwB,IAAxB;IACH;;IACD,IAAIF,WAAW,IAAIC,YAAnB,EAAiC;MAC7B,MAAME,GAAG,GAAGF,YAAY,CAACG,OAAb,CAAqBJ,WAArB,CAAZ;;MACA,IAAIG,GAAG,IAAI,CAAX,EAAc;QACVF,YAAY,GAAGA,YAAY,CAACI,KAAb,CAAmBF,GAAnB,CAAf;QACAH,WAAW,GAAGM,SAAd;MACH;IACJ;;IACD,IAAI,CAACN,WAAL,EAAkB;MACdA,WAAW,GAAG,KAAKP,WAAL,CAAiBc,eAAjB,CAAiCN,YAAjC,CAAd;IACH;;IACD,OAAO,KAAKR,WAAL,CAAiBe,gBAAjB,CAAkCR,WAAlC,EAA+Cb,OAA/C,CAAP;EACH;;EACDsB,eAAe,CAACtB,OAAD,EAAU;IACrBA,OAAO,GAAG,KAAKO,oBAAL,CAA0B,OAA1B,EAAmCP,OAAnC,CAAV;IACAD,iCAAiC,CAACC,OAAD,CAAjC;IACA,MAAMuB,OAAO,GAAG,KAAKX,UAAL,CAAgBZ,OAAhB,CAAhB;IACA,MAAMwB,UAAU,GAAGxB,OAAO,CAACwB,UAAR,IAAsB9B,kBAAzC;IACA,OAAO,IAAIE,WAAJ,CAAgB2B,OAAhB,EAAyBC,UAAzB,CAAP;EACH;;EACDC,YAAY,CAACzB,OAAD,EAAU;IAClBA,OAAO,GAAG,KAAKO,oBAAL,CAA0B,OAA1B,EAAmCP,OAAnC,CAAV;IACA,MAAMuB,OAAO,GAAG,KAAKX,UAAL,CAAgBZ,OAAhB,CAAhB;IACA,MAAMwB,UAAU,GAAGxB,OAAO,CAACwB,UAAR,IAAsB7B,kBAAzC;IACA,OAAO,IAAIC,WAAJ,CAAgB2B,OAAhB,EAAyBC,UAAzB,CAAP;EACH;;AA1CoB;;AA6CzB,SAAStB,kBAAT,EAA6BH,iCAA7B"},"metadata":{},"sourceType":"module"}