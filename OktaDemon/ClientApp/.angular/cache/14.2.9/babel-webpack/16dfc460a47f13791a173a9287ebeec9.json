{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { validateVersionConfig, makeIdxState } from './idxState/index.js';\nimport { isRawIdxResponse } from './types/idx-js.js';\nimport { isAuthApiError } from '../errors/index.js';\nimport { getOAuthDomain } from '../oidc/util/oauth.js';\nimport { IDX_API_VERSION } from '../constants.js';\nimport { httpRequest } from '../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\n\nfunction introspect(_x) {\n  return _introspect.apply(this, arguments);\n}\n\nfunction _introspect() {\n  _introspect = _asyncToGenerator(function* (authClient, options = {}) {\n    var _a;\n\n    let rawIdxResponse;\n    let requestDidSucceed;\n    const savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n\n    if (savedIdxResponse) {\n      rawIdxResponse = savedIdxResponse.rawIdxResponse;\n      requestDidSucceed = savedIdxResponse.requestDidSucceed;\n    }\n\n    if (!rawIdxResponse) {\n      const version = options.version || IDX_API_VERSION;\n      const domain = getOAuthDomain(authClient);\n      const {\n        interactionHandle,\n        stateHandle\n      } = options;\n      const withCredentials = (_a = options.withCredentials) !== null && _a !== void 0 ? _a : true;\n\n      try {\n        requestDidSucceed = true;\n        validateVersionConfig(version);\n        const url = `${domain}/idp/idx/introspect`;\n        const body = stateHandle ? {\n          stateToken: stateHandle\n        } : {\n          interactionHandle\n        };\n        const headers = {\n          'Content-Type': `application/ion+json; okta-version=${version}`,\n          Accept: `application/ion+json; okta-version=${version}`\n        };\n        rawIdxResponse = yield httpRequest(authClient, {\n          method: 'POST',\n          url,\n          headers,\n          withCredentials,\n          args: body\n        });\n      } catch (err) {\n        if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n          rawIdxResponse = err.xhr.responseJSON;\n          requestDidSucceed = false;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const {\n      withCredentials\n    } = options;\n    return makeIdxState(authClient, rawIdxResponse, {\n      withCredentials\n    }, requestDidSucceed);\n  });\n  return _introspect.apply(this, arguments);\n}\n\nexport { introspect };","map":{"version":3,"names":["validateVersionConfig","makeIdxState","isRawIdxResponse","isAuthApiError","getOAuthDomain","IDX_API_VERSION","httpRequest","introspect","authClient","options","_a","rawIdxResponse","requestDidSucceed","savedIdxResponse","transactionManager","loadIdxResponse","version","domain","interactionHandle","stateHandle","withCredentials","url","body","stateToken","headers","Accept","method","args","err","xhr","responseJSON"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/introspect.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { validateVersionConfig, makeIdxState } from './idxState/index.js';\nimport { isRawIdxResponse } from './types/idx-js.js';\nimport { isAuthApiError } from '../errors/index.js';\nimport { getOAuthDomain } from '../oidc/util/oauth.js';\nimport { IDX_API_VERSION } from '../constants.js';\nimport { httpRequest } from '../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\n\nasync function introspect(authClient, options = {}) {\n    var _a;\n    let rawIdxResponse;\n    let requestDidSucceed;\n    const savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n    if (savedIdxResponse) {\n        rawIdxResponse = savedIdxResponse.rawIdxResponse;\n        requestDidSucceed = savedIdxResponse.requestDidSucceed;\n    }\n    if (!rawIdxResponse) {\n        const version = options.version || IDX_API_VERSION;\n        const domain = getOAuthDomain(authClient);\n        const { interactionHandle, stateHandle } = options;\n        const withCredentials = (_a = options.withCredentials) !== null && _a !== void 0 ? _a : true;\n        try {\n            requestDidSucceed = true;\n            validateVersionConfig(version);\n            const url = `${domain}/idp/idx/introspect`;\n            const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n            const headers = {\n                'Content-Type': `application/ion+json; okta-version=${version}`,\n                Accept: `application/ion+json; okta-version=${version}`,\n            };\n            rawIdxResponse = await httpRequest(authClient, {\n                method: 'POST',\n                url,\n                headers,\n                withCredentials,\n                args: body\n            });\n        }\n        catch (err) {\n            if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n                rawIdxResponse = err.xhr.responseJSON;\n                requestDidSucceed = false;\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    const { withCredentials } = options;\n    return makeIdxState(authClient, rawIdxResponse, { withCredentials }, requestDidSucceed);\n}\n\nexport { introspect };\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,qBAAT,EAAgCC,YAAhC,QAAoD,qBAApD;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAO,cAAP;AACA,OAAO,WAAP;AACA,OAAO,aAAP;;SAEeC,U;;;;;kCAAf,WAA0BC,UAA1B,EAAsCC,OAAO,GAAG,EAAhD,EAAoD;IAChD,IAAIC,EAAJ;;IACA,IAAIC,cAAJ;IACA,IAAIC,iBAAJ;IACA,MAAMC,gBAAgB,GAAGL,UAAU,CAACM,kBAAX,CAA8BC,eAA9B,CAA8CN,OAA9C,CAAzB;;IACA,IAAII,gBAAJ,EAAsB;MAClBF,cAAc,GAAGE,gBAAgB,CAACF,cAAlC;MACAC,iBAAiB,GAAGC,gBAAgB,CAACD,iBAArC;IACH;;IACD,IAAI,CAACD,cAAL,EAAqB;MACjB,MAAMK,OAAO,GAAGP,OAAO,CAACO,OAAR,IAAmBX,eAAnC;MACA,MAAMY,MAAM,GAAGb,cAAc,CAACI,UAAD,CAA7B;MACA,MAAM;QAAEU,iBAAF;QAAqBC;MAArB,IAAqCV,OAA3C;MACA,MAAMW,eAAe,GAAG,CAACV,EAAE,GAAGD,OAAO,CAACW,eAAd,MAAmC,IAAnC,IAA2CV,EAAE,KAAK,KAAK,CAAvD,GAA2DA,EAA3D,GAAgE,IAAxF;;MACA,IAAI;QACAE,iBAAiB,GAAG,IAApB;QACAZ,qBAAqB,CAACgB,OAAD,CAArB;QACA,MAAMK,GAAG,GAAI,GAAEJ,MAAO,qBAAtB;QACA,MAAMK,IAAI,GAAGH,WAAW,GAAG;UAAEI,UAAU,EAAEJ;QAAd,CAAH,GAAiC;UAAED;QAAF,CAAzD;QACA,MAAMM,OAAO,GAAG;UACZ,gBAAiB,sCAAqCR,OAAQ,EADlD;UAEZS,MAAM,EAAG,sCAAqCT,OAAQ;QAF1C,CAAhB;QAIAL,cAAc,SAASL,WAAW,CAACE,UAAD,EAAa;UAC3CkB,MAAM,EAAE,MADmC;UAE3CL,GAF2C;UAG3CG,OAH2C;UAI3CJ,eAJ2C;UAK3CO,IAAI,EAAEL;QALqC,CAAb,CAAlC;MAOH,CAhBD,CAiBA,OAAOM,GAAP,EAAY;QACR,IAAIzB,cAAc,CAACyB,GAAD,CAAd,IAAuBA,GAAG,CAACC,GAA3B,IAAkC3B,gBAAgB,CAAC0B,GAAG,CAACC,GAAJ,CAAQC,YAAT,CAAtD,EAA8E;UAC1EnB,cAAc,GAAGiB,GAAG,CAACC,GAAJ,CAAQC,YAAzB;UACAlB,iBAAiB,GAAG,KAApB;QACH,CAHD,MAIK;UACD,MAAMgB,GAAN;QACH;MACJ;IACJ;;IACD,MAAM;MAAER;IAAF,IAAsBX,OAA5B;IACA,OAAOR,YAAY,CAACO,UAAD,EAAaG,cAAb,EAA6B;MAAES;IAAF,CAA7B,EAAkDR,iBAAlD,CAAnB;EACH,C;;;;AAED,SAASL,UAAT"},"metadata":{},"sourceType":"module"}