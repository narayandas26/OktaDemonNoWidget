{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { createTransactionManager } from '../oidc/TransactionManager.js';\nimport { isRawIdxResponse } from './types/idx-js.js';\n\nfunction createIdxTransactionManager() {\n  const TransactionManager = createTransactionManager();\n  return class IdxTransactionManager extends TransactionManager {\n    constructor(options) {\n      super(options);\n    }\n\n    clear(options = {}) {\n      super.clear(options);\n\n      if (options.clearIdxResponse !== false) {\n        this.clearIdxResponse();\n      }\n    }\n\n    saveIdxResponse(data) {\n      if (!this.saveLastResponse) {\n        return;\n      }\n\n      const storage = this.storageManager.getIdxResponseStorage();\n\n      if (!storage) {\n        return;\n      }\n\n      storage.setStorage(data);\n    }\n\n    loadIdxResponse(options) {\n      if (!this.saveLastResponse) {\n        return null;\n      }\n\n      const storage = this.storageManager.getIdxResponseStorage();\n\n      if (!storage) {\n        return null;\n      }\n\n      const storedValue = storage.getStorage();\n\n      if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n        return null;\n      }\n\n      if (options) {\n        const {\n          stateHandle,\n          interactionHandle\n        } = options;\n\n        if (stateHandle && storedValue.stateHandle !== stateHandle) {\n          return null;\n        }\n\n        if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n          return null;\n        }\n      }\n\n      return storedValue;\n    }\n\n    clearIdxResponse() {\n      if (!this.saveLastResponse) {\n        return;\n      }\n\n      const storage = this.storageManager.getIdxResponseStorage();\n      storage === null || storage === void 0 ? void 0 : storage.clearStorage();\n    }\n\n  };\n}\n\nexport { createIdxTransactionManager };","map":{"version":3,"names":["createTransactionManager","isRawIdxResponse","createIdxTransactionManager","TransactionManager","IdxTransactionManager","constructor","options","clear","clearIdxResponse","saveIdxResponse","data","saveLastResponse","storage","storageManager","getIdxResponseStorage","setStorage","loadIdxResponse","storedValue","getStorage","rawIdxResponse","stateHandle","interactionHandle","clearStorage"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/IdxTransactionManager.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createTransactionManager } from '../oidc/TransactionManager.js';\nimport { isRawIdxResponse } from './types/idx-js.js';\n\nfunction createIdxTransactionManager() {\n    const TransactionManager = createTransactionManager();\n    return class IdxTransactionManager extends TransactionManager {\n        constructor(options) {\n            super(options);\n        }\n        clear(options = {}) {\n            super.clear(options);\n            if (options.clearIdxResponse !== false) {\n                this.clearIdxResponse();\n            }\n        }\n        saveIdxResponse(data) {\n            if (!this.saveLastResponse) {\n                return;\n            }\n            const storage = this.storageManager.getIdxResponseStorage();\n            if (!storage) {\n                return;\n            }\n            storage.setStorage(data);\n        }\n        loadIdxResponse(options) {\n            if (!this.saveLastResponse) {\n                return null;\n            }\n            const storage = this.storageManager.getIdxResponseStorage();\n            if (!storage) {\n                return null;\n            }\n            const storedValue = storage.getStorage();\n            if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n                return null;\n            }\n            if (options) {\n                const { stateHandle, interactionHandle } = options;\n                if (stateHandle && storedValue.stateHandle !== stateHandle) {\n                    return null;\n                }\n                if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n                    return null;\n                }\n            }\n            return storedValue;\n        }\n        clearIdxResponse() {\n            if (!this.saveLastResponse) {\n                return;\n            }\n            const storage = this.storageManager.getIdxResponseStorage();\n            storage === null || storage === void 0 ? void 0 : storage.clearStorage();\n        }\n    };\n}\n\nexport { createIdxTransactionManager };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,wBAAT,QAAyC,+BAAzC;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,SAASC,2BAAT,GAAuC;EACnC,MAAMC,kBAAkB,GAAGH,wBAAwB,EAAnD;EACA,OAAO,MAAMI,qBAAN,SAAoCD,kBAApC,CAAuD;IAC1DE,WAAW,CAACC,OAAD,EAAU;MACjB,MAAMA,OAAN;IACH;;IACDC,KAAK,CAACD,OAAO,GAAG,EAAX,EAAe;MAChB,MAAMC,KAAN,CAAYD,OAAZ;;MACA,IAAIA,OAAO,CAACE,gBAAR,KAA6B,KAAjC,EAAwC;QACpC,KAAKA,gBAAL;MACH;IACJ;;IACDC,eAAe,CAACC,IAAD,EAAO;MAClB,IAAI,CAAC,KAAKC,gBAAV,EAA4B;QACxB;MACH;;MACD,MAAMC,OAAO,GAAG,KAAKC,cAAL,CAAoBC,qBAApB,EAAhB;;MACA,IAAI,CAACF,OAAL,EAAc;QACV;MACH;;MACDA,OAAO,CAACG,UAAR,CAAmBL,IAAnB;IACH;;IACDM,eAAe,CAACV,OAAD,EAAU;MACrB,IAAI,CAAC,KAAKK,gBAAV,EAA4B;QACxB,OAAO,IAAP;MACH;;MACD,MAAMC,OAAO,GAAG,KAAKC,cAAL,CAAoBC,qBAApB,EAAhB;;MACA,IAAI,CAACF,OAAL,EAAc;QACV,OAAO,IAAP;MACH;;MACD,MAAMK,WAAW,GAAGL,OAAO,CAACM,UAAR,EAApB;;MACA,IAAI,CAACD,WAAD,IAAgB,CAAChB,gBAAgB,CAACgB,WAAW,CAACE,cAAb,CAArC,EAAmE;QAC/D,OAAO,IAAP;MACH;;MACD,IAAIb,OAAJ,EAAa;QACT,MAAM;UAAEc,WAAF;UAAeC;QAAf,IAAqCf,OAA3C;;QACA,IAAIc,WAAW,IAAIH,WAAW,CAACG,WAAZ,KAA4BA,WAA/C,EAA4D;UACxD,OAAO,IAAP;QACH;;QACD,IAAIC,iBAAiB,IAAIJ,WAAW,CAACI,iBAAZ,KAAkCA,iBAA3D,EAA8E;UAC1E,OAAO,IAAP;QACH;MACJ;;MACD,OAAOJ,WAAP;IACH;;IACDT,gBAAgB,GAAG;MACf,IAAI,CAAC,KAAKG,gBAAV,EAA4B;QACxB;MACH;;MACD,MAAMC,OAAO,GAAG,KAAKC,cAAL,CAAoBC,qBAApB,EAAhB;MACAF,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACU,YAAR,EAAlD;IACH;;EAjDyD,CAA9D;AAmDH;;AAED,SAASpB,2BAAT"},"metadata":{},"sourceType":"module"}