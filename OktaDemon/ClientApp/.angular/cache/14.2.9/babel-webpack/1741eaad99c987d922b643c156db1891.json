{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Base/Remediator.js';\n\nclass EnrollPoll extends Remediator {\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'enroll-poll';\n  }\n\n  getNextStep(authClient, context) {\n    const common = super.getNextStep(authClient, context);\n    let authenticator = this.getAuthenticator();\n\n    if (!authenticator && (context === null || context === void 0 ? void 0 : context.currentAuthenticator)) {\n      authenticator = context.currentAuthenticator.value;\n    }\n\n    return Object.assign(Object.assign({}, common), {\n      authenticator,\n      poll: {\n        required: true,\n        refresh: this.remediation.refresh\n      }\n    });\n  }\n\n  getValuesAfterProceed() {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n    return trimmedValues.reduce((values, valueKey) => Object.assign(Object.assign({}, values), {\n      [valueKey]: this.values[valueKey]\n    }), {});\n  }\n\n}\n\nEnrollPoll.remediationName = 'enroll-poll';\nexport { EnrollPoll };","map":{"version":3,"names":["Remediator","EnrollPoll","canRemediate","values","startPolling","options","step","getNextStep","authClient","context","common","authenticator","getAuthenticator","currentAuthenticator","value","Object","assign","poll","required","refresh","remediation","getValuesAfterProceed","trimmedValues","keys","filter","valueKey","reduce","remediationName"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/EnrollPoll.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\n\nclass EnrollPoll extends Remediator {\n    canRemediate() {\n        return !!this.values.startPolling || this.options.step === 'enroll-poll';\n    }\n    getNextStep(authClient, context) {\n        const common = super.getNextStep(authClient, context);\n        let authenticator = this.getAuthenticator();\n        if (!authenticator && (context === null || context === void 0 ? void 0 : context.currentAuthenticator)) {\n            authenticator = context.currentAuthenticator.value;\n        }\n        return Object.assign(Object.assign({}, common), { authenticator, poll: {\n                required: true,\n                refresh: this.remediation.refresh\n            } });\n    }\n    getValuesAfterProceed() {\n        let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n        return trimmedValues.reduce((values, valueKey) => (Object.assign(Object.assign({}, values), { [valueKey]: this.values[valueKey] })), {});\n    }\n}\nEnrollPoll.remediationName = 'enroll-poll';\n\nexport { EnrollPoll };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,sBAA3B;;AAEA,MAAMC,UAAN,SAAyBD,UAAzB,CAAoC;EAChCE,YAAY,GAAG;IACX,OAAO,CAAC,CAAC,KAAKC,MAAL,CAAYC,YAAd,IAA8B,KAAKC,OAAL,CAAaC,IAAb,KAAsB,aAA3D;EACH;;EACDC,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;IAC7B,MAAMC,MAAM,GAAG,MAAMH,WAAN,CAAkBC,UAAlB,EAA8BC,OAA9B,CAAf;IACA,IAAIE,aAAa,GAAG,KAAKC,gBAAL,EAApB;;IACA,IAAI,CAACD,aAAD,KAAmBF,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACI,oBAA7E,CAAJ,EAAwG;MACpGF,aAAa,GAAGF,OAAO,CAACI,oBAAR,CAA6BC,KAA7C;IACH;;IACD,OAAOC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAlB,CAAd,EAAyC;MAAEC,aAAF;MAAiBM,IAAI,EAAE;QAC/DC,QAAQ,EAAE,IADqD;QAE/DC,OAAO,EAAE,KAAKC,WAAL,CAAiBD;MAFqC;IAAvB,CAAzC,CAAP;EAIH;;EACDE,qBAAqB,GAAG;IACpB,IAAIC,aAAa,GAAGP,MAAM,CAACQ,IAAP,CAAY,KAAKpB,MAAjB,EAAyBqB,MAAzB,CAAgCC,QAAQ,IAAIA,QAAQ,KAAK,cAAzD,CAApB;IACA,OAAOH,aAAa,CAACI,MAAd,CAAqB,CAACvB,MAAD,EAASsB,QAAT,KAAuBV,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,MAAlB,CAAd,EAAyC;MAAE,CAACsB,QAAD,GAAY,KAAKtB,MAAL,CAAYsB,QAAZ;IAAd,CAAzC,CAA5C,EAA8H,EAA9H,CAAP;EACH;;AAlB+B;;AAoBpCxB,UAAU,CAAC0B,eAAX,GAA6B,aAA7B;AAEA,SAAS1B,UAAT"},"metadata":{},"sourceType":"module"}