{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Authenticator } from './Authenticator.js';\n\nclass VerificationCodeAuthenticator extends Authenticator {\n  canVerify(values) {\n    return !!(values.credentials || values.verificationCode || values.otp);\n  }\n\n  mapCredentials(values) {\n    const {\n      credentials,\n      verificationCode,\n      otp\n    } = values;\n\n    if (!credentials && !verificationCode && !otp) {\n      return;\n    }\n\n    return credentials || {\n      passcode: verificationCode || otp\n    };\n  }\n\n  getInputs(idxRemediationValue) {\n    var _a;\n\n    return Object.assign(Object.assign({}, (_a = idxRemediationValue.form) === null || _a === void 0 ? void 0 : _a.value[0]), {\n      name: 'verificationCode',\n      type: 'string',\n      required: idxRemediationValue.required\n    });\n  }\n\n}\n\nexport { VerificationCodeAuthenticator };","map":{"version":3,"names":["Authenticator","VerificationCodeAuthenticator","canVerify","values","credentials","verificationCode","otp","mapCredentials","passcode","getInputs","idxRemediationValue","_a","Object","assign","form","value","name","type","required"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/authenticator/VerificationCodeAuthenticator.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Authenticator } from './Authenticator.js';\n\nclass VerificationCodeAuthenticator extends Authenticator {\n    canVerify(values) {\n        return !!(values.credentials || values.verificationCode || values.otp);\n    }\n    mapCredentials(values) {\n        const { credentials, verificationCode, otp } = values;\n        if (!credentials && !verificationCode && !otp) {\n            return;\n        }\n        return credentials || { passcode: verificationCode || otp };\n    }\n    getInputs(idxRemediationValue) {\n        var _a;\n        return Object.assign(Object.assign({}, (_a = idxRemediationValue.form) === null || _a === void 0 ? void 0 : _a.value[0]), { name: 'verificationCode', type: 'string', required: idxRemediationValue.required });\n    }\n}\n\nexport { VerificationCodeAuthenticator };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAT,QAA8B,oBAA9B;;AAEA,MAAMC,6BAAN,SAA4CD,aAA5C,CAA0D;EACtDE,SAAS,CAACC,MAAD,EAAS;IACd,OAAO,CAAC,EAAEA,MAAM,CAACC,WAAP,IAAsBD,MAAM,CAACE,gBAA7B,IAAiDF,MAAM,CAACG,GAA1D,CAAR;EACH;;EACDC,cAAc,CAACJ,MAAD,EAAS;IACnB,MAAM;MAAEC,WAAF;MAAeC,gBAAf;MAAiCC;IAAjC,IAAyCH,MAA/C;;IACA,IAAI,CAACC,WAAD,IAAgB,CAACC,gBAAjB,IAAqC,CAACC,GAA1C,EAA+C;MAC3C;IACH;;IACD,OAAOF,WAAW,IAAI;MAAEI,QAAQ,EAAEH,gBAAgB,IAAIC;IAAhC,CAAtB;EACH;;EACDG,SAAS,CAACC,mBAAD,EAAsB;IAC3B,IAAIC,EAAJ;;IACA,OAAOC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,CAACF,EAAE,GAAGD,mBAAmB,CAACI,IAA1B,MAAoC,IAApC,IAA4CH,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACI,KAAH,CAAS,CAAT,CAAvF,CAAd,EAAmH;MAAEC,IAAI,EAAE,kBAAR;MAA4BC,IAAI,EAAE,QAAlC;MAA4CC,QAAQ,EAAER,mBAAmB,CAACQ;IAA1E,CAAnH,CAAP;EACH;;AAdqD;;AAiB1D,SAASjB,6BAAT"},"metadata":{},"sourceType":"module"}