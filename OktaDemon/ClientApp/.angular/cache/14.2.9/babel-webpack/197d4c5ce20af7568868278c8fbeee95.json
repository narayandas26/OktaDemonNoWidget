{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport AuthSdkError from '../../errors/AuthSdkError.js';\nimport { find } from '../../util/object.js';\nimport { get } from '../../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\n\nfunction getWellKnown(sdk, issuer) {\n  var authServerUri = issuer || sdk.options.issuer;\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nfunction getKey(sdk, issuer, kid) {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n  return getWellKnown(sdk, issuer).then(function (wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n\n    if (cachedResponse && Date.now() / 1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    httpCache.clearStorage(jwksUri);\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    }).then(function (res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n\nexport { getKey, getWellKnown };","map":{"version":3,"names":["AuthSdkError","find","get","getWellKnown","sdk","issuer","authServerUri","options","cacheResponse","getKey","kid","httpCache","storageManager","getHttpCache","cookies","then","wellKnown","jwksUri","cacheContents","getStorage","cachedResponse","Date","now","expiresAt","cachedKey","response","keys","clearStorage","res","key"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/oidc/endpoints/well-known.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../../errors/AuthSdkError.js';\nimport { find } from '../../util/object.js';\nimport { get } from '../../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\n\nfunction getWellKnown(sdk, issuer) {\n    var authServerUri = (issuer || sdk.options.issuer);\n    return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n        cacheResponse: true\n    });\n}\nfunction getKey(sdk, issuer, kid) {\n    var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n    return getWellKnown(sdk, issuer)\n        .then(function (wellKnown) {\n        var jwksUri = wellKnown['jwks_uri'];\n        var cacheContents = httpCache.getStorage();\n        var cachedResponse = cacheContents[jwksUri];\n        if (cachedResponse && Date.now() / 1000 < cachedResponse.expiresAt) {\n            var cachedKey = find(cachedResponse.response.keys, {\n                kid: kid\n            });\n            if (cachedKey) {\n                return cachedKey;\n            }\n        }\n        httpCache.clearStorage(jwksUri);\n        return get(sdk, jwksUri, {\n            cacheResponse: true\n        })\n            .then(function (res) {\n            var key = find(res.keys, {\n                kid: kid\n            });\n            if (key) {\n                return key;\n            }\n            throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n        });\n    });\n}\n\nexport { getKey, getWellKnown };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,YAAP,MAAyB,8BAAzB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,GAAT,QAAoB,uBAApB;AACA,OAAO,cAAP;AACA,OAAO,WAAP;AACA,OAAO,aAAP;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,MAA3B,EAAmC;EAC/B,IAAIC,aAAa,GAAID,MAAM,IAAID,GAAG,CAACG,OAAJ,CAAYF,MAA3C;EACA,OAAOH,GAAG,CAACE,GAAD,EAAME,aAAa,GAAG,mCAAtB,EAA2D;IACjEE,aAAa,EAAE;EADkD,CAA3D,CAAV;AAGH;;AACD,SAASC,MAAT,CAAgBL,GAAhB,EAAqBC,MAArB,EAA6BK,GAA7B,EAAkC;EAC9B,IAAIC,SAAS,GAAGP,GAAG,CAACQ,cAAJ,CAAmBC,YAAnB,CAAgCT,GAAG,CAACG,OAAJ,CAAYO,OAA5C,CAAhB;EACA,OAAOX,YAAY,CAACC,GAAD,EAAMC,MAAN,CAAZ,CACFU,IADE,CACG,UAAUC,SAAV,EAAqB;IAC3B,IAAIC,OAAO,GAAGD,SAAS,CAAC,UAAD,CAAvB;IACA,IAAIE,aAAa,GAAGP,SAAS,CAACQ,UAAV,EAApB;IACA,IAAIC,cAAc,GAAGF,aAAa,CAACD,OAAD,CAAlC;;IACA,IAAIG,cAAc,IAAIC,IAAI,CAACC,GAAL,KAAa,IAAb,GAAoBF,cAAc,CAACG,SAAzD,EAAoE;MAChE,IAAIC,SAAS,GAAGvB,IAAI,CAACmB,cAAc,CAACK,QAAf,CAAwBC,IAAzB,EAA+B;QAC/ChB,GAAG,EAAEA;MAD0C,CAA/B,CAApB;;MAGA,IAAIc,SAAJ,EAAe;QACX,OAAOA,SAAP;MACH;IACJ;;IACDb,SAAS,CAACgB,YAAV,CAAuBV,OAAvB;IACA,OAAOf,GAAG,CAACE,GAAD,EAAMa,OAAN,EAAe;MACrBT,aAAa,EAAE;IADM,CAAf,CAAH,CAGFO,IAHE,CAGG,UAAUa,GAAV,EAAe;MACrB,IAAIC,GAAG,GAAG5B,IAAI,CAAC2B,GAAG,CAACF,IAAL,EAAW;QACrBhB,GAAG,EAAEA;MADgB,CAAX,CAAd;;MAGA,IAAImB,GAAJ,EAAS;QACL,OAAOA,GAAP;MACH;;MACD,MAAM,IAAI7B,YAAJ,CAAiB,iBAAiBU,GAAjB,GAAuB,uCAAxC,CAAN;IACH,CAXM,CAAP;EAYH,CA1BM,CAAP;AA2BH;;AAED,SAASD,MAAT,EAAiBN,YAAjB"},"metadata":{},"sourceType":"module"}