{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { isTransactionMeta } from '../types/Transaction.js';\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000;\n\nfunction pruneSharedStorage(storageManager) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nfunction saveTransactionToSharedStorage(storageManager, state, meta) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\nfunction loadTransactionFromSharedStorage(storageManager, state) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n\n  return null;\n}\n\nfunction clearTransactionFromSharedStorage(storageManager, state) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n\nexport { clearTransactionFromSharedStorage, loadTransactionFromSharedStorage, pruneSharedStorage, saveTransactionToSharedStorage };","map":{"version":3,"names":["isTransactionMeta","MAX_ENTRY_LIFETIME","pruneSharedStorage","storageManager","sharedStorage","getSharedTansactionStorage","entries","getStorage","Object","keys","forEach","state","entry","age","Date","now","dateCreated","setStorage","saveTransactionToSharedStorage","meta","transaction","loadTransactionFromSharedStorage","clearTransactionFromSharedStorage"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/oidc/util/sharedStorage.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { isTransactionMeta } from '../types/Transaction.js';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000;\nfunction pruneSharedStorage(storageManager) {\n    const sharedStorage = storageManager.getSharedTansactionStorage();\n    const entries = sharedStorage.getStorage();\n    Object.keys(entries).forEach(state => {\n        const entry = entries[state];\n        const age = Date.now() - entry.dateCreated;\n        if (age > MAX_ENTRY_LIFETIME) {\n            delete entries[state];\n        }\n    });\n    sharedStorage.setStorage(entries);\n}\nfunction saveTransactionToSharedStorage(storageManager, state, meta) {\n    const sharedStorage = storageManager.getSharedTansactionStorage();\n    const entries = sharedStorage.getStorage();\n    entries[state] = {\n        dateCreated: Date.now(),\n        transaction: meta\n    };\n    sharedStorage.setStorage(entries);\n}\nfunction loadTransactionFromSharedStorage(storageManager, state) {\n    const sharedStorage = storageManager.getSharedTansactionStorage();\n    const entries = sharedStorage.getStorage();\n    const entry = entries[state];\n    if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n        return entry.transaction;\n    }\n    return null;\n}\nfunction clearTransactionFromSharedStorage(storageManager, state) {\n    const sharedStorage = storageManager.getSharedTansactionStorage();\n    const entries = sharedStorage.getStorage();\n    delete entries[state];\n    sharedStorage.setStorage(entries);\n}\n\nexport { clearTransactionFromSharedStorage, loadTransactionFromSharedStorage, pruneSharedStorage, saveTransactionToSharedStorage };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,iBAAT,QAAkC,yBAAlC;AAEA,MAAMC,kBAAkB,GAAG,KAAK,EAAL,GAAU,IAArC;;AACA,SAASC,kBAAT,CAA4BC,cAA5B,EAA4C;EACxC,MAAMC,aAAa,GAAGD,cAAc,CAACE,0BAAf,EAAtB;EACA,MAAMC,OAAO,GAAGF,aAAa,CAACG,UAAd,EAAhB;EACAC,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,OAArB,CAA6BC,KAAK,IAAI;IAClC,MAAMC,KAAK,GAAGN,OAAO,CAACK,KAAD,CAArB;IACA,MAAME,GAAG,GAAGC,IAAI,CAACC,GAAL,KAAaH,KAAK,CAACI,WAA/B;;IACA,IAAIH,GAAG,GAAGZ,kBAAV,EAA8B;MAC1B,OAAOK,OAAO,CAACK,KAAD,CAAd;IACH;EACJ,CAND;EAOAP,aAAa,CAACa,UAAd,CAAyBX,OAAzB;AACH;;AACD,SAASY,8BAAT,CAAwCf,cAAxC,EAAwDQ,KAAxD,EAA+DQ,IAA/D,EAAqE;EACjE,MAAMf,aAAa,GAAGD,cAAc,CAACE,0BAAf,EAAtB;EACA,MAAMC,OAAO,GAAGF,aAAa,CAACG,UAAd,EAAhB;EACAD,OAAO,CAACK,KAAD,CAAP,GAAiB;IACbK,WAAW,EAAEF,IAAI,CAACC,GAAL,EADA;IAEbK,WAAW,EAAED;EAFA,CAAjB;EAIAf,aAAa,CAACa,UAAd,CAAyBX,OAAzB;AACH;;AACD,SAASe,gCAAT,CAA0ClB,cAA1C,EAA0DQ,KAA1D,EAAiE;EAC7D,MAAMP,aAAa,GAAGD,cAAc,CAACE,0BAAf,EAAtB;EACA,MAAMC,OAAO,GAAGF,aAAa,CAACG,UAAd,EAAhB;EACA,MAAMK,KAAK,GAAGN,OAAO,CAACK,KAAD,CAArB;;EACA,IAAIC,KAAK,IAAIA,KAAK,CAACQ,WAAf,IAA8BpB,iBAAiB,CAACY,KAAK,CAACQ,WAAP,CAAnD,EAAwE;IACpE,OAAOR,KAAK,CAACQ,WAAb;EACH;;EACD,OAAO,IAAP;AACH;;AACD,SAASE,iCAAT,CAA2CnB,cAA3C,EAA2DQ,KAA3D,EAAkE;EAC9D,MAAMP,aAAa,GAAGD,cAAc,CAACE,0BAAf,EAAtB;EACA,MAAMC,OAAO,GAAGF,aAAa,CAACG,UAAd,EAAhB;EACA,OAAOD,OAAO,CAACK,KAAD,CAAd;EACAP,aAAa,CAACa,UAAd,CAAyBX,OAAzB;AACH;;AAED,SAASgB,iCAAT,EAA4CD,gCAA5C,EAA8EnB,kBAA9E,EAAkGgB,8BAAlG"},"metadata":{},"sourceType":"module"}