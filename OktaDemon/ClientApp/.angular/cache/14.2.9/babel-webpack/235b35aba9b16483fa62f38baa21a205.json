{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport CustomError from '../errors/CustomError.js';\nimport { urlParamsToObject } from '../oidc/util/urlParams.js';\n\nclass EmailVerifyCallbackError extends CustomError {\n  constructor(state, otp) {\n    super(`Enter the OTP code in the originating client: ${otp}`);\n    this.name = 'EmailVerifyCallbackError';\n    this.state = state;\n    this.otp = otp;\n  }\n\n}\n\nfunction isEmailVerifyCallbackError(error) {\n  return error.name === 'EmailVerifyCallbackError';\n}\n\nfunction isEmailVerifyCallback(urlPath) {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\nfunction parseEmailVerifyCallback(urlPath) {\n  return urlParamsToObject(urlPath);\n}\n\nfunction handleEmailVerifyCallback(_x, _x2) {\n  return _handleEmailVerifyCallback.apply(this, arguments);\n}\n\nfunction _handleEmailVerifyCallback() {\n  _handleEmailVerifyCallback = _asyncToGenerator(function* (authClient, search) {\n    if (isEmailVerifyCallback(search)) {\n      const {\n        state,\n        otp\n      } = parseEmailVerifyCallback(search);\n\n      if (authClient.idx.canProceed({\n        state\n      })) {\n        return yield authClient.idx.proceed({\n          state,\n          otp\n        });\n      } else {\n        throw new EmailVerifyCallbackError(state, otp);\n      }\n    }\n  });\n  return _handleEmailVerifyCallback.apply(this, arguments);\n}\n\nexport { EmailVerifyCallbackError, handleEmailVerifyCallback, isEmailVerifyCallback, isEmailVerifyCallbackError, parseEmailVerifyCallback };","map":{"version":3,"names":["CustomError","urlParamsToObject","EmailVerifyCallbackError","constructor","state","otp","name","isEmailVerifyCallbackError","error","isEmailVerifyCallback","urlPath","test","parseEmailVerifyCallback","handleEmailVerifyCallback","authClient","search","idx","canProceed","proceed"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/emailVerify.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from '../errors/CustomError.js';\nimport { urlParamsToObject } from '../oidc/util/urlParams.js';\n\nclass EmailVerifyCallbackError extends CustomError {\n    constructor(state, otp) {\n        super(`Enter the OTP code in the originating client: ${otp}`);\n        this.name = 'EmailVerifyCallbackError';\n        this.state = state;\n        this.otp = otp;\n    }\n}\nfunction isEmailVerifyCallbackError(error) {\n    return (error.name === 'EmailVerifyCallbackError');\n}\nfunction isEmailVerifyCallback(urlPath) {\n    return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\nfunction parseEmailVerifyCallback(urlPath) {\n    return urlParamsToObject(urlPath);\n}\nasync function handleEmailVerifyCallback(authClient, search) {\n    if (isEmailVerifyCallback(search)) {\n        const { state, otp } = parseEmailVerifyCallback(search);\n        if (authClient.idx.canProceed({ state })) {\n            return await authClient.idx.proceed({ state, otp });\n        }\n        else {\n            throw new EmailVerifyCallbackError(state, otp);\n        }\n    }\n}\n\nexport { EmailVerifyCallbackError, handleEmailVerifyCallback, isEmailVerifyCallback, isEmailVerifyCallbackError, parseEmailVerifyCallback };\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,WAAP,MAAwB,0BAAxB;AACA,SAASC,iBAAT,QAAkC,2BAAlC;;AAEA,MAAMC,wBAAN,SAAuCF,WAAvC,CAAmD;EAC/CG,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAa;IACpB,MAAO,iDAAgDA,GAAI,EAA3D;IACA,KAAKC,IAAL,GAAY,0BAAZ;IACA,KAAKF,KAAL,GAAaA,KAAb;IACA,KAAKC,GAAL,GAAWA,GAAX;EACH;;AAN8C;;AAQnD,SAASE,0BAAT,CAAoCC,KAApC,EAA2C;EACvC,OAAQA,KAAK,CAACF,IAAN,KAAe,0BAAvB;AACH;;AACD,SAASG,qBAAT,CAA+BC,OAA/B,EAAwC;EACpC,OAAO,UAAUC,IAAV,CAAeD,OAAf,KAA2B,YAAYC,IAAZ,CAAiBD,OAAjB,CAAlC;AACH;;AACD,SAASE,wBAAT,CAAkCF,OAAlC,EAA2C;EACvC,OAAOT,iBAAiB,CAACS,OAAD,CAAxB;AACH;;SACcG,yB;;;;;iDAAf,WAAyCC,UAAzC,EAAqDC,MAArD,EAA6D;IACzD,IAAIN,qBAAqB,CAACM,MAAD,CAAzB,EAAmC;MAC/B,MAAM;QAAEX,KAAF;QAASC;MAAT,IAAiBO,wBAAwB,CAACG,MAAD,CAA/C;;MACA,IAAID,UAAU,CAACE,GAAX,CAAeC,UAAf,CAA0B;QAAEb;MAAF,CAA1B,CAAJ,EAA0C;QACtC,aAAaU,UAAU,CAACE,GAAX,CAAeE,OAAf,CAAuB;UAAEd,KAAF;UAASC;QAAT,CAAvB,CAAb;MACH,CAFD,MAGK;QACD,MAAM,IAAIH,wBAAJ,CAA6BE,KAA7B,EAAoCC,GAApC,CAAN;MACH;IACJ;EACJ,C;;;;AAED,SAASH,wBAAT,EAAmCW,yBAAnC,EAA8DJ,qBAA9D,EAAqFF,0BAArF,EAAiHK,wBAAjH"},"metadata":{},"sourceType":"module"}