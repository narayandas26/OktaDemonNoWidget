{"ast":null,"code":"/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { __awaiter } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ɵɵngDeclareFactory, Injector, ɵɵFactoryTarget, ɵɵngDeclareComponent, ɵɵngDeclareClassMetadata, Component, Inject, Optional, ɵɵngDeclareInjectable, Injectable, TemplateRef, ViewContainerRef, ɵɵngDeclareDirective, Directive, Input, VERSION, ɵɵngDeclareNgModule, ɵɵngDeclareInjector, NgModule } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaAuth, AuthSdkError, toRelativeUrl } from '@okta/okta-auth-js';\nimport { filter, mergeMap } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { compare } from 'compare-versions';\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nconst OKTA_CONFIG = new InjectionToken('okta.config.angular');\nconst OKTA_AUTH = new InjectionToken('okta.auth');\n\nclass OktaCallbackComponent {\n  constructor(config, oktaAuth, injector) {\n    this.config = config;\n    this.oktaAuth = oktaAuth;\n    this.injector = injector;\n  }\n\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n        yield this.oktaAuth.handleLoginRedirect();\n      } catch (e) {\n        // Callback from social IDP. Show custom login page to continue.\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore Supports auth-js v5 & v6-7\n        const isInteractionRequiredError = this.oktaAuth.isInteractionRequiredError || this.oktaAuth.idx.isInteractionRequiredError;\n\n        if (isInteractionRequiredError(e) && this.injector) {\n          const {\n            onAuthResume,\n            onAuthRequired\n          } = this.config;\n          const callbackFn = onAuthResume || onAuthRequired;\n\n          if (callbackFn) {\n            callbackFn(this.oktaAuth, this.injector);\n            return;\n          }\n        }\n\n        this.error = e.toString();\n      }\n    });\n  }\n\n}\n\nOktaCallbackComponent.ɵfac = function OktaCallbackComponent_Factory(t) {\n  return new (t || OktaCallbackComponent)(i0.ɵɵdirectiveInject(OKTA_CONFIG), i0.ɵɵdirectiveInject(OKTA_AUTH), i0.ɵɵdirectiveInject(Injector, 8));\n};\n\nOktaCallbackComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: OktaCallbackComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 2,\n  vars: 1,\n  template: function OktaCallbackComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.error);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OktaCallbackComponent, [{\n    type: Component,\n    args: [{\n      template: `<div>{{error}}</div>`\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [OKTA_CONFIG]\n      }]\n    }, {\n      type: OktaAuth,\n      decorators: [{\n        type: Inject,\n        args: [OKTA_AUTH]\n      }]\n    }, {\n      type: Injector,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nclass OktaAuthGuard {\n  constructor(config, oktaAuth, injector) {\n    this.config = config;\n    this.oktaAuth = oktaAuth;\n    this.injector = injector;\n\n    this.updateAuthStateListener = authState => {\n      if (!authState.isAuthenticated) {\n        this.handleLogin(this.state.url);\n      }\n    };\n\n    this.onAuthRequired = this.config.onAuthRequired; // Unsubscribe updateAuthStateListener when route change\n\n    const router = injector.get(Router);\n    router.events.pipe(filter(e => e instanceof NavigationStart && this.state && this.state.url !== e.url)).subscribe(() => {\n      this.oktaAuth.authStateManager.unsubscribe(this.updateAuthStateListener);\n    });\n  }\n\n  canLoad(route) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n      const isAuthenticated = yield this.oktaAuth.isAuthenticated();\n\n      if (isAuthenticated) {\n        return true;\n      }\n\n      const router = this.injector.get(Router);\n      const nav = router.getCurrentNavigation();\n      const originalUri = nav ? nav.extractedUrl.toString() : undefined;\n      yield this.handleLogin(originalUri);\n      return false;\n    });\n  }\n  /**\n   * Gateway for protected route. Returns true if there is a valid accessToken,\n   * otherwise it will cache the route and start the login flow.\n   * @param route\n   * @param state\n   */\n\n\n  canActivate(route, state) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // Track states for current route\n      this.state = state;\n      this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired; // Protect the route after accessing\n\n      this.oktaAuth.authStateManager.subscribe(this.updateAuthStateListener);\n      const isAuthenticated = yield this.oktaAuth.isAuthenticated();\n\n      if (isAuthenticated) {\n        return true;\n      }\n\n      yield this.handleLogin(state.url);\n      return false;\n    });\n  }\n\n  canActivateChild(route, state) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.canActivate(route, state);\n    });\n  }\n\n  handleLogin(originalUri) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // Store the current path\n      if (originalUri) {\n        this.oktaAuth.setOriginalUri(originalUri);\n      }\n\n      if (this.onAuthRequired) {\n        this.onAuthRequired(this.oktaAuth, this.injector);\n      } else {\n        this.oktaAuth.signInWithRedirect();\n      }\n    });\n  }\n\n}\n\nOktaAuthGuard.ɵfac = function OktaAuthGuard_Factory(t) {\n  return new (t || OktaAuthGuard)(i0.ɵɵinject(OKTA_CONFIG), i0.ɵɵinject(OKTA_AUTH), i0.ɵɵinject(Injector));\n};\n\nOktaAuthGuard.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OktaAuthGuard,\n  factory: OktaAuthGuard.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OktaAuthGuard, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [OKTA_CONFIG]\n      }]\n    }, {\n      type: OktaAuth,\n      decorators: [{\n        type: Inject,\n        args: [OKTA_AUTH]\n      }]\n    }, {\n      type: Injector\n    }];\n  }, null);\n})();\n\nconst defaultAuthState = {\n  isAuthenticated: false\n};\n\nclass OktaAuthStateService {\n  constructor(oktaAuth) {\n    this.oktaAuth = oktaAuth;\n    this._authState = new BehaviorSubject(defaultAuthState); // only expose readonly property\n\n    this.authState$ = this._authState.asObservable();\n    this.updateAuthState = this.updateAuthState.bind(this); // set initial authState\n\n    const initialAuthState = this.oktaAuth.authStateManager.getAuthState() || defaultAuthState;\n\n    this._authState.next(initialAuthState); // subscribe to future changes\n\n\n    this.oktaAuth.authStateManager.subscribe(this.updateAuthState);\n  }\n\n  ngOnDestroy() {\n    this.oktaAuth.authStateManager.unsubscribe(this.updateAuthState);\n  } // Observes as true when any group input can match groups from user claims \n\n\n  hasAnyGroups(groups) {\n    return this.authState$.pipe(mergeMap(({\n      isAuthenticated,\n      idToken\n    }) => __awaiter(this, void 0, void 0, function* () {\n      // return false when not authenticated or openid is not in scopes\n      if (!isAuthenticated || !idToken) {\n        return false;\n      } // transform inputs to consistent object format\n\n\n      if (typeof groups === 'string') {\n        groups = {\n          groups: [groups]\n        };\n      }\n\n      if (Array.isArray(groups)) {\n        groups = {\n          groups\n        };\n      }\n\n      const key = Object.keys(groups)[0];\n      const value = groups[key]; // groups or custom claims is available in idToken\n\n      if (idToken.claims[key]) {\n        return value.some(authority => idToken.claims[key].includes(authority));\n      } // try /userinfo endpoint when thin idToken (no groups claim) is returned\n      // https://developer.okta.com/docs/concepts/api-access-management/#tokens-and-scopes\n\n\n      const userInfo = yield this.oktaAuth.getUser();\n\n      if (!userInfo[key]) {\n        return false;\n      }\n\n      return value.some(authority => userInfo[key].includes(authority));\n    })));\n  }\n\n  updateAuthState(authState) {\n    this._authState.next(authState);\n  }\n\n}\n\nOktaAuthStateService.ɵfac = function OktaAuthStateService_Factory(t) {\n  return new (t || OktaAuthStateService)(i0.ɵɵinject(OKTA_AUTH));\n};\n\nOktaAuthStateService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OktaAuthStateService,\n  factory: OktaAuthStateService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OktaAuthStateService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: OktaAuth,\n      decorators: [{\n        type: Inject,\n        args: [OKTA_AUTH]\n      }]\n    }];\n  }, null);\n})();\n\nclass OktaHasAnyGroupDirective {\n  constructor( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  templateRef, viewContainer, authStateService) {\n    this.templateRef = templateRef;\n    this.viewContainer = viewContainer;\n    this.authStateService = authStateService;\n  }\n\n  set oktaHasAnyGroup(groups) {\n    this.authStateService.hasAnyGroups(groups).subscribe(isAuthorized => {\n      // don't update UI if no state change\n      if (isAuthorized === this.previousIsAuthorized) {\n        return;\n      }\n\n      this.previousIsAuthorized = isAuthorized;\n      this.viewContainer.clear();\n\n      if (isAuthorized) {\n        this.viewContainer.createEmbeddedView(this.templateRef);\n      }\n    });\n  }\n\n}\n\nOktaHasAnyGroupDirective.ɵfac = function OktaHasAnyGroupDirective_Factory(t) {\n  return new (t || OktaHasAnyGroupDirective)(i0.ɵɵdirectiveInject(TemplateRef), i0.ɵɵdirectiveInject(ViewContainerRef), i0.ɵɵdirectiveInject(OktaAuthStateService));\n};\n\nOktaHasAnyGroupDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: OktaHasAnyGroupDirective,\n  selectors: [[\"\", \"oktaHasAnyGroup\", \"\"]],\n  inputs: {\n    oktaHasAnyGroup: \"oktaHasAnyGroup\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OktaHasAnyGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[oktaHasAnyGroup]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }, {\n      type: ViewContainerRef\n    }, {\n      type: OktaAuthStateService\n    }];\n  }, {\n    oktaHasAnyGroup: [{\n      type: Input\n    }]\n  });\n})();\n\nvar packageInfo = {\n  'name': '@okta/okta-angular',\n  'version': '6.0.0',\n  'authJSMinSupportedVersion': '5.3.1'\n};\n\nfunction oktaAuthFactory(config) {\n  return config.oktaAuth;\n}\n\nclass OktaAuthModule {\n  constructor(config, location, router) {\n    const {\n      oktaAuth\n    } = config;\n    const isAuthJsSupported = oktaAuth._oktaUserAgent && compare(oktaAuth._oktaUserAgent.getVersion(), packageInfo.authJSMinSupportedVersion, '>=');\n\n    if (!isAuthJsSupported) {\n      throw new AuthSdkError(`Passed in oktaAuth is not compatible with the SDK, minimum supported okta-auth-js version is ${packageInfo.authJSMinSupportedVersion}.`);\n    } // Add Okta UA\n\n\n    oktaAuth._oktaUserAgent.addEnvironment(`${packageInfo.name}/${packageInfo.version}`);\n\n    oktaAuth._oktaUserAgent.addEnvironment(`Angular/${VERSION.full}`); // Provide a default implementation of `restoreOriginalUri`\n\n\n    if (!oktaAuth.options.restoreOriginalUri && router && location) {\n      oktaAuth.options.restoreOriginalUri = (_, originalUri) => __awaiter(this, void 0, void 0, function* () {\n        const baseUrl = window.location.origin + location.prepareExternalUrl('');\n        const routePath = toRelativeUrl(originalUri || '/', baseUrl);\n        router.navigateByUrl(routePath);\n      });\n    } // Start services\n\n\n    oktaAuth.start();\n  }\n\n}\n\nOktaAuthModule.ɵfac = function OktaAuthModule_Factory(t) {\n  return new (t || OktaAuthModule)(i0.ɵɵinject(OKTA_CONFIG), i0.ɵɵinject(Location, 8), i0.ɵɵinject(Router, 8));\n};\n\nOktaAuthModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: OktaAuthModule\n});\nOktaAuthModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [OktaAuthGuard, OktaAuthStateService, {\n    provide: OKTA_AUTH,\n    useFactory: oktaAuthFactory,\n    deps: [OKTA_CONFIG]\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OktaAuthModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [OktaCallbackComponent, OktaHasAnyGroupDirective],\n      exports: [OktaCallbackComponent, OktaHasAnyGroupDirective],\n      providers: [OktaAuthGuard, OktaAuthStateService, {\n        provide: OKTA_AUTH,\n        useFactory: oktaAuthFactory,\n        deps: [OKTA_CONFIG]\n      }]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [OKTA_CONFIG]\n      }]\n    }, {\n      type: Location,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: Router,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nexport { OKTA_AUTH, OKTA_CONFIG, OktaAuthGuard, OktaAuthModule, OktaAuthStateService, OktaCallbackComponent, OktaHasAnyGroupDirective };","map":{"version":3,"names":["__awaiter","i0","InjectionToken","ɵɵngDeclareFactory","Injector","ɵɵFactoryTarget","ɵɵngDeclareComponent","ɵɵngDeclareClassMetadata","Component","Inject","Optional","ɵɵngDeclareInjectable","Injectable","TemplateRef","ViewContainerRef","ɵɵngDeclareDirective","Directive","Input","VERSION","ɵɵngDeclareNgModule","ɵɵngDeclareInjector","NgModule","Router","NavigationStart","Location","OktaAuth","AuthSdkError","toRelativeUrl","filter","mergeMap","BehaviorSubject","compare","OKTA_CONFIG","OKTA_AUTH","OktaCallbackComponent","constructor","config","oktaAuth","injector","ngOnInit","handleLoginRedirect","e","isInteractionRequiredError","idx","onAuthResume","onAuthRequired","callbackFn","error","toString","ɵfac","ɵcmp","type","args","template","undefined","decorators","OktaAuthGuard","updateAuthStateListener","authState","isAuthenticated","handleLogin","state","url","router","get","events","pipe","subscribe","authStateManager","unsubscribe","canLoad","route","data","nav","getCurrentNavigation","originalUri","extractedUrl","canActivate","canActivateChild","setOriginalUri","signInWithRedirect","ɵprov","defaultAuthState","OktaAuthStateService","_authState","authState$","asObservable","updateAuthState","bind","initialAuthState","getAuthState","next","ngOnDestroy","hasAnyGroups","groups","idToken","Array","isArray","key","Object","keys","value","claims","some","authority","includes","userInfo","getUser","OktaHasAnyGroupDirective","templateRef","viewContainer","authStateService","oktaHasAnyGroup","isAuthorized","previousIsAuthorized","clear","createEmbeddedView","ɵdir","selector","packageInfo","oktaAuthFactory","OktaAuthModule","location","isAuthJsSupported","_oktaUserAgent","getVersion","authJSMinSupportedVersion","addEnvironment","name","version","full","options","restoreOriginalUri","_","baseUrl","window","origin","prepareExternalUrl","routePath","navigateByUrl","start","ɵmod","ɵinj","provide","useFactory","deps","declarations","exports","providers"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-angular/fesm2015/okta-angular.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { __awaiter } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ɵɵngDeclareFactory, Injector, ɵɵFactoryTarget, ɵɵngDeclareComponent, ɵɵngDeclareClassMetadata, Component, Inject, Optional, ɵɵngDeclareInjectable, Injectable, TemplateRef, ViewContainerRef, ɵɵngDeclareDirective, Directive, Input, VERSION, ɵɵngDeclareNgModule, ɵɵngDeclareInjector, NgModule } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaAuth, AuthSdkError, toRelativeUrl } from '@okta/okta-auth-js';\nimport { filter, mergeMap } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { compare } from 'compare-versions';\n\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst OKTA_CONFIG = new InjectionToken('okta.config.angular');\nconst OKTA_AUTH = new InjectionToken('okta.auth');\n\nclass OktaCallbackComponent {\n    constructor(config, oktaAuth, injector) {\n        this.config = config;\n        this.oktaAuth = oktaAuth;\n        this.injector = injector;\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n                yield this.oktaAuth.handleLoginRedirect();\n            }\n            catch (e) {\n                // Callback from social IDP. Show custom login page to continue.\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore Supports auth-js v5 & v6-7\n                const isInteractionRequiredError = this.oktaAuth.isInteractionRequiredError || this.oktaAuth.idx.isInteractionRequiredError;\n                if (isInteractionRequiredError(e) && this.injector) {\n                    const { onAuthResume, onAuthRequired } = this.config;\n                    const callbackFn = onAuthResume || onAuthRequired;\n                    if (callbackFn) {\n                        callbackFn(this.oktaAuth, this.injector);\n                        return;\n                    }\n                }\n                this.error = e.toString();\n            }\n        });\n    }\n}\nOktaCallbackComponent.ɵfac = ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaCallbackComponent, deps: [{ token: OKTA_CONFIG }, { token: OKTA_AUTH }, { token: Injector, optional: true }], target: ɵɵFactoryTarget.Component });\nOktaCallbackComponent.ɵcmp = ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.0\", type: OktaCallbackComponent, selector: \"ng-component\", ngImport: i0, template: `<div>{{error}}</div>`, isInline: true });\nɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaCallbackComponent, decorators: [{\n            type: Component,\n            args: [{\n                    template: `<div>{{error}}</div>`\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [OKTA_CONFIG]\n                }] }, { type: OktaAuth, decorators: [{\n                    type: Inject,\n                    args: [OKTA_AUTH]\n                }] }, { type: Injector, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nclass OktaAuthGuard {\n    constructor(config, oktaAuth, injector) {\n        this.config = config;\n        this.oktaAuth = oktaAuth;\n        this.injector = injector;\n        this.updateAuthStateListener = (authState) => {\n            if (!authState.isAuthenticated) {\n                this.handleLogin(this.state.url);\n            }\n        };\n        this.onAuthRequired = this.config.onAuthRequired;\n        // Unsubscribe updateAuthStateListener when route change\n        const router = injector.get(Router);\n        router.events.pipe(filter((e) => e instanceof NavigationStart && this.state && this.state.url !== e.url)).subscribe(() => {\n            this.oktaAuth.authStateManager.unsubscribe(this.updateAuthStateListener);\n        });\n    }\n    canLoad(route) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n            const isAuthenticated = yield this.oktaAuth.isAuthenticated();\n            if (isAuthenticated) {\n                return true;\n            }\n            const router = this.injector.get(Router);\n            const nav = router.getCurrentNavigation();\n            const originalUri = nav ? nav.extractedUrl.toString() : undefined;\n            yield this.handleLogin(originalUri);\n            return false;\n        });\n    }\n    /**\n     * Gateway for protected route. Returns true if there is a valid accessToken,\n     * otherwise it will cache the route and start the login flow.\n     * @param route\n     * @param state\n     */\n    canActivate(route, state) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Track states for current route\n            this.state = state;\n            this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n            // Protect the route after accessing\n            this.oktaAuth.authStateManager.subscribe(this.updateAuthStateListener);\n            const isAuthenticated = yield this.oktaAuth.isAuthenticated();\n            if (isAuthenticated) {\n                return true;\n            }\n            yield this.handleLogin(state.url);\n            return false;\n        });\n    }\n    canActivateChild(route, state) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.canActivate(route, state);\n        });\n    }\n    handleLogin(originalUri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Store the current path\n            if (originalUri) {\n                this.oktaAuth.setOriginalUri(originalUri);\n            }\n            if (this.onAuthRequired) {\n                this.onAuthRequired(this.oktaAuth, this.injector);\n            }\n            else {\n                this.oktaAuth.signInWithRedirect();\n            }\n        });\n    }\n}\nOktaAuthGuard.ɵfac = ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaAuthGuard, deps: [{ token: OKTA_CONFIG }, { token: OKTA_AUTH }, { token: Injector }], target: ɵɵFactoryTarget.Injectable });\nOktaAuthGuard.ɵprov = ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaAuthGuard });\nɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaAuthGuard, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [OKTA_CONFIG]\n                }] }, { type: OktaAuth, decorators: [{\n                    type: Inject,\n                    args: [OKTA_AUTH]\n                }] }, { type: Injector }]; } });\n\nconst defaultAuthState = {\n    isAuthenticated: false\n};\nclass OktaAuthStateService {\n    constructor(oktaAuth) {\n        this.oktaAuth = oktaAuth;\n        this._authState = new BehaviorSubject(defaultAuthState);\n        // only expose readonly property\n        this.authState$ = this._authState.asObservable();\n        this.updateAuthState = this.updateAuthState.bind(this);\n        // set initial authState\n        const initialAuthState = this.oktaAuth.authStateManager.getAuthState() || defaultAuthState;\n        this._authState.next(initialAuthState);\n        // subscribe to future changes\n        this.oktaAuth.authStateManager.subscribe(this.updateAuthState);\n    }\n    ngOnDestroy() {\n        this.oktaAuth.authStateManager.unsubscribe(this.updateAuthState);\n    }\n    // Observes as true when any group input can match groups from user claims \n    hasAnyGroups(groups) {\n        return this.authState$.pipe(mergeMap(({ isAuthenticated, idToken }) => __awaiter(this, void 0, void 0, function* () {\n            // return false when not authenticated or openid is not in scopes\n            if (!isAuthenticated || !idToken) {\n                return false;\n            }\n            // transform inputs to consistent object format\n            if (typeof groups === 'string') {\n                groups = { groups: [groups] };\n            }\n            if (Array.isArray(groups)) {\n                groups = { groups };\n            }\n            const key = Object.keys(groups)[0];\n            const value = groups[key];\n            // groups or custom claims is available in idToken\n            if (idToken.claims[key]) {\n                return value.some((authority) => idToken.claims[key].includes(authority));\n            }\n            // try /userinfo endpoint when thin idToken (no groups claim) is returned\n            // https://developer.okta.com/docs/concepts/api-access-management/#tokens-and-scopes\n            const userInfo = yield this.oktaAuth.getUser();\n            if (!userInfo[key]) {\n                return false;\n            }\n            return value.some((authority) => userInfo[key].includes(authority));\n        })));\n    }\n    updateAuthState(authState) {\n        this._authState.next(authState);\n    }\n}\nOktaAuthStateService.ɵfac = ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaAuthStateService, deps: [{ token: OKTA_AUTH }], target: ɵɵFactoryTarget.Injectable });\nOktaAuthStateService.ɵprov = ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaAuthStateService });\nɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaAuthStateService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: OktaAuth, decorators: [{\n                    type: Inject,\n                    args: [OKTA_AUTH]\n                }] }]; } });\n\nclass OktaHasAnyGroupDirective {\n    constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    templateRef, viewContainer, authStateService) {\n        this.templateRef = templateRef;\n        this.viewContainer = viewContainer;\n        this.authStateService = authStateService;\n    }\n    set oktaHasAnyGroup(groups) {\n        this.authStateService.hasAnyGroups(groups)\n            .subscribe(isAuthorized => {\n            // don't update UI if no state change\n            if (isAuthorized === this.previousIsAuthorized) {\n                return;\n            }\n            this.previousIsAuthorized = isAuthorized;\n            this.viewContainer.clear();\n            if (isAuthorized) {\n                this.viewContainer.createEmbeddedView(this.templateRef);\n            }\n        });\n    }\n}\nOktaHasAnyGroupDirective.ɵfac = ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaHasAnyGroupDirective, deps: [{ token: TemplateRef }, { token: ViewContainerRef }, { token: OktaAuthStateService }], target: ɵɵFactoryTarget.Directive });\nOktaHasAnyGroupDirective.ɵdir = ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.0\", type: OktaHasAnyGroupDirective, selector: \"[oktaHasAnyGroup]\", inputs: { oktaHasAnyGroup: \"oktaHasAnyGroup\" }, ngImport: i0 });\nɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaHasAnyGroupDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[oktaHasAnyGroup]' }]\n        }], ctorParameters: function () { return [{ type: TemplateRef }, { type: ViewContainerRef }, { type: OktaAuthStateService }]; }, propDecorators: { oktaHasAnyGroup: [{\n                type: Input\n            }] } });\n\nvar packageInfo = {\n    'name': '@okta/okta-angular',\n    'version': '6.0.0',\n    'authJSMinSupportedVersion': '5.3.1'\n};\n\nfunction oktaAuthFactory(config) {\n    return config.oktaAuth;\n}\nclass OktaAuthModule {\n    constructor(config, location, router) {\n        const { oktaAuth } = config;\n        const isAuthJsSupported = oktaAuth._oktaUserAgent && compare(oktaAuth._oktaUserAgent.getVersion(), packageInfo.authJSMinSupportedVersion, '>=');\n        if (!isAuthJsSupported) {\n            throw new AuthSdkError(`Passed in oktaAuth is not compatible with the SDK, minimum supported okta-auth-js version is ${packageInfo.authJSMinSupportedVersion}.`);\n        }\n        // Add Okta UA\n        oktaAuth._oktaUserAgent.addEnvironment(`${packageInfo.name}/${packageInfo.version}`);\n        oktaAuth._oktaUserAgent.addEnvironment(`Angular/${VERSION.full}`);\n        // Provide a default implementation of `restoreOriginalUri`\n        if (!oktaAuth.options.restoreOriginalUri && router && location) {\n            oktaAuth.options.restoreOriginalUri = (_, originalUri) => __awaiter(this, void 0, void 0, function* () {\n                const baseUrl = window.location.origin + location.prepareExternalUrl('');\n                const routePath = toRelativeUrl(originalUri || '/', baseUrl);\n                router.navigateByUrl(routePath);\n            });\n        }\n        // Start services\n        oktaAuth.start();\n    }\n}\nOktaAuthModule.ɵfac = ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaAuthModule, deps: [{ token: OKTA_CONFIG }, { token: Location, optional: true }, { token: Router, optional: true }], target: ɵɵFactoryTarget.NgModule });\nOktaAuthModule.ɵmod = ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaAuthModule, declarations: [OktaCallbackComponent,\n        OktaHasAnyGroupDirective], exports: [OktaCallbackComponent,\n        OktaHasAnyGroupDirective] });\nOktaAuthModule.ɵinj = ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaAuthModule, providers: [\n        OktaAuthGuard,\n        OktaAuthStateService,\n        {\n            provide: OKTA_AUTH,\n            useFactory: oktaAuthFactory,\n            deps: [OKTA_CONFIG]\n        },\n    ] });\nɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.0\", ngImport: i0, type: OktaAuthModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        OktaCallbackComponent,\n                        OktaHasAnyGroupDirective,\n                    ],\n                    exports: [\n                        OktaCallbackComponent,\n                        OktaHasAnyGroupDirective,\n                    ],\n                    providers: [\n                        OktaAuthGuard,\n                        OktaAuthStateService,\n                        {\n                            provide: OKTA_AUTH,\n                            useFactory: oktaAuthFactory,\n                            deps: [OKTA_CONFIG]\n                        },\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [OKTA_CONFIG]\n                }] }, { type: Location, decorators: [{\n                    type: Optional\n                }] }, { type: Router, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nexport { OKTA_AUTH, OKTA_CONFIG, OktaAuthGuard, OktaAuthModule, OktaAuthStateService, OktaCallbackComponent, OktaHasAnyGroupDirective };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}