{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Base/Remediator.js';\nimport { OktaPassword } from '../authenticator/OktaPassword.js';\nimport '../types/api.js';\n\nclass EnrollProfile extends Remediator {\n  constructor(remediation, values = {}, options = {}) {\n    super(remediation, values, options);\n    this.authenticator = null;\n    const credentials = this.getCredentialsFromRemediation();\n\n    if (credentials) {\n      this.authenticator = this.authenticator = new OktaPassword({});\n    }\n  }\n\n  canRemediate() {\n    if (this.authenticator && !this.authenticator.canVerify(this.values)) {\n      return false;\n    }\n\n    const userProfileFromValues = this.getData().userProfile;\n\n    if (!userProfileFromValues) {\n      return false;\n    }\n\n    const userProfileFromRemediation = this.remediation.value.find(({\n      name\n    }) => name === 'userProfile');\n    return userProfileFromRemediation.form.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n\n      return canRemediate;\n    }, true);\n  }\n\n  getCredentialsFromRemediation() {\n    return this.remediation.value.find(({\n      name\n    }) => name === 'credentials');\n  }\n\n  mapUserProfile({\n    form: {\n      value: profileAttributes\n    }\n  }) {\n    const attributeNames = profileAttributes.map(({\n      name\n    }) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => this.values[attributeName] ? Object.assign(Object.assign({}, attributeValues), {\n      [attributeName]: this.values[attributeName]\n    }) : attributeValues, {});\n\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n\n    return data;\n  }\n\n  mapCredentials() {\n    const val = this.authenticator && this.authenticator.mapCredentials(this.values);\n\n    if (!val) {\n      return;\n    }\n\n    return val;\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getInputCredentials(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n\n      return errors;\n    }, []);\n  }\n\n}\n\nEnrollProfile.remediationName = 'enroll-profile';\nexport { EnrollProfile };","map":{"version":3,"names":["Remediator","OktaPassword","EnrollProfile","constructor","remediation","values","options","authenticator","credentials","getCredentialsFromRemediation","canRemediate","canVerify","userProfileFromValues","getData","userProfile","userProfileFromRemediation","value","find","name","form","reduce","curr","required","mapUserProfile","profileAttributes","attributeNames","map","data","attributeValues","attributeName","Object","assign","keys","length","mapCredentials","val","getInputUserProfile","input","getInputCredentials","getErrorMessages","errorRemediation","errors","field","messages","push","message","remediationName"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/EnrollProfile.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\nimport { OktaPassword } from '../authenticator/OktaPassword.js';\nimport '../types/api.js';\n\nclass EnrollProfile extends Remediator {\n    constructor(remediation, values = {}, options = {}) {\n        super(remediation, values, options);\n        this.authenticator = null;\n        const credentials = this.getCredentialsFromRemediation();\n        if (credentials) {\n            this.authenticator = this.authenticator = new OktaPassword({});\n        }\n    }\n    canRemediate() {\n        if (this.authenticator && !this.authenticator.canVerify(this.values)) {\n            return false;\n        }\n        const userProfileFromValues = this.getData().userProfile;\n        if (!userProfileFromValues) {\n            return false;\n        }\n        const userProfileFromRemediation = this.remediation.value.find(({ name }) => name === 'userProfile');\n        return userProfileFromRemediation.form.value.reduce((canRemediate, curr) => {\n            if (curr.required) {\n                canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n            }\n            return canRemediate;\n        }, true);\n    }\n    getCredentialsFromRemediation() {\n        return this.remediation.value.find(({ name }) => name === 'credentials');\n    }\n    mapUserProfile({ form: { value: profileAttributes } }) {\n        const attributeNames = profileAttributes.map(({ name }) => name);\n        const data = attributeNames.reduce((attributeValues, attributeName) => (this.values[attributeName] ? Object.assign(Object.assign({}, attributeValues), { [attributeName]: this.values[attributeName] }) : attributeValues), {});\n        if (Object.keys(data).length === 0) {\n            return;\n        }\n        return data;\n    }\n    mapCredentials() {\n        const val = this.authenticator && this.authenticator.mapCredentials(this.values);\n        if (!val) {\n            return;\n        }\n        return val;\n    }\n    getInputUserProfile(input) {\n        return [...input.form.value];\n    }\n    getInputCredentials(input) {\n        return [...input.form.value];\n    }\n    getErrorMessages(errorRemediation) {\n        return errorRemediation.value[0].form.value.reduce((errors, field) => {\n            if (field.messages) {\n                errors.push(field.messages.value[0].message);\n            }\n            return errors;\n        }, []);\n    }\n}\nEnrollProfile.remediationName = 'enroll-profile';\n\nexport { EnrollProfile };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}