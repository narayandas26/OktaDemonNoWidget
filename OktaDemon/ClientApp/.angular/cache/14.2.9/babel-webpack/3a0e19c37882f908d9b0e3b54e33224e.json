{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { sendRequest } from './request.js';\n\nconst getProfile = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (oktaAuth, options) {\n    const transaction = yield sendRequest(oktaAuth, {\n      url: '/idp/myaccount/profile',\n      method: 'GET',\n      accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n      transactionClassName: 'ProfileTransaction'\n    });\n    return transaction;\n  });\n\n  return function getProfile(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconst updateProfile = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      payload,\n      accessToken\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: '/idp/myaccount/profile',\n      method: 'PUT',\n      payload,\n      accessToken,\n      transactionClassName: 'ProfileTransaction'\n    });\n    return transaction;\n  });\n\n  return function updateProfile(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nconst getProfileSchema = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (oktaAuth, options) {\n    const transaction = yield sendRequest(oktaAuth, {\n      url: '/idp/myaccount/profile/schema',\n      method: 'GET',\n      accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n      transactionClassName: 'ProfileSchemaTransaction'\n    });\n    return transaction;\n  });\n\n  return function getProfileSchema(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport { getProfile, getProfileSchema, updateProfile };","map":{"version":3,"names":["sendRequest","getProfile","oktaAuth","options","transaction","url","method","accessToken","transactionClassName","updateProfile","payload","getProfileSchema"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/myaccount/profileApi.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { sendRequest } from './request.js';\n\nconst getProfile = async (oktaAuth, options) => {\n    const transaction = await sendRequest(oktaAuth, {\n        url: '/idp/myaccount/profile',\n        method: 'GET',\n        accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n        transactionClassName: 'ProfileTransaction'\n    });\n    return transaction;\n};\nconst updateProfile = async (oktaAuth, options) => {\n    const { payload, accessToken } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: '/idp/myaccount/profile',\n        method: 'PUT',\n        payload,\n        accessToken,\n        transactionClassName: 'ProfileTransaction'\n    });\n    return transaction;\n};\nconst getProfileSchema = async (oktaAuth, options) => {\n    const transaction = await sendRequest(oktaAuth, {\n        url: '/idp/myaccount/profile/schema',\n        method: 'GET',\n        accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n        transactionClassName: 'ProfileSchemaTransaction'\n    });\n    return transaction;\n};\n\nexport { getProfile, getProfileSchema, updateProfile };\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,WAAT,QAA4B,cAA5B;;AAEA,MAAMC,UAAU;EAAA,6BAAG,WAAOC,QAAP,EAAiBC,OAAjB,EAA6B;IAC5C,MAAMC,WAAW,SAASJ,WAAW,CAACE,QAAD,EAAW;MAC5CG,GAAG,EAAE,wBADuC;MAE5CC,MAAM,EAAE,KAFoC;MAG5CC,WAAW,EAAEJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACI,WAH3B;MAI5CC,oBAAoB,EAAE;IAJsB,CAAX,CAArC;IAMA,OAAOJ,WAAP;EACH,CARe;;EAAA,gBAAVH,UAAU;IAAA;EAAA;AAAA,GAAhB;;AASA,MAAMQ,aAAa;EAAA,8BAAG,WAAOP,QAAP,EAAiBC,OAAjB,EAA6B;IAC/C,MAAM;MAAEO,OAAF;MAAWH;IAAX,IAA2BJ,OAAjC;IACA,MAAMC,WAAW,SAASJ,WAAW,CAACE,QAAD,EAAW;MAC5CG,GAAG,EAAE,wBADuC;MAE5CC,MAAM,EAAE,KAFoC;MAG5CI,OAH4C;MAI5CH,WAJ4C;MAK5CC,oBAAoB,EAAE;IALsB,CAAX,CAArC;IAOA,OAAOJ,WAAP;EACH,CAVkB;;EAAA,gBAAbK,aAAa;IAAA;EAAA;AAAA,GAAnB;;AAWA,MAAME,gBAAgB;EAAA,8BAAG,WAAOT,QAAP,EAAiBC,OAAjB,EAA6B;IAClD,MAAMC,WAAW,SAASJ,WAAW,CAACE,QAAD,EAAW;MAC5CG,GAAG,EAAE,+BADuC;MAE5CC,MAAM,EAAE,KAFoC;MAG5CC,WAAW,EAAEJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACI,WAH3B;MAI5CC,oBAAoB,EAAE;IAJsB,CAAX,CAArC;IAMA,OAAOJ,WAAP;EACH,CARqB;;EAAA,gBAAhBO,gBAAgB;IAAA;EAAA;AAAA,GAAtB;;AAUA,SAASV,UAAT,EAAqBU,gBAArB,EAAuCF,aAAvC"},"metadata":{},"sourceType":"module"}