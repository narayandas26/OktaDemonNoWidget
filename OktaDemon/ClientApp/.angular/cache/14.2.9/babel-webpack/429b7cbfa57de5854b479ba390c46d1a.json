{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Remediator.js';\nimport { getAuthenticatorFromRemediation } from '../util.js';\nimport { isAuthenticator } from '../../types/api.js';\nimport { findMatchedOption, compareAuthenticators } from '../../authenticator/util.js';\n\nclass SelectAuthenticator extends Remediator {\n  findMatchedOption(authenticators, options) {\n    let option;\n\n    for (let authenticator of authenticators) {\n      option = options.find(({\n        relatesTo\n      }) => relatesTo.key === authenticator.key);\n\n      if (option) {\n        break;\n      }\n    }\n\n    return option;\n  }\n\n  canRemediate() {\n    const {\n      authenticators,\n      authenticator\n    } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const {\n      options\n    } = authenticatorFromRemediation;\n\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      return true;\n    }\n\n    const matchedOption = this.findMatchedOption(authenticators, options);\n\n    if (matchedOption) {\n      return true;\n    }\n\n    return false;\n  }\n\n  mapAuthenticator(remediationValue) {\n    const {\n      authenticators,\n      authenticator\n    } = this.values;\n\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      this.selectedAuthenticator = authenticator;\n      return authenticator;\n    }\n\n    const {\n      options\n    } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    this.selectedAuthenticator = selectedOption.relatesTo;\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value.form.value.find(({\n        name\n      }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    const options = remediation.options.map(({\n      label,\n      relatesTo\n    }) => {\n      return {\n        label,\n        value: relatesTo.key\n      };\n    });\n    return {\n      name: 'authenticator',\n      type: 'string',\n      options\n    };\n  }\n\n  getValuesAfterProceed() {\n    this.values = super.getValuesAfterProceed();\n    const authenticators = this.values.authenticators.filter(authenticator => {\n      return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n    });\n    return Object.assign(Object.assign({}, this.values), {\n      authenticators\n    });\n  }\n\n}\n\nexport { SelectAuthenticator };","map":{"version":3,"names":["Remediator","getAuthenticatorFromRemediation","isAuthenticator","findMatchedOption","compareAuthenticators","SelectAuthenticator","authenticators","options","option","authenticator","find","relatesTo","key","canRemediate","values","authenticatorFromRemediation","remediation","length","id","matchedOption","mapAuthenticator","remediationValue","selectedAuthenticator","selectedOption","value","form","name","getInputAuthenticator","map","label","type","getValuesAfterProceed","filter","Object","assign"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/Base/SelectAuthenticator.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Remediator.js';\nimport { getAuthenticatorFromRemediation } from '../util.js';\nimport { isAuthenticator } from '../../types/api.js';\nimport { findMatchedOption, compareAuthenticators } from '../../authenticator/util.js';\n\nclass SelectAuthenticator extends Remediator {\n    findMatchedOption(authenticators, options) {\n        let option;\n        for (let authenticator of authenticators) {\n            option = options\n                .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n            if (option) {\n                break;\n            }\n        }\n        return option;\n    }\n    canRemediate() {\n        const { authenticators, authenticator } = this.values;\n        const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n        const { options } = authenticatorFromRemediation;\n        if (!authenticators || !authenticators.length) {\n            return false;\n        }\n        if (isAuthenticator(authenticator) && authenticator.id) {\n            return true;\n        }\n        const matchedOption = this.findMatchedOption(authenticators, options);\n        if (matchedOption) {\n            return true;\n        }\n        return false;\n    }\n    mapAuthenticator(remediationValue) {\n        const { authenticators, authenticator } = this.values;\n        if (isAuthenticator(authenticator) && authenticator.id) {\n            this.selectedAuthenticator = authenticator;\n            return authenticator;\n        }\n        const { options } = remediationValue;\n        const selectedOption = findMatchedOption(authenticators, options);\n        this.selectedAuthenticator = selectedOption.relatesTo;\n        this.selectedOption = selectedOption;\n        return {\n            id: selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value.form.value.find(({ name }) => name === 'id').value\n        };\n    }\n    getInputAuthenticator(remediation) {\n        const options = remediation.options.map(({ label, relatesTo }) => {\n            return {\n                label,\n                value: relatesTo.key\n            };\n        });\n        return { name: 'authenticator', type: 'string', options };\n    }\n    getValuesAfterProceed() {\n        this.values = super.getValuesAfterProceed();\n        const authenticators = this.values.authenticators\n            .filter(authenticator => {\n            return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n        });\n        return Object.assign(Object.assign({}, this.values), { authenticators });\n    }\n}\n\nexport { SelectAuthenticator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}