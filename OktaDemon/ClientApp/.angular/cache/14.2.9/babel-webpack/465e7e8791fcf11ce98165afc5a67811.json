{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport BaseTransaction from './Base.js';\nimport { generateRequestFnFromLinks } from '../request.js';\n\nclass EmailTransaction extends BaseTransaction {\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n    const {\n      accessToken,\n      res\n    } = options;\n    const {\n      id,\n      profile,\n      roles,\n      status,\n      _links\n    } = res;\n    this.id = id;\n    this.profile = profile;\n    this.roles = roles;\n    this.status = status;\n    this.get = /*#__PURE__*/_asyncToGenerator(function* () {\n      const fn = generateRequestFnFromLinks({\n        oktaAuth,\n        accessToken,\n        methodName: 'get',\n        links: _links,\n        transactionClassName: 'EmailTransaction'\n      });\n      return yield fn();\n    });\n    this.delete = /*#__PURE__*/_asyncToGenerator(function* () {\n      const fn = generateRequestFnFromLinks({\n        oktaAuth,\n        accessToken,\n        methodName: 'delete',\n        links: _links\n      });\n      return yield fn();\n    });\n    this.challenge = /*#__PURE__*/_asyncToGenerator(function* () {\n      const fn = generateRequestFnFromLinks({\n        oktaAuth,\n        accessToken,\n        methodName: 'challenge',\n        links: _links,\n        transactionClassName: 'EmailChallengeTransaction'\n      });\n      return yield fn();\n    });\n\n    if (_links.poll) {\n      this.poll = /*#__PURE__*/_asyncToGenerator(function* () {\n        const fn = generateRequestFnFromLinks({\n          oktaAuth,\n          accessToken,\n          methodName: 'poll',\n          links: _links,\n          transactionClassName: 'EmailStatusTransaction'\n        });\n        return yield fn();\n      });\n    }\n\n    if (_links.verify) {\n      this.verify = /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator(function* (payload) {\n          const fn = generateRequestFnFromLinks({\n            oktaAuth,\n            accessToken,\n            methodName: 'verify',\n            links: _links\n          });\n          return yield fn(payload);\n        });\n\n        return function (_x) {\n          return _ref5.apply(this, arguments);\n        };\n      }();\n    }\n  }\n\n}\n\nexport { EmailTransaction as default };","map":{"version":3,"names":["BaseTransaction","generateRequestFnFromLinks","EmailTransaction","constructor","oktaAuth","options","accessToken","res","id","profile","roles","status","_links","get","fn","methodName","links","transactionClassName","delete","challenge","poll","verify","payload","default"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/myaccount/transactions/EmailTransaction.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport BaseTransaction from './Base.js';\nimport { generateRequestFnFromLinks } from '../request.js';\n\nclass EmailTransaction extends BaseTransaction {\n    constructor(oktaAuth, options) {\n        super(oktaAuth, options);\n        const { accessToken, res } = options;\n        const { id, profile, roles, status, _links } = res;\n        this.id = id;\n        this.profile = profile;\n        this.roles = roles;\n        this.status = status;\n        this.get = async () => {\n            const fn = generateRequestFnFromLinks({\n                oktaAuth,\n                accessToken,\n                methodName: 'get',\n                links: _links,\n                transactionClassName: 'EmailTransaction'\n            });\n            return await fn();\n        };\n        this.delete = async () => {\n            const fn = generateRequestFnFromLinks({\n                oktaAuth,\n                accessToken,\n                methodName: 'delete',\n                links: _links\n            });\n            return await fn();\n        };\n        this.challenge = async () => {\n            const fn = generateRequestFnFromLinks({\n                oktaAuth,\n                accessToken,\n                methodName: 'challenge',\n                links: _links,\n                transactionClassName: 'EmailChallengeTransaction'\n            });\n            return await fn();\n        };\n        if (_links.poll) {\n            this.poll = async () => {\n                const fn = generateRequestFnFromLinks({\n                    oktaAuth,\n                    accessToken,\n                    methodName: 'poll',\n                    links: _links,\n                    transactionClassName: 'EmailStatusTransaction'\n                });\n                return await fn();\n            };\n        }\n        if (_links.verify) {\n            this.verify = async (payload) => {\n                const fn = generateRequestFnFromLinks({\n                    oktaAuth,\n                    accessToken,\n                    methodName: 'verify',\n                    links: _links,\n                });\n                return await fn(payload);\n            };\n        }\n    }\n}\n\nexport { EmailTransaction as default };\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,eAAP,MAA4B,WAA5B;AACA,SAASC,0BAAT,QAA2C,eAA3C;;AAEA,MAAMC,gBAAN,SAA+BF,eAA/B,CAA+C;EAC3CG,WAAW,CAACC,QAAD,EAAWC,OAAX,EAAoB;IAC3B,MAAMD,QAAN,EAAgBC,OAAhB;IACA,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAuBF,OAA7B;IACA,MAAM;MAAEG,EAAF;MAAMC,OAAN;MAAeC,KAAf;MAAsBC,MAAtB;MAA8BC;IAA9B,IAAyCL,GAA/C;IACA,KAAKC,EAAL,GAAUA,EAAV;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKE,GAAL,kCAAW,aAAY;MACnB,MAAMC,EAAE,GAAGb,0BAA0B,CAAC;QAClCG,QADkC;QAElCE,WAFkC;QAGlCS,UAAU,EAAE,KAHsB;QAIlCC,KAAK,EAAEJ,MAJ2B;QAKlCK,oBAAoB,EAAE;MALY,CAAD,CAArC;MAOA,aAAaH,EAAE,EAAf;IACH,CATD;IAUA,KAAKI,MAAL,kCAAc,aAAY;MACtB,MAAMJ,EAAE,GAAGb,0BAA0B,CAAC;QAClCG,QADkC;QAElCE,WAFkC;QAGlCS,UAAU,EAAE,QAHsB;QAIlCC,KAAK,EAAEJ;MAJ2B,CAAD,CAArC;MAMA,aAAaE,EAAE,EAAf;IACH,CARD;IASA,KAAKK,SAAL,kCAAiB,aAAY;MACzB,MAAML,EAAE,GAAGb,0BAA0B,CAAC;QAClCG,QADkC;QAElCE,WAFkC;QAGlCS,UAAU,EAAE,WAHsB;QAIlCC,KAAK,EAAEJ,MAJ2B;QAKlCK,oBAAoB,EAAE;MALY,CAAD,CAArC;MAOA,aAAaH,EAAE,EAAf;IACH,CATD;;IAUA,IAAIF,MAAM,CAACQ,IAAX,EAAiB;MACb,KAAKA,IAAL,kCAAY,aAAY;QACpB,MAAMN,EAAE,GAAGb,0BAA0B,CAAC;UAClCG,QADkC;UAElCE,WAFkC;UAGlCS,UAAU,EAAE,MAHsB;UAIlCC,KAAK,EAAEJ,MAJ2B;UAKlCK,oBAAoB,EAAE;QALY,CAAD,CAArC;QAOA,aAAaH,EAAE,EAAf;MACH,CATD;IAUH;;IACD,IAAIF,MAAM,CAACS,MAAX,EAAmB;MACf,KAAKA,MAAL;QAAA,8BAAc,WAAOC,OAAP,EAAmB;UAC7B,MAAMR,EAAE,GAAGb,0BAA0B,CAAC;YAClCG,QADkC;YAElCE,WAFkC;YAGlCS,UAAU,EAAE,QAHsB;YAIlCC,KAAK,EAAEJ;UAJ2B,CAAD,CAArC;UAMA,aAAaE,EAAE,CAACQ,OAAD,CAAf;QACH,CARD;;QAAA;UAAA;QAAA;MAAA;IASH;EACJ;;AA7D0C;;AAgE/C,SAASpB,gBAAgB,IAAIqB,OAA7B"},"metadata":{},"sourceType":"module"}