{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { AutoRenewService } from '../../services/AutoRenewService.js';\nimport { SyncStorageService } from '../../services/SyncStorageService.js';\nimport { LeaderElectionService } from '../../services/LeaderElectionService.js';\nimport { removeNils } from '../../util/object.js';\nconst AUTO_RENEW = 'autoRenew';\nconst SYNC_STORAGE = 'syncStorage';\nconst LEADER_ELECTION = 'leaderElection';\n\nclass ServiceManager {\n  constructor(sdk, options = {}) {\n    this.sdk = sdk;\n    this.onLeader = this.onLeader.bind(this);\n    const {\n      autoRenew,\n      autoRemove,\n      syncStorage\n    } = sdk.tokenManager.getOptions();\n    options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n    this.options = Object.assign({}, ServiceManager.defaultOptions, {\n      autoRenew,\n      autoRemove,\n      syncStorage\n    }, {\n      electionChannelName: `${sdk.options.clientId}-election`,\n      syncChannelName: `${sdk.options.clientId}-sync`\n    }, removeNils(options));\n    this.started = false;\n    this.services = new Map();\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  onLeader() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.started) {\n        yield _this.startServices();\n      }\n    })();\n  }\n\n  isLeader() {\n    var _a;\n\n    return (_a = this.getService(LEADER_ELECTION)) === null || _a === void 0 ? void 0 : _a.isLeader();\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.canStart() && srv.requiresLeadership());\n  }\n\n  start() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.started) {\n        return;\n      }\n\n      yield _this2.startServices();\n      _this2.started = true;\n    })();\n  }\n\n  stop() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.stopServices();\n      _this3.started = false;\n    })();\n  }\n\n  getService(name) {\n    return this.services.get(name);\n  }\n\n  startServices() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      for (const [name, srv] of _this4.services.entries()) {\n        if (_this4.canStartService(name, srv)) {\n          yield srv.start();\n        }\n      }\n    })();\n  }\n\n  stopServices() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      for (const srv of _this5.services.values()) {\n        yield srv.stop();\n      }\n    })();\n  }\n\n  canStartService(name, srv) {\n    let canStart = srv.canStart() && !srv.isStarted();\n\n    if (name === LEADER_ELECTION) {\n      canStart && (canStart = this.isLeaderRequired());\n    } else if (srv.requiresLeadership()) {\n      canStart && (canStart = this.isLeader());\n    }\n\n    return canStart;\n  }\n\n  createService(name) {\n    const tokenManager = this.sdk.tokenManager;\n    let service;\n\n    switch (name) {\n      case LEADER_ELECTION:\n        service = new LeaderElectionService(Object.assign(Object.assign({}, this.options), {\n          onLeader: this.onLeader\n        }));\n        break;\n\n      case AUTO_RENEW:\n        service = new AutoRenewService(tokenManager, Object.assign({}, this.options));\n        break;\n\n      case SYNC_STORAGE:\n        service = new SyncStorageService(tokenManager, Object.assign({}, this.options));\n        break;\n\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n\n    return service;\n  }\n\n}\n\nServiceManager.knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION];\nServiceManager.defaultOptions = {\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true\n};\nexport { ServiceManager };","map":{"version":3,"names":["AutoRenewService","SyncStorageService","LeaderElectionService","removeNils","AUTO_RENEW","SYNC_STORAGE","LEADER_ELECTION","ServiceManager","constructor","sdk","options","onLeader","bind","autoRenew","autoRemove","syncStorage","tokenManager","getOptions","electionChannelName","broadcastChannelName","Object","assign","defaultOptions","clientId","syncChannelName","started","services","Map","knownServices","forEach","name","svc","createService","set","startServices","isLeader","_a","getService","isLeaderRequired","values","some","srv","canStart","requiresLeadership","start","stop","stopServices","get","entries","canStartService","isStarted","service","Error"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/core/ServiceManager/browser.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AutoRenewService } from '../../services/AutoRenewService.js';\nimport { SyncStorageService } from '../../services/SyncStorageService.js';\nimport { LeaderElectionService } from '../../services/LeaderElectionService.js';\nimport { removeNils } from '../../util/object.js';\n\nconst AUTO_RENEW = 'autoRenew';\nconst SYNC_STORAGE = 'syncStorage';\nconst LEADER_ELECTION = 'leaderElection';\nclass ServiceManager {\n    constructor(sdk, options = {}) {\n        this.sdk = sdk;\n        this.onLeader = this.onLeader.bind(this);\n        const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n        options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n        this.options = Object.assign({}, ServiceManager.defaultOptions, { autoRenew, autoRemove, syncStorage }, {\n            electionChannelName: `${sdk.options.clientId}-election`,\n            syncChannelName: `${sdk.options.clientId}-sync`,\n        }, removeNils(options));\n        this.started = false;\n        this.services = new Map();\n        ServiceManager.knownServices.forEach(name => {\n            const svc = this.createService(name);\n            if (svc) {\n                this.services.set(name, svc);\n            }\n        });\n    }\n    async onLeader() {\n        if (this.started) {\n            await this.startServices();\n        }\n    }\n    isLeader() {\n        var _a;\n        return (_a = this.getService(LEADER_ELECTION)) === null || _a === void 0 ? void 0 : _a.isLeader();\n    }\n    isLeaderRequired() {\n        return [...this.services.values()].some(srv => srv.canStart() && srv.requiresLeadership());\n    }\n    async start() {\n        if (this.started) {\n            return;\n        }\n        await this.startServices();\n        this.started = true;\n    }\n    async stop() {\n        await this.stopServices();\n        this.started = false;\n    }\n    getService(name) {\n        return this.services.get(name);\n    }\n    async startServices() {\n        for (const [name, srv] of this.services.entries()) {\n            if (this.canStartService(name, srv)) {\n                await srv.start();\n            }\n        }\n    }\n    async stopServices() {\n        for (const srv of this.services.values()) {\n            await srv.stop();\n        }\n    }\n    canStartService(name, srv) {\n        let canStart = srv.canStart() && !srv.isStarted();\n        if (name === LEADER_ELECTION) {\n            canStart && (canStart = this.isLeaderRequired());\n        }\n        else if (srv.requiresLeadership()) {\n            canStart && (canStart = this.isLeader());\n        }\n        return canStart;\n    }\n    createService(name) {\n        const tokenManager = this.sdk.tokenManager;\n        let service;\n        switch (name) {\n            case LEADER_ELECTION:\n                service = new LeaderElectionService(Object.assign(Object.assign({}, this.options), { onLeader: this.onLeader }));\n                break;\n            case AUTO_RENEW:\n                service = new AutoRenewService(tokenManager, Object.assign({}, this.options));\n                break;\n            case SYNC_STORAGE:\n                service = new SyncStorageService(tokenManager, Object.assign({}, this.options));\n                break;\n            default:\n                throw new Error(`Unknown service ${name}`);\n        }\n        return service;\n    }\n}\nServiceManager.knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION];\nServiceManager.defaultOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true\n};\n\nexport { ServiceManager };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}