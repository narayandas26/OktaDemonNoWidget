{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Authenticator } from './Authenticator.js';\n\nclass SecurityQuestionVerification extends Authenticator {\n  canVerify(values) {\n    const {\n      credentials\n    } = values;\n\n    if (credentials && credentials.answer) {\n      return true;\n    }\n\n    const {\n      answer\n    } = values;\n    return !!answer;\n  }\n\n  mapCredentials(values) {\n    const {\n      answer\n    } = values;\n\n    if (!answer) {\n      return;\n    }\n\n    return {\n      questionKey: this.meta.contextualData.enrolledQuestion.questionKey,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [{\n      name: 'answer',\n      type: 'string',\n      label: 'Answer',\n      required: true\n    }];\n  }\n\n}\n\nexport { SecurityQuestionVerification };","map":{"version":3,"names":["Authenticator","SecurityQuestionVerification","canVerify","values","credentials","answer","mapCredentials","questionKey","meta","contextualData","enrolledQuestion","getInputs","name","type","label","required"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/authenticator/SecurityQuestionVerification.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Authenticator } from './Authenticator.js';\n\nclass SecurityQuestionVerification extends Authenticator {\n    canVerify(values) {\n        const { credentials } = values;\n        if (credentials && credentials.answer) {\n            return true;\n        }\n        const { answer } = values;\n        return !!answer;\n    }\n    mapCredentials(values) {\n        const { answer } = values;\n        if (!answer) {\n            return;\n        }\n        return {\n            questionKey: this.meta.contextualData.enrolledQuestion.questionKey,\n            answer\n        };\n    }\n    getInputs() {\n        return [\n            { name: 'answer', type: 'string', label: 'Answer', required: true }\n        ];\n    }\n}\n\nexport { SecurityQuestionVerification };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAT,QAA8B,oBAA9B;;AAEA,MAAMC,4BAAN,SAA2CD,aAA3C,CAAyD;EACrDE,SAAS,CAACC,MAAD,EAAS;IACd,MAAM;MAAEC;IAAF,IAAkBD,MAAxB;;IACA,IAAIC,WAAW,IAAIA,WAAW,CAACC,MAA/B,EAAuC;MACnC,OAAO,IAAP;IACH;;IACD,MAAM;MAAEA;IAAF,IAAaF,MAAnB;IACA,OAAO,CAAC,CAACE,MAAT;EACH;;EACDC,cAAc,CAACH,MAAD,EAAS;IACnB,MAAM;MAAEE;IAAF,IAAaF,MAAnB;;IACA,IAAI,CAACE,MAAL,EAAa;MACT;IACH;;IACD,OAAO;MACHE,WAAW,EAAE,KAAKC,IAAL,CAAUC,cAAV,CAAyBC,gBAAzB,CAA0CH,WADpD;MAEHF;IAFG,CAAP;EAIH;;EACDM,SAAS,GAAG;IACR,OAAO,CACH;MAAEC,IAAI,EAAE,QAAR;MAAkBC,IAAI,EAAE,QAAxB;MAAkCC,KAAK,EAAE,QAAzC;MAAmDC,QAAQ,EAAE;IAA7D,CADG,CAAP;EAGH;;AAvBoD;;AA0BzD,SAASd,4BAAT"},"metadata":{},"sourceType":"module"}