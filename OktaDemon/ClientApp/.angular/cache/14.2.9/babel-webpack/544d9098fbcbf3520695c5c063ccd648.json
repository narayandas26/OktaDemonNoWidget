{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Base/Remediator.js';\n\nclass ReEnrollAuthenticator extends Remediator {\n  mapCredentials() {\n    const {\n      newPassword\n    } = this.values;\n\n    if (!newPassword) {\n      return;\n    }\n\n    return {\n      passcode: newPassword\n    };\n  }\n\n  getInputCredentials(input) {\n    const challengeType = this.getAuthenticator().type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return Object.assign(Object.assign({}, input.form.value[0]), {\n      name\n    });\n  }\n\n}\n\nReEnrollAuthenticator.remediationName = 'reenroll-authenticator';\nexport { ReEnrollAuthenticator };","map":{"version":3,"names":["Remediator","ReEnrollAuthenticator","mapCredentials","newPassword","values","passcode","getInputCredentials","input","challengeType","getAuthenticator","type","name","Object","assign","form","value","remediationName"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/ReEnrollAuthenticator.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\n\nclass ReEnrollAuthenticator extends Remediator {\n    mapCredentials() {\n        const { newPassword } = this.values;\n        if (!newPassword) {\n            return;\n        }\n        return {\n            passcode: newPassword,\n        };\n    }\n    getInputCredentials(input) {\n        const challengeType = this.getAuthenticator().type;\n        const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n        return Object.assign(Object.assign({}, input.form.value[0]), { name });\n    }\n}\nReEnrollAuthenticator.remediationName = 'reenroll-authenticator';\n\nexport { ReEnrollAuthenticator };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,sBAA3B;;AAEA,MAAMC,qBAAN,SAAoCD,UAApC,CAA+C;EAC3CE,cAAc,GAAG;IACb,MAAM;MAAEC;IAAF,IAAkB,KAAKC,MAA7B;;IACA,IAAI,CAACD,WAAL,EAAkB;MACd;IACH;;IACD,OAAO;MACHE,QAAQ,EAAEF;IADP,CAAP;EAGH;;EACDG,mBAAmB,CAACC,KAAD,EAAQ;IACvB,MAAMC,aAAa,GAAG,KAAKC,gBAAL,GAAwBC,IAA9C;IACA,MAAMC,IAAI,GAAGH,aAAa,KAAK,UAAlB,GAA+B,aAA/B,GAA+C,kBAA5D;IACA,OAAOI,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAK,CAACO,IAAN,CAAWC,KAAX,CAAiB,CAAjB,CAAlB,CAAd,EAAsD;MAAEJ;IAAF,CAAtD,CAAP;EACH;;AAd0C;;AAgB/CV,qBAAqB,CAACe,eAAtB,GAAwC,wBAAxC;AAEA,SAASf,qBAAT"},"metadata":{},"sourceType":"module"}