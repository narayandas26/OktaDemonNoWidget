{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport PCancelable from 'p-cancelable';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { getConsole } from '../util/console.js';\nimport { PromiseQueue } from '../util/PromiseQueue.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { EVENT_ADDED, EVENT_REMOVED } from '../oidc/types/TokenManager.js';\nconst INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\n\nconst isSameAuthState = (prevState, state) => {\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken) && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken) && prevState.error === state.error;\n};\n\nclass AuthStateManager {\n  constructor(sdk) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = Object.assign({}, DEFAULT_PENDING);\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    this._prevAuthState = null;\n    this._transformQueue = new PromiseQueue({\n      quiet: true\n    });\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({\n        event: EVENT_ADDED,\n        key,\n        token\n      });\n\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({\n        event: EVENT_REMOVED,\n        key,\n        token\n      });\n\n      this.updateAuthState();\n    });\n  }\n\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n\n  getAuthState() {\n    return this._authState;\n  }\n\n  getPreviousAuthState() {\n    return this._prevAuthState;\n  }\n\n  updateAuthState() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        transformAuthState,\n        devMode\n      } = _this._sdk.options;\n\n      const log = status => {\n        const {\n          event,\n          key,\n          token\n        } = _this._logOptions;\n        getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n        getConsole().log(key, token);\n        getConsole().log('Current authState', _this._authState);\n        getConsole().groupEnd();\n        _this._logOptions = {};\n      };\n\n      const emitAuthStateChange = authState => {\n        if (isSameAuthState(_this._authState, authState)) {\n          devMode && log('unchanged');\n          return;\n        }\n\n        _this._prevAuthState = _this._authState;\n        _this._authState = authState;\n\n        _this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, Object.assign({}, authState));\n\n        devMode && log('emitted');\n      };\n\n      const finalPromise = origPromise => {\n        return _this._pending.updateAuthStatePromise.then(() => {\n          const curPromise = _this._pending.updateAuthStatePromise;\n\n          if (curPromise && curPromise !== origPromise) {\n            return finalPromise(curPromise);\n          }\n\n          return _this.getAuthState();\n        });\n      };\n\n      if (_this._pending.updateAuthStatePromise) {\n        if (_this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n          devMode && log('terminated');\n          return finalPromise(_this._pending.updateAuthStatePromise);\n        } else {\n          _this._pending.updateAuthStatePromise.cancel();\n        }\n      }\n\n      const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n        onCancel.shouldReject = false;\n        onCancel(() => {\n          _this._pending.updateAuthStatePromise = null;\n          _this._pending.canceledTimes = _this._pending.canceledTimes + 1;\n          devMode && log('canceled');\n        });\n\n        const emitAndResolve = authState => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          emitAuthStateChange(authState);\n          resolve();\n          _this._pending = Object.assign({}, DEFAULT_PENDING);\n        };\n\n        _this._sdk.isAuthenticated().then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          const {\n            accessToken,\n            idToken,\n            refreshToken\n          } = _this._sdk.tokenManager.getTokensSync();\n\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n          const promise = transformAuthState ? _this._transformQueue.push(transformAuthState, null, _this._sdk, authState) : Promise.resolve(authState);\n          promise.then(authState => emitAndResolve(authState)).catch(error => emitAndResolve({\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: false,\n            error\n          }));\n        });\n      });\n      _this._pending.updateAuthStatePromise = cancelablePromise;\n      return finalPromise(cancelablePromise);\n    })();\n  }\n\n  subscribe(handler) {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n  unsubscribe(handler) {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n}\n\nexport { AuthStateManager, INITIAL_AUTH_STATE };","map":{"version":3,"names":["PCancelable","AuthSdkError","getConsole","PromiseQueue","EVENT_ADDED","EVENT_REMOVED","INITIAL_AUTH_STATE","DEFAULT_PENDING","updateAuthStatePromise","canceledTimes","EVENT_AUTH_STATE_CHANGE","MAX_PROMISE_CANCEL_TIMES","isSameAuthState","prevState","state","isAuthenticated","JSON","stringify","idToken","accessToken","error","AuthStateManager","constructor","sdk","emitter","_sdk","_pending","Object","assign","_authState","_logOptions","_prevAuthState","_transformQueue","quiet","tokenManager","on","key","token","_setLogOptions","event","updateAuthState","options","getAuthState","getPreviousAuthState","transformAuthState","devMode","log","status","group","groupEnd","emitAuthStateChange","authState","emit","finalPromise","origPromise","then","curPromise","cancel","cancelablePromise","resolve","_","onCancel","shouldReject","emitAndResolve","isCanceled","refreshToken","getTokensSync","promise","push","Promise","catch","subscribe","handler","unsubscribe","off"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/core/AuthStateManager.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport PCancelable from 'p-cancelable';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { getConsole } from '../util/console.js';\nimport { PromiseQueue } from '../util/PromiseQueue.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { EVENT_ADDED, EVENT_REMOVED } from '../oidc/types/TokenManager.js';\n\nconst INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n    updateAuthStatePromise: null,\n    canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\nconst isSameAuthState = (prevState, state) => {\n    if (!prevState) {\n        return false;\n    }\n    return prevState.isAuthenticated === state.isAuthenticated\n        && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n        && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n        && prevState.error === state.error;\n};\nclass AuthStateManager {\n    constructor(sdk) {\n        if (!sdk.emitter) {\n            throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n        }\n        this._sdk = sdk;\n        this._pending = Object.assign({}, DEFAULT_PENDING);\n        this._authState = INITIAL_AUTH_STATE;\n        this._logOptions = {};\n        this._prevAuthState = null;\n        this._transformQueue = new PromiseQueue({\n            quiet: true\n        });\n        sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n            this._setLogOptions({ event: EVENT_ADDED, key, token });\n            this.updateAuthState();\n        });\n        sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n            this._setLogOptions({ event: EVENT_REMOVED, key, token });\n            this.updateAuthState();\n        });\n    }\n    _setLogOptions(options) {\n        this._logOptions = options;\n    }\n    getAuthState() {\n        return this._authState;\n    }\n    getPreviousAuthState() {\n        return this._prevAuthState;\n    }\n    async updateAuthState() {\n        const { transformAuthState, devMode } = this._sdk.options;\n        const log = (status) => {\n            const { event, key, token } = this._logOptions;\n            getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n            getConsole().log(key, token);\n            getConsole().log('Current authState', this._authState);\n            getConsole().groupEnd();\n            this._logOptions = {};\n        };\n        const emitAuthStateChange = (authState) => {\n            if (isSameAuthState(this._authState, authState)) {\n                devMode && log('unchanged');\n                return;\n            }\n            this._prevAuthState = this._authState;\n            this._authState = authState;\n            this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, Object.assign({}, authState));\n            devMode && log('emitted');\n        };\n        const finalPromise = (origPromise) => {\n            return this._pending.updateAuthStatePromise.then(() => {\n                const curPromise = this._pending.updateAuthStatePromise;\n                if (curPromise && curPromise !== origPromise) {\n                    return finalPromise(curPromise);\n                }\n                return this.getAuthState();\n            });\n        };\n        if (this._pending.updateAuthStatePromise) {\n            if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n                devMode && log('terminated');\n                return finalPromise(this._pending.updateAuthStatePromise);\n            }\n            else {\n                this._pending.updateAuthStatePromise.cancel();\n            }\n        }\n        const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n            onCancel.shouldReject = false;\n            onCancel(() => {\n                this._pending.updateAuthStatePromise = null;\n                this._pending.canceledTimes = this._pending.canceledTimes + 1;\n                devMode && log('canceled');\n            });\n            const emitAndResolve = (authState) => {\n                if (cancelablePromise.isCanceled) {\n                    resolve();\n                    return;\n                }\n                emitAuthStateChange(authState);\n                resolve();\n                this._pending = Object.assign({}, DEFAULT_PENDING);\n            };\n            this._sdk.isAuthenticated()\n                .then(() => {\n                if (cancelablePromise.isCanceled) {\n                    resolve();\n                    return;\n                }\n                const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n                const authState = {\n                    accessToken,\n                    idToken,\n                    refreshToken,\n                    isAuthenticated: !!(accessToken && idToken)\n                };\n                const promise = transformAuthState\n                    ? this._transformQueue.push(transformAuthState, null, this._sdk, authState)\n                    : Promise.resolve(authState);\n                promise\n                    .then(authState => emitAndResolve(authState))\n                    .catch(error => emitAndResolve({\n                    accessToken,\n                    idToken,\n                    refreshToken,\n                    isAuthenticated: false,\n                    error\n                }));\n            });\n        });\n        this._pending.updateAuthStatePromise = cancelablePromise;\n        return finalPromise(cancelablePromise);\n    }\n    subscribe(handler) {\n        this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n    }\n    unsubscribe(handler) {\n        this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n    }\n}\n\nexport { AuthStateManager, INITIAL_AUTH_STATE };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}