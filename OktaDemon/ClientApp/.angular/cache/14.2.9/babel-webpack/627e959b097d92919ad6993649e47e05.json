{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { AuthenticationFlow } from './AuthenticationFlow.js';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow.js';\nimport { RegistrationFlow } from './RegistrationFlow.js';\nimport { AccountUnlockFlow } from './AccountUnlockFlow.js';\n\nfunction getFlowSpecification(oktaAuth, flow = 'default') {\n  let remediators,\n      actions,\n      withCredentials = true;\n\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = ['currentAuthenticator-recover', 'currentAuthenticatorEnrollment-recover'];\n      withCredentials = false;\n      break;\n\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = ['unlock-account'];\n      break;\n\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n\n    default:\n      remediators = AuthenticationFlow;\n      break;\n  }\n\n  return {\n    flow,\n    remediators,\n    actions,\n    withCredentials\n  };\n}\n\nexport { getFlowSpecification };","map":{"version":3,"names":["AuthenticationFlow","PasswordRecoveryFlow","RegistrationFlow","AccountUnlockFlow","getFlowSpecification","oktaAuth","flow","remediators","actions","withCredentials"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/flow/FlowSpecification.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthenticationFlow } from './AuthenticationFlow.js';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow.js';\nimport { RegistrationFlow } from './RegistrationFlow.js';\nimport { AccountUnlockFlow } from './AccountUnlockFlow.js';\n\nfunction getFlowSpecification(oktaAuth, flow = 'default') {\n    let remediators, actions, withCredentials = true;\n    switch (flow) {\n        case 'register':\n        case 'signup':\n        case 'enrollProfile':\n            remediators = RegistrationFlow;\n            withCredentials = false;\n            break;\n        case 'recoverPassword':\n        case 'resetPassword':\n            remediators = PasswordRecoveryFlow;\n            actions = [\n                'currentAuthenticator-recover',\n                'currentAuthenticatorEnrollment-recover'\n            ];\n            withCredentials = false;\n            break;\n        case 'unlockAccount':\n            remediators = AccountUnlockFlow;\n            withCredentials = false;\n            actions = [\n                'unlock-account'\n            ];\n            break;\n        case 'authenticate':\n        case 'login':\n        case 'signin':\n            remediators = AuthenticationFlow;\n            break;\n        default:\n            remediators = AuthenticationFlow;\n            break;\n    }\n    return { flow, remediators, actions, withCredentials };\n}\n\nexport { getFlowSpecification };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,kBAAT,QAAmC,yBAAnC;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,iBAAT,QAAkC,wBAAlC;;AAEA,SAASC,oBAAT,CAA8BC,QAA9B,EAAwCC,IAAI,GAAG,SAA/C,EAA0D;EACtD,IAAIC,WAAJ;EAAA,IAAiBC,OAAjB;EAAA,IAA0BC,eAAe,GAAG,IAA5C;;EACA,QAAQH,IAAR;IACI,KAAK,UAAL;IACA,KAAK,QAAL;IACA,KAAK,eAAL;MACIC,WAAW,GAAGL,gBAAd;MACAO,eAAe,GAAG,KAAlB;MACA;;IACJ,KAAK,iBAAL;IACA,KAAK,eAAL;MACIF,WAAW,GAAGN,oBAAd;MACAO,OAAO,GAAG,CACN,8BADM,EAEN,wCAFM,CAAV;MAIAC,eAAe,GAAG,KAAlB;MACA;;IACJ,KAAK,eAAL;MACIF,WAAW,GAAGJ,iBAAd;MACAM,eAAe,GAAG,KAAlB;MACAD,OAAO,GAAG,CACN,gBADM,CAAV;MAGA;;IACJ,KAAK,cAAL;IACA,KAAK,OAAL;IACA,KAAK,QAAL;MACID,WAAW,GAAGP,kBAAd;MACA;;IACJ;MACIO,WAAW,GAAGP,kBAAd;MACA;EA9BR;;EAgCA,OAAO;IAAEM,IAAF;IAAQC,WAAR;IAAqBC,OAArB;IAA8BC;EAA9B,CAAP;AACH;;AAED,SAASL,oBAAT"},"metadata":{},"sourceType":"module"}