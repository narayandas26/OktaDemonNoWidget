{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport generateIdxAction from './generateIdxAction.js';\n\nconst generateRemediationFunctions = function generateRemediationFunctions(authClient, remediationValue, toPersist = {}) {\n  return Object.fromEntries(remediationValue.map(remediation => {\n    return [remediation.name, generateIdxAction(authClient, remediation, toPersist)];\n  }));\n};\n\nexport { generateRemediationFunctions };","map":{"version":3,"names":["generateIdxAction","generateRemediationFunctions","authClient","remediationValue","toPersist","Object","fromEntries","map","remediation","name"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/idxState/v1/remediationParser.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport generateIdxAction from './generateIdxAction.js';\n\nconst generateRemediationFunctions = function generateRemediationFunctions(authClient, remediationValue, toPersist = {}) {\n    return Object.fromEntries(remediationValue.map(remediation => {\n        return [\n            remediation.name,\n            generateIdxAction(authClient, remediation, toPersist),\n        ];\n    }));\n};\n\nexport { generateRemediationFunctions };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,iBAAP,MAA8B,wBAA9B;;AAEA,MAAMC,4BAA4B,GAAG,SAASA,4BAAT,CAAsCC,UAAtC,EAAkDC,gBAAlD,EAAoEC,SAAS,GAAG,EAAhF,EAAoF;EACrH,OAAOC,MAAM,CAACC,WAAP,CAAmBH,gBAAgB,CAACI,GAAjB,CAAqBC,WAAW,IAAI;IAC1D,OAAO,CACHA,WAAW,CAACC,IADT,EAEHT,iBAAiB,CAACE,UAAD,EAAaM,WAAb,EAA0BJ,SAA1B,CAFd,CAAP;EAIH,CALyB,CAAnB,CAAP;AAMH,CAPD;;AASA,SAASH,4BAAT"},"metadata":{},"sourceType":"module"}