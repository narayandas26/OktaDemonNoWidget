{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { AuthenticatorData } from './Base/AuthenticatorData.js';\nimport { getAuthenticatorFromRemediation } from './util.js';\n\nclass AuthenticatorEnrollmentData extends AuthenticatorData {\n  mapAuthenticator() {\n    const authenticatorData = this.getAuthenticatorData();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    return {\n      id: authenticatorFromRemediation.form.value.find(({\n        name\n      }) => name === 'id').value,\n      methodType: authenticatorData.methodType,\n      phoneNumber: authenticatorData.phoneNumber\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    return [{\n      name: 'methodType',\n      type: 'string'\n    }, {\n      name: 'phoneNumber',\n      label: 'Phone Number',\n      type: 'string'\n    }].map(item => {\n      const value = remediation.form.value.find(val => val.name === item.name);\n      return Object.assign(Object.assign({}, value), item);\n    });\n  }\n\n  mapAuthenticatorDataFromValues(data) {\n    data = super.mapAuthenticatorDataFromValues(data);\n    const {\n      phoneNumber\n    } = this.values;\n\n    if (!data && !phoneNumber) {\n      return;\n    }\n\n    return Object.assign(Object.assign({}, data && data), phoneNumber && {\n      phoneNumber\n    });\n  }\n\n}\n\nAuthenticatorEnrollmentData.remediationName = 'authenticator-enrollment-data';\nexport { AuthenticatorEnrollmentData };","map":{"version":3,"names":["AuthenticatorData","getAuthenticatorFromRemediation","AuthenticatorEnrollmentData","mapAuthenticator","authenticatorData","getAuthenticatorData","authenticatorFromRemediation","remediation","id","form","value","find","name","methodType","phoneNumber","getInputAuthenticator","type","label","map","item","val","Object","assign","mapAuthenticatorDataFromValues","data","values","remediationName"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/AuthenticatorEnrollmentData.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthenticatorData } from './Base/AuthenticatorData.js';\nimport { getAuthenticatorFromRemediation } from './util.js';\n\nclass AuthenticatorEnrollmentData extends AuthenticatorData {\n    mapAuthenticator() {\n        const authenticatorData = this.getAuthenticatorData();\n        const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n        return {\n            id: authenticatorFromRemediation.form.value\n                .find(({ name }) => name === 'id').value,\n            methodType: authenticatorData.methodType,\n            phoneNumber: authenticatorData.phoneNumber,\n        };\n    }\n    getInputAuthenticator(remediation) {\n        return [\n            { name: 'methodType', type: 'string' },\n            { name: 'phoneNumber', label: 'Phone Number', type: 'string' }\n        ].map(item => {\n            const value = remediation.form.value.find(val => val.name === item.name);\n            return Object.assign(Object.assign({}, value), item);\n        });\n    }\n    mapAuthenticatorDataFromValues(data) {\n        data = super.mapAuthenticatorDataFromValues(data);\n        const { phoneNumber } = this.values;\n        if (!data && !phoneNumber) {\n            return;\n        }\n        return Object.assign(Object.assign({}, (data && data)), (phoneNumber && { phoneNumber }));\n    }\n}\nAuthenticatorEnrollmentData.remediationName = 'authenticator-enrollment-data';\n\nexport { AuthenticatorEnrollmentData };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,iBAAT,QAAkC,6BAAlC;AACA,SAASC,+BAAT,QAAgD,WAAhD;;AAEA,MAAMC,2BAAN,SAA0CF,iBAA1C,CAA4D;EACxDG,gBAAgB,GAAG;IACf,MAAMC,iBAAiB,GAAG,KAAKC,oBAAL,EAA1B;IACA,MAAMC,4BAA4B,GAAGL,+BAA+B,CAAC,KAAKM,WAAN,CAApE;IACA,OAAO;MACHC,EAAE,EAAEF,4BAA4B,CAACG,IAA7B,CAAkCC,KAAlC,CACCC,IADD,CACM,CAAC;QAAEC;MAAF,CAAD,KAAcA,IAAI,KAAK,IAD7B,EACmCF,KAFpC;MAGHG,UAAU,EAAET,iBAAiB,CAACS,UAH3B;MAIHC,WAAW,EAAEV,iBAAiB,CAACU;IAJ5B,CAAP;EAMH;;EACDC,qBAAqB,CAACR,WAAD,EAAc;IAC/B,OAAO,CACH;MAAEK,IAAI,EAAE,YAAR;MAAsBI,IAAI,EAAE;IAA5B,CADG,EAEH;MAAEJ,IAAI,EAAE,aAAR;MAAuBK,KAAK,EAAE,cAA9B;MAA8CD,IAAI,EAAE;IAApD,CAFG,EAGLE,GAHK,CAGDC,IAAI,IAAI;MACV,MAAMT,KAAK,GAAGH,WAAW,CAACE,IAAZ,CAAiBC,KAAjB,CAAuBC,IAAvB,CAA4BS,GAAG,IAAIA,GAAG,CAACR,IAAJ,KAAaO,IAAI,CAACP,IAArD,CAAd;MACA,OAAOS,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,KAAlB,CAAd,EAAwCS,IAAxC,CAAP;IACH,CANM,CAAP;EAOH;;EACDI,8BAA8B,CAACC,IAAD,EAAO;IACjCA,IAAI,GAAG,MAAMD,8BAAN,CAAqCC,IAArC,CAAP;IACA,MAAM;MAAEV;IAAF,IAAkB,KAAKW,MAA7B;;IACA,IAAI,CAACD,IAAD,IAAS,CAACV,WAAd,EAA2B;MACvB;IACH;;IACD,OAAOO,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAmBE,IAAI,IAAIA,IAA3B,CAAd,EAAkDV,WAAW,IAAI;MAAEA;IAAF,CAAjE,CAAP;EACH;;AA3BuD;;AA6B5DZ,2BAA2B,CAACwB,eAA5B,GAA8C,+BAA9C;AAEA,SAASxB,2BAAT"},"metadata":{},"sourceType":"module"}