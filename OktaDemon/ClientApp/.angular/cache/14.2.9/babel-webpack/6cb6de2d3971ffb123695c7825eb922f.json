{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Base/Remediator.js';\nlet EnrollmentChannelData = /*#__PURE__*/(() => {\n  class EnrollmentChannelData extends Remediator {\n    getInputEmail() {\n      return [{\n        name: 'email',\n        type: 'string',\n        required: true,\n        label: 'Email'\n      }];\n    }\n\n    getInputPhoneNumber() {\n      return [{\n        name: 'phoneNumber',\n        type: 'string',\n        required: true,\n        label: 'Phone Number'\n      }];\n    }\n\n    canRemediate() {\n      return Boolean(this.values.email || this.values.phoneNumber);\n    }\n\n    getNextStep(authClient, context) {\n      const common = super.getNextStep(authClient, context);\n      const authenticator = context.currentAuthenticator.value;\n      return Object.assign(Object.assign({}, common), {\n        authenticator\n      });\n    }\n\n    getData() {\n      return {\n        stateHandle: this.values.stateHandle,\n        email: this.values.email,\n        phoneNumber: this.values.phoneNumber\n      };\n    }\n\n    getValuesAfterProceed() {\n      let trimmedValues = Object.keys(this.values).filter(valueKey => !['email', 'phoneNumber'].includes(valueKey));\n      return trimmedValues.reduce((values, valueKey) => Object.assign(Object.assign({}, values), {\n        [valueKey]: this.values[valueKey]\n      }), {});\n    }\n\n  }\n\n  EnrollmentChannelData.remediationName = 'enrollment-channel-data';\n  return EnrollmentChannelData;\n})();\nexport { EnrollmentChannelData }; //# sourceMappingURL=EnrollmentChannelData.js.map","map":null,"metadata":{},"sourceType":"module"}