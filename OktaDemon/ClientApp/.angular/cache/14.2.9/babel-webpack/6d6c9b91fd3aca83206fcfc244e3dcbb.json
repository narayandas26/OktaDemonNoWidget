{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { isAuthenticator } from '../types/api.js';\n\nfunction formatAuthenticator(incoming) {\n  let authenticator;\n\n  if (isAuthenticator(incoming)) {\n    authenticator = incoming;\n  } else if (typeof incoming === 'string') {\n    authenticator = {\n      key: incoming\n    };\n  } else {\n    throw new Error('Invalid format for authenticator');\n  }\n\n  return authenticator;\n}\n\nfunction compareAuthenticators(auth1, auth2) {\n  if (!auth1 || !auth2) {\n    return false;\n  }\n\n  if (auth1.id && auth2.id) {\n    return auth1.id === auth2.id;\n  }\n\n  if (auth1.key && auth2.key) {\n    return auth1.key === auth2.key;\n  }\n\n  return false;\n}\n\nfunction findMatchedOption(authenticators, options) {\n  let option;\n\n  for (let authenticator of authenticators) {\n    option = options.find(({\n      relatesTo\n    }) => relatesTo.key === authenticator.key);\n\n    if (option) {\n      break;\n    }\n  }\n\n  return option;\n}\n\nexport { compareAuthenticators, findMatchedOption, formatAuthenticator };","map":{"version":3,"names":["isAuthenticator","formatAuthenticator","incoming","authenticator","key","Error","compareAuthenticators","auth1","auth2","id","findMatchedOption","authenticators","options","option","find","relatesTo"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/authenticator/util.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { isAuthenticator } from '../types/api.js';\n\nfunction formatAuthenticator(incoming) {\n    let authenticator;\n    if (isAuthenticator(incoming)) {\n        authenticator = incoming;\n    }\n    else if (typeof incoming === 'string') {\n        authenticator = {\n            key: incoming\n        };\n    }\n    else {\n        throw new Error('Invalid format for authenticator');\n    }\n    return authenticator;\n}\nfunction compareAuthenticators(auth1, auth2) {\n    if (!auth1 || !auth2) {\n        return false;\n    }\n    if (auth1.id && auth2.id) {\n        return (auth1.id === auth2.id);\n    }\n    if (auth1.key && auth2.key) {\n        return (auth1.key === auth2.key);\n    }\n    return false;\n}\nfunction findMatchedOption(authenticators, options) {\n    let option;\n    for (let authenticator of authenticators) {\n        option = options\n            .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n        if (option) {\n            break;\n        }\n    }\n    return option;\n}\n\nexport { compareAuthenticators, findMatchedOption, formatAuthenticator };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,eAAT,QAAgC,iBAAhC;;AAEA,SAASC,mBAAT,CAA6BC,QAA7B,EAAuC;EACnC,IAAIC,aAAJ;;EACA,IAAIH,eAAe,CAACE,QAAD,CAAnB,EAA+B;IAC3BC,aAAa,GAAGD,QAAhB;EACH,CAFD,MAGK,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;IACnCC,aAAa,GAAG;MACZC,GAAG,EAAEF;IADO,CAAhB;EAGH,CAJI,MAKA;IACD,MAAM,IAAIG,KAAJ,CAAU,kCAAV,CAAN;EACH;;EACD,OAAOF,aAAP;AACH;;AACD,SAASG,qBAAT,CAA+BC,KAA/B,EAAsCC,KAAtC,EAA6C;EACzC,IAAI,CAACD,KAAD,IAAU,CAACC,KAAf,EAAsB;IAClB,OAAO,KAAP;EACH;;EACD,IAAID,KAAK,CAACE,EAAN,IAAYD,KAAK,CAACC,EAAtB,EAA0B;IACtB,OAAQF,KAAK,CAACE,EAAN,KAAaD,KAAK,CAACC,EAA3B;EACH;;EACD,IAAIF,KAAK,CAACH,GAAN,IAAaI,KAAK,CAACJ,GAAvB,EAA4B;IACxB,OAAQG,KAAK,CAACH,GAAN,KAAcI,KAAK,CAACJ,GAA5B;EACH;;EACD,OAAO,KAAP;AACH;;AACD,SAASM,iBAAT,CAA2BC,cAA3B,EAA2CC,OAA3C,EAAoD;EAChD,IAAIC,MAAJ;;EACA,KAAK,IAAIV,aAAT,IAA0BQ,cAA1B,EAA0C;IACtCE,MAAM,GAAGD,OAAO,CACXE,IADI,CACC,CAAC;MAAEC;IAAF,CAAD,KAAmBA,SAAS,CAACX,GAAV,KAAkBD,aAAa,CAACC,GADpD,CAAT;;IAEA,IAAIS,MAAJ,EAAY;MACR;IACH;EACJ;;EACD,OAAOA,MAAP;AACH;;AAED,SAASP,qBAAT,EAAgCI,iBAAhC,EAAmDT,mBAAnD"},"metadata":{},"sourceType":"module"}