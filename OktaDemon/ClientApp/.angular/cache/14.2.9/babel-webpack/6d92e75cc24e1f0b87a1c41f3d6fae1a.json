{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst isFieldMutable = function isFieldMutable(field) {\n  return field.mutable !== false;\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability(action) {\n  var _a, _b;\n\n  const defaultParamsForAction = {};\n  const neededParamsForAction = [];\n  const immutableParamsForAction = {};\n\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return {\n      defaultParamsForAction,\n      neededParamsForAction,\n      immutableParamsForAction\n    };\n  }\n\n  for (let field of action.value) {\n    if (isFieldMutable(field)) {\n      neededParamsForAction.push(field);\n\n      if ((_a = field.value) !== null && _a !== void 0 ? _a : false) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n    } else {\n      immutableParamsForAction[field.name] = (_b = field.value) !== null && _b !== void 0 ? _b : '';\n    }\n  }\n\n  return {\n    defaultParamsForAction,\n    neededParamsForAction,\n    immutableParamsForAction\n  };\n};\n\nconst divideActionParamsByMutability = function divideActionParamsByMutability(actionList) {\n  actionList = Array.isArray(actionList) ? actionList : [actionList];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for (let action of actionList) {\n    const {\n      defaultParamsForAction,\n      neededParamsForAction,\n      immutableParamsForAction\n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return {\n    defaultParams,\n    neededParams,\n    immutableParams\n  };\n};\n\nexport { divideActionParamsByMutability }; //# sourceMappingURL=actionParser.js.map","map":null,"metadata":{},"sourceType":"module"}