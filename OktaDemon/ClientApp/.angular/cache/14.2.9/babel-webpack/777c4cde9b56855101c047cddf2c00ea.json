{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { SelectAuthenticator } from './Base/SelectAuthenticator.js';\n\nclass SelectAuthenticatorUnlockAccount extends SelectAuthenticator {\n  constructor() {\n    super(...arguments);\n    this.map = {\n      identifier: ['username']\n    };\n  }\n\n  canRemediate() {\n    const identifier = this.getData('identifier');\n    return !!identifier && super.canRemediate();\n  }\n\n  mapAuthenticator(remediationValue) {\n    var _a, _b, _c;\n\n    const authenticatorMap = super.mapAuthenticator(remediationValue);\n    const methodTypeOption = (_a = this.selectedOption) === null || _a === void 0 ? void 0 : _a.value.form.value.find(({\n      name\n    }) => name === 'methodType');\n    const methodTypeValue = this.values.methodType || (methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.value) || ((_c = (_b = methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.options) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.value);\n\n    if (methodTypeValue) {\n      return Object.assign(Object.assign({}, authenticatorMap), {\n        methodType: methodTypeValue\n      });\n    }\n\n    return authenticatorMap;\n  }\n\n  getInputUsername() {\n    return {\n      name: 'username',\n      type: 'string'\n    };\n  }\n\n}\n\nSelectAuthenticatorUnlockAccount.remediationName = 'select-authenticator-unlock-account';\nexport { SelectAuthenticatorUnlockAccount };","map":{"version":3,"names":["SelectAuthenticator","SelectAuthenticatorUnlockAccount","constructor","arguments","map","identifier","canRemediate","getData","mapAuthenticator","remediationValue","_a","_b","_c","authenticatorMap","methodTypeOption","selectedOption","value","form","find","name","methodTypeValue","values","methodType","options","Object","assign","getInputUsername","type","remediationName"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/SelectAuthenticatorUnlockAccount.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { SelectAuthenticator } from './Base/SelectAuthenticator.js';\n\nclass SelectAuthenticatorUnlockAccount extends SelectAuthenticator {\n    constructor() {\n        super(...arguments);\n        this.map = {\n            identifier: ['username']\n        };\n    }\n    canRemediate() {\n        const identifier = this.getData('identifier');\n        return !!identifier && super.canRemediate();\n    }\n    mapAuthenticator(remediationValue) {\n        var _a, _b, _c;\n        const authenticatorMap = super.mapAuthenticator(remediationValue);\n        const methodTypeOption = (_a = this.selectedOption) === null || _a === void 0 ? void 0 : _a.value.form.value.find(({ name }) => name === 'methodType');\n        const methodTypeValue = this.values.methodType ||\n            (methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.value) || ((_c = (_b = methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.options) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.value);\n        if (methodTypeValue) {\n            return Object.assign(Object.assign({}, authenticatorMap), { methodType: methodTypeValue });\n        }\n        return authenticatorMap;\n    }\n    getInputUsername() {\n        return { name: 'username', type: 'string' };\n    }\n}\nSelectAuthenticatorUnlockAccount.remediationName = 'select-authenticator-unlock-account';\n\nexport { SelectAuthenticatorUnlockAccount };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,mBAAT,QAAoC,+BAApC;;AAEA,MAAMC,gCAAN,SAA+CD,mBAA/C,CAAmE;EAC/DE,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKC,GAAL,GAAW;MACPC,UAAU,EAAE,CAAC,UAAD;IADL,CAAX;EAGH;;EACDC,YAAY,GAAG;IACX,MAAMD,UAAU,GAAG,KAAKE,OAAL,CAAa,YAAb,CAAnB;IACA,OAAO,CAAC,CAACF,UAAF,IAAgB,MAAMC,YAAN,EAAvB;EACH;;EACDE,gBAAgB,CAACC,gBAAD,EAAmB;IAC/B,IAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;;IACA,MAAMC,gBAAgB,GAAG,MAAML,gBAAN,CAAuBC,gBAAvB,CAAzB;IACA,MAAMK,gBAAgB,GAAG,CAACJ,EAAE,GAAG,KAAKK,cAAX,MAA+B,IAA/B,IAAuCL,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACM,KAAH,CAASC,IAAT,CAAcD,KAAd,CAAoBE,IAApB,CAAyB,CAAC;MAAEC;IAAF,CAAD,KAAcA,IAAI,KAAK,YAAhD,CAAzF;IACA,MAAMC,eAAe,GAAG,KAAKC,MAAL,CAAYC,UAAZ,KACnBR,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACE,KADlE,MAC6E,CAACJ,EAAE,GAAG,CAACD,EAAE,GAAGG,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACS,OAA3F,MAAwG,IAAxG,IAAgHZ,EAAE,KAAK,KAAK,CAA5H,GAAgI,KAAK,CAArI,GAAyIA,EAAE,CAAC,CAAD,CAAjJ,MAA0J,IAA1J,IAAkKC,EAAE,KAAK,KAAK,CAA9K,GAAkL,KAAK,CAAvL,GAA2LA,EAAE,CAACI,KAD3Q,CAAxB;;IAEA,IAAII,eAAJ,EAAqB;MACjB,OAAOI,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,gBAAlB,CAAd,EAAmD;QAAES,UAAU,EAAEF;MAAd,CAAnD,CAAP;IACH;;IACD,OAAOP,gBAAP;EACH;;EACDa,gBAAgB,GAAG;IACf,OAAO;MAAEP,IAAI,EAAE,UAAR;MAAoBQ,IAAI,EAAE;IAA1B,CAAP;EACH;;AAxB8D;;AA0BnE1B,gCAAgC,CAAC2B,eAAjC,GAAmD,qCAAnD;AAEA,SAAS3B,gCAAT"},"metadata":{},"sourceType":"module"}