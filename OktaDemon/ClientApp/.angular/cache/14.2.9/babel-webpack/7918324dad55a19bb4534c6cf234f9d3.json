{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { SelectAuthenticator } from './Base/SelectAuthenticator.js';\nimport { getAuthenticatorFromRemediation } from './util.js';\nimport { AuthenticatorKey } from '../types/api.js';\n\nclass SelectAuthenticatorAuthenticate extends SelectAuthenticator {\n  constructor(remediation, values = {}, options = {}) {\n    var _a;\n\n    super(remediation, values, options);\n    const isRecoveryFlow = this.options.flow === 'recoverPassword';\n    const hasPasswordInOptions = (_a = getAuthenticatorFromRemediation(remediation).options) === null || _a === void 0 ? void 0 : _a.some(({\n      relatesTo\n    }) => (relatesTo === null || relatesTo === void 0 ? void 0 : relatesTo.key) === AuthenticatorKey.OKTA_PASSWORD);\n\n    if (hasPasswordInOptions && (isRecoveryFlow || this.values.password)) {\n      this.values.authenticators = [...(this.values.authenticators || []), {\n        key: AuthenticatorKey.OKTA_PASSWORD\n      }];\n    }\n  }\n\n}\n\nSelectAuthenticatorAuthenticate.remediationName = 'select-authenticator-authenticate';\nexport { SelectAuthenticatorAuthenticate };","map":{"version":3,"names":["SelectAuthenticator","getAuthenticatorFromRemediation","AuthenticatorKey","SelectAuthenticatorAuthenticate","constructor","remediation","values","options","_a","isRecoveryFlow","flow","hasPasswordInOptions","some","relatesTo","key","OKTA_PASSWORD","password","authenticators","remediationName"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/SelectAuthenticatorAuthenticate.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { SelectAuthenticator } from './Base/SelectAuthenticator.js';\nimport { getAuthenticatorFromRemediation } from './util.js';\nimport { AuthenticatorKey } from '../types/api.js';\n\nclass SelectAuthenticatorAuthenticate extends SelectAuthenticator {\n    constructor(remediation, values = {}, options = {}) {\n        var _a;\n        super(remediation, values, options);\n        const isRecoveryFlow = this.options.flow === 'recoverPassword';\n        const hasPasswordInOptions = (_a = getAuthenticatorFromRemediation(remediation)\n            .options) === null || _a === void 0 ? void 0 : _a.some(({ relatesTo }) => (relatesTo === null || relatesTo === void 0 ? void 0 : relatesTo.key) === AuthenticatorKey.OKTA_PASSWORD);\n        if (hasPasswordInOptions && (isRecoveryFlow || this.values.password)) {\n            this.values.authenticators = [\n                ...this.values.authenticators || [],\n                { key: AuthenticatorKey.OKTA_PASSWORD }\n            ];\n        }\n    }\n}\nSelectAuthenticatorAuthenticate.remediationName = 'select-authenticator-authenticate';\n\nexport { SelectAuthenticatorAuthenticate };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,mBAAT,QAAoC,+BAApC;AACA,SAASC,+BAAT,QAAgD,WAAhD;AACA,SAASC,gBAAT,QAAiC,iBAAjC;;AAEA,MAAMC,+BAAN,SAA8CH,mBAA9C,CAAkE;EAC9DI,WAAW,CAACC,WAAD,EAAcC,MAAM,GAAG,EAAvB,EAA2BC,OAAO,GAAG,EAArC,EAAyC;IAChD,IAAIC,EAAJ;;IACA,MAAMH,WAAN,EAAmBC,MAAnB,EAA2BC,OAA3B;IACA,MAAME,cAAc,GAAG,KAAKF,OAAL,CAAaG,IAAb,KAAsB,iBAA7C;IACA,MAAMC,oBAAoB,GAAG,CAACH,EAAE,GAAGP,+BAA+B,CAACI,WAAD,CAA/B,CAC9BE,OADwB,MACX,IADW,IACHC,EAAE,KAAK,KAAK,CADT,GACa,KAAK,CADlB,GACsBA,EAAE,CAACI,IAAH,CAAQ,CAAC;MAAEC;IAAF,CAAD,KAAmB,CAACA,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACC,GAAjE,MAA0EZ,gBAAgB,CAACa,aAAtH,CADnD;;IAEA,IAAIJ,oBAAoB,KAAKF,cAAc,IAAI,KAAKH,MAAL,CAAYU,QAAnC,CAAxB,EAAsE;MAClE,KAAKV,MAAL,CAAYW,cAAZ,GAA6B,CACzB,IAAG,KAAKX,MAAL,CAAYW,cAAZ,IAA8B,EAAjC,CADyB,EAEzB;QAAEH,GAAG,EAAEZ,gBAAgB,CAACa;MAAxB,CAFyB,CAA7B;IAIH;EACJ;;AAb6D;;AAelEZ,+BAA+B,CAACe,eAAhC,GAAkD,mCAAlD;AAEA,SAASf,+BAAT"},"metadata":{},"sourceType":"module"}