{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction unwrapFormValue(remediation) {\n  if (Array.isArray(remediation)) {\n    return remediation.map(item => {\n      if (typeof item === 'string' || typeof item === 'number' || typeof item === 'boolean') {\n        return item;\n      }\n\n      return unwrapFormValue(item);\n    });\n  }\n\n  const res = {};\n\n  for (const [key, value] of Object.entries(remediation)) {\n    if (value === null || typeof value === 'undefined') {\n      continue;\n    }\n\n    if (typeof value === 'object') {\n      const formKeys = Object.keys(value);\n\n      if (['value', 'form'].includes(key) && formKeys.length === 1 && ['value', 'form'].includes(formKeys[0])) {\n        const unwrappedForm = unwrapFormValue(value);\n        Object.entries(unwrappedForm).forEach(([key, value]) => {\n          res[key] = value;\n        });\n      } else {\n        res[key] = unwrapFormValue(value);\n      }\n    } else {\n      res[key] = value;\n    }\n  }\n\n  return res;\n}\n\nexport { unwrapFormValue };","map":{"version":3,"names":["unwrapFormValue","remediation","Array","isArray","map","item","res","key","value","Object","entries","formKeys","keys","includes","length","unwrappedForm","forEach"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/GenericRemediator/util.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nfunction unwrapFormValue(remediation) {\n    if (Array.isArray(remediation)) {\n        return remediation\n            .map(item => {\n            if (typeof item === 'string' || typeof item === 'number' || typeof item === 'boolean') {\n                return item;\n            }\n            return unwrapFormValue(item);\n        });\n    }\n    const res = {};\n    for (const [key, value] of Object.entries(remediation)) {\n        if (value === null || typeof value === 'undefined') {\n            continue;\n        }\n        if (typeof value === 'object') {\n            const formKeys = Object.keys(value);\n            if (['value', 'form'].includes(key)\n                && formKeys.length === 1\n                && ['value', 'form'].includes(formKeys[0])) {\n                const unwrappedForm = unwrapFormValue(value);\n                Object.entries(unwrappedForm).forEach(([key, value]) => {\n                    res[key] = value;\n                });\n            }\n            else {\n                res[key] = unwrapFormValue(value);\n            }\n        }\n        else {\n            res[key] = value;\n        }\n    }\n    return res;\n}\n\nexport { unwrapFormValue };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,eAAT,CAAyBC,WAAzB,EAAsC;EAClC,IAAIC,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAJ,EAAgC;IAC5B,OAAOA,WAAW,CACbG,GADE,CACEC,IAAI,IAAI;MACb,IAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,QAA5C,IAAwD,OAAOA,IAAP,KAAgB,SAA5E,EAAuF;QACnF,OAAOA,IAAP;MACH;;MACD,OAAOL,eAAe,CAACK,IAAD,CAAtB;IACH,CANM,CAAP;EAOH;;EACD,MAAMC,GAAG,GAAG,EAAZ;;EACA,KAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAP,CAAeT,WAAf,CAA3B,EAAwD;IACpD,IAAIO,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,WAAvC,EAAoD;MAChD;IACH;;IACD,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC3B,MAAMG,QAAQ,GAAGF,MAAM,CAACG,IAAP,CAAYJ,KAAZ,CAAjB;;MACA,IAAI,CAAC,OAAD,EAAU,MAAV,EAAkBK,QAAlB,CAA2BN,GAA3B,KACGI,QAAQ,CAACG,MAAT,KAAoB,CADvB,IAEG,CAAC,OAAD,EAAU,MAAV,EAAkBD,QAAlB,CAA2BF,QAAQ,CAAC,CAAD,CAAnC,CAFP,EAEgD;QAC5C,MAAMI,aAAa,GAAGf,eAAe,CAACQ,KAAD,CAArC;QACAC,MAAM,CAACC,OAAP,CAAeK,aAAf,EAA8BC,OAA9B,CAAsC,CAAC,CAACT,GAAD,EAAMC,KAAN,CAAD,KAAkB;UACpDF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;QACH,CAFD;MAGH,CAPD,MAQK;QACDF,GAAG,CAACC,GAAD,CAAH,GAAWP,eAAe,CAACQ,KAAD,CAA1B;MACH;IACJ,CAbD,MAcK;MACDF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;IACH;EACJ;;EACD,OAAOF,GAAP;AACH;;AAED,SAASN,eAAT"},"metadata":{},"sourceType":"module"}