{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { run } from './run.js';\nimport './types/api.js';\nimport './remediators/EnrollAuthenticator.js';\nimport './remediators/EnrollPoll.js';\nimport './remediators/SelectEnrollmentChannel.js';\nimport './remediators/EnrollmentChannelData.js';\nimport './remediators/ChallengeAuthenticator.js';\nimport './remediators/ChallengePoll.js';\nimport './remediators/ResetAuthenticator.js';\nimport './remediators/EnrollProfile.js';\nimport './remediators/Identify.js';\nimport './remediators/ReEnrollAuthenticator.js';\nimport './remediators/RedirectIdp.js';\nimport './remediators/SelectAuthenticatorAuthenticate.js';\nimport './remediators/SelectAuthenticatorEnroll.js';\nimport './remediators/SelectAuthenticatorUnlockAccount.js';\nimport './remediators/SelectEnrollProfile.js';\nimport './remediators/AuthenticatorVerificationData.js';\nimport './remediators/AuthenticatorEnrollmentData.js';\nimport './remediators/Skip.js';\nimport { getFlowSpecification } from './flow/FlowSpecification.js';\n\nfunction cancel(_x, _x2) {\n  return _cancel.apply(this, arguments);\n}\n\nfunction _cancel() {\n  _cancel = _asyncToGenerator(function* (authClient, options) {\n    const meta = authClient.transactionManager.load();\n    const flowSpec = getFlowSpecification(authClient, meta.flow);\n    return run(authClient, Object.assign(Object.assign(Object.assign({}, options), flowSpec), {\n      actions: ['cancel']\n    }));\n  });\n  return _cancel.apply(this, arguments);\n}\n\nexport { cancel };","map":{"version":3,"names":["run","getFlowSpecification","cancel","authClient","options","meta","transactionManager","load","flowSpec","flow","Object","assign","actions"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/cancel.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nimport './types/api.js';\nimport './remediators/EnrollAuthenticator.js';\nimport './remediators/EnrollPoll.js';\nimport './remediators/SelectEnrollmentChannel.js';\nimport './remediators/EnrollmentChannelData.js';\nimport './remediators/ChallengeAuthenticator.js';\nimport './remediators/ChallengePoll.js';\nimport './remediators/ResetAuthenticator.js';\nimport './remediators/EnrollProfile.js';\nimport './remediators/Identify.js';\nimport './remediators/ReEnrollAuthenticator.js';\nimport './remediators/RedirectIdp.js';\nimport './remediators/SelectAuthenticatorAuthenticate.js';\nimport './remediators/SelectAuthenticatorEnroll.js';\nimport './remediators/SelectAuthenticatorUnlockAccount.js';\nimport './remediators/SelectEnrollProfile.js';\nimport './remediators/AuthenticatorVerificationData.js';\nimport './remediators/AuthenticatorEnrollmentData.js';\nimport './remediators/Skip.js';\nimport { getFlowSpecification } from './flow/FlowSpecification.js';\n\nasync function cancel(authClient, options) {\n    const meta = authClient.transactionManager.load();\n    const flowSpec = getFlowSpecification(authClient, meta.flow);\n    return run(authClient, Object.assign(Object.assign(Object.assign({}, options), flowSpec), { actions: ['cancel'] }));\n}\n\nexport { cancel };\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,QAAoB,UAApB;AACA,OAAO,gBAAP;AACA,OAAO,sCAAP;AACA,OAAO,6BAAP;AACA,OAAO,0CAAP;AACA,OAAO,wCAAP;AACA,OAAO,yCAAP;AACA,OAAO,gCAAP;AACA,OAAO,qCAAP;AACA,OAAO,gCAAP;AACA,OAAO,2BAAP;AACA,OAAO,wCAAP;AACA,OAAO,8BAAP;AACA,OAAO,kDAAP;AACA,OAAO,4CAAP;AACA,OAAO,mDAAP;AACA,OAAO,sCAAP;AACA,OAAO,gDAAP;AACA,OAAO,8CAAP;AACA,OAAO,uBAAP;AACA,SAASC,oBAAT,QAAqC,6BAArC;;SAEeC,M;;;;;8BAAf,WAAsBC,UAAtB,EAAkCC,OAAlC,EAA2C;IACvC,MAAMC,IAAI,GAAGF,UAAU,CAACG,kBAAX,CAA8BC,IAA9B,EAAb;IACA,MAAMC,QAAQ,GAAGP,oBAAoB,CAACE,UAAD,EAAaE,IAAI,CAACI,IAAlB,CAArC;IACA,OAAOT,GAAG,CAACG,UAAD,EAAaO,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,OAAlB,CAAd,EAA0CI,QAA1C,CAAd,EAAmE;MAAEI,OAAO,EAAE,CAAC,QAAD;IAAX,CAAnE,CAAb,CAAV;EACH,C;;;;AAED,SAASV,MAAT"},"metadata":{},"sourceType":"module"}