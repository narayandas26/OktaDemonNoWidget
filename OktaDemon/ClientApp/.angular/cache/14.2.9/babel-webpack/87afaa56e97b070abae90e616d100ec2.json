{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { isInteractionRequiredError } from '../../oidc/util/errors.js';\nimport { isInteractionRequired } from '../../oidc/util/loginRedirect.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { authenticate } from '../authenticate.js';\nimport { cancel } from '../cancel.js';\nimport { handleEmailVerifyCallback, isEmailVerifyCallback, parseEmailVerifyCallback, isEmailVerifyCallbackError } from '../emailVerify.js';\nimport { handleInteractionCodeRedirect } from '../handleInteractionCodeRedirect.js';\nimport { makeIdxState } from '../idxState/index.js';\nimport { interact } from '../interact.js';\nimport { introspect } from '../introspect.js';\nimport { poll } from '../poll.js';\nimport { proceed, canProceed } from '../proceed.js';\nimport { recoverPassword } from '../recoverPassword.js';\nimport { register } from '../register.js';\nimport { startTransaction } from '../startTransaction.js';\nimport { getSavedTransactionMeta, createTransactionMeta, getTransactionMeta, saveTransactionMeta, clearTransactionMeta, isTransactionMetaValid } from '../transactionMeta.js';\nimport { unlockAccount } from '../unlockAccount.js';\n\nfunction createIdxAPI(sdk) {\n  const boundStartTransaction = startTransaction.bind(null, sdk);\n  const idx = {\n    interact: interact.bind(null, sdk),\n    introspect: introspect.bind(null, sdk),\n    makeIdxResponse: makeIdxState.bind(null, sdk),\n    authenticate: authenticate.bind(null, sdk),\n    register: register.bind(null, sdk),\n    start: boundStartTransaction,\n    startTransaction: boundStartTransaction,\n    poll: poll.bind(null, sdk),\n    proceed: proceed.bind(null, sdk),\n    cancel: cancel.bind(null, sdk),\n    recoverPassword: recoverPassword.bind(null, sdk),\n    handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, sdk),\n    isInteractionRequired: isInteractionRequired.bind(null, sdk),\n    isInteractionRequiredError,\n    handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, sdk),\n    isEmailVerifyCallback,\n    parseEmailVerifyCallback,\n    isEmailVerifyCallbackError,\n    getSavedTransactionMeta: getSavedTransactionMeta.bind(null, sdk),\n    createTransactionMeta: createTransactionMeta.bind(null, sdk),\n    getTransactionMeta: getTransactionMeta.bind(null, sdk),\n    saveTransactionMeta: saveTransactionMeta.bind(null, sdk),\n    clearTransactionMeta: clearTransactionMeta.bind(null, sdk),\n    isTransactionMetaValid,\n    setFlow: flow => {\n      sdk.options.flow = flow;\n    },\n    getFlow: () => {\n      return sdk.options.flow;\n    },\n    canProceed: canProceed.bind(null, sdk),\n    unlockAccount: unlockAccount.bind(null, sdk)\n  };\n  return idx;\n}\n\nexport { createIdxAPI };","map":{"version":3,"names":["isInteractionRequiredError","isInteractionRequired","authenticate","cancel","handleEmailVerifyCallback","isEmailVerifyCallback","parseEmailVerifyCallback","isEmailVerifyCallbackError","handleInteractionCodeRedirect","makeIdxState","interact","introspect","poll","proceed","canProceed","recoverPassword","register","startTransaction","getSavedTransactionMeta","createTransactionMeta","getTransactionMeta","saveTransactionMeta","clearTransactionMeta","isTransactionMetaValid","unlockAccount","createIdxAPI","sdk","boundStartTransaction","bind","idx","makeIdxResponse","start","setFlow","flow","options","getFlow"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/factory/api.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { isInteractionRequiredError } from '../../oidc/util/errors.js';\nimport { isInteractionRequired } from '../../oidc/util/loginRedirect.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { authenticate } from '../authenticate.js';\nimport { cancel } from '../cancel.js';\nimport { handleEmailVerifyCallback, isEmailVerifyCallback, parseEmailVerifyCallback, isEmailVerifyCallbackError } from '../emailVerify.js';\nimport { handleInteractionCodeRedirect } from '../handleInteractionCodeRedirect.js';\nimport { makeIdxState } from '../idxState/index.js';\nimport { interact } from '../interact.js';\nimport { introspect } from '../introspect.js';\nimport { poll } from '../poll.js';\nimport { proceed, canProceed } from '../proceed.js';\nimport { recoverPassword } from '../recoverPassword.js';\nimport { register } from '../register.js';\nimport { startTransaction } from '../startTransaction.js';\nimport { getSavedTransactionMeta, createTransactionMeta, getTransactionMeta, saveTransactionMeta, clearTransactionMeta, isTransactionMetaValid } from '../transactionMeta.js';\nimport { unlockAccount } from '../unlockAccount.js';\n\nfunction createIdxAPI(sdk) {\n    const boundStartTransaction = startTransaction.bind(null, sdk);\n    const idx = {\n        interact: interact.bind(null, sdk),\n        introspect: introspect.bind(null, sdk),\n        makeIdxResponse: makeIdxState.bind(null, sdk),\n        authenticate: authenticate.bind(null, sdk),\n        register: register.bind(null, sdk),\n        start: boundStartTransaction,\n        startTransaction: boundStartTransaction,\n        poll: poll.bind(null, sdk),\n        proceed: proceed.bind(null, sdk),\n        cancel: cancel.bind(null, sdk),\n        recoverPassword: recoverPassword.bind(null, sdk),\n        handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, sdk),\n        isInteractionRequired: isInteractionRequired.bind(null, sdk),\n        isInteractionRequiredError,\n        handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, sdk),\n        isEmailVerifyCallback,\n        parseEmailVerifyCallback,\n        isEmailVerifyCallbackError,\n        getSavedTransactionMeta: getSavedTransactionMeta.bind(null, sdk),\n        createTransactionMeta: createTransactionMeta.bind(null, sdk),\n        getTransactionMeta: getTransactionMeta.bind(null, sdk),\n        saveTransactionMeta: saveTransactionMeta.bind(null, sdk),\n        clearTransactionMeta: clearTransactionMeta.bind(null, sdk),\n        isTransactionMetaValid,\n        setFlow: (flow) => {\n            sdk.options.flow = flow;\n        },\n        getFlow: () => {\n            return sdk.options.flow;\n        },\n        canProceed: canProceed.bind(null, sdk),\n        unlockAccount: unlockAccount.bind(null, sdk),\n    };\n    return idx;\n}\n\nexport { createIdxAPI };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}