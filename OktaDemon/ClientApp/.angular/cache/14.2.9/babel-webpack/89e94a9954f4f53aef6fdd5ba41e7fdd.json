{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { REFERRER_PATH_STORAGE_KEY } from '../../constants.js';\nimport storageUtil from '../../browser/browserStorage.js';\n\nfunction provideOriginalUri(BaseClass) {\n  return class WithOriginalUri extends BaseClass {\n    setOriginalUri(originalUri, state) {\n      const sessionStorage = storageUtil.getSessionStorage();\n      sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n      state = state || this.options.state;\n\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n\n    getOriginalUri(state) {\n      state = state || this.options.state;\n\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        const originalUri = sharedStorage.getItem(state);\n\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n\n      const storage = storageUtil.getSessionStorage();\n      return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n    }\n\n    removeOriginalUri(state) {\n      const storage = storageUtil.getSessionStorage();\n      storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n      state = state || this.options.state;\n\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem && sharedStorage.removeItem(state);\n      }\n    }\n\n  };\n}\n\nexport { provideOriginalUri }; //# sourceMappingURL=browser.js.map","map":null,"metadata":{},"sourceType":"module"}