{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { SelectAuthenticator } from './Base/SelectAuthenticator.js';\nlet SelectAuthenticatorUnlockAccount = /*#__PURE__*/(() => {\n  class SelectAuthenticatorUnlockAccount extends SelectAuthenticator {\n    constructor() {\n      super(...arguments);\n      this.map = {\n        identifier: ['username']\n      };\n    }\n\n    canRemediate() {\n      const identifier = this.getData('identifier');\n      return !!identifier && super.canRemediate();\n    }\n\n    mapAuthenticator(remediationValue) {\n      var _a, _b, _c;\n\n      const authenticatorMap = super.mapAuthenticator(remediationValue);\n      const methodTypeOption = (_a = this.selectedOption) === null || _a === void 0 ? void 0 : _a.value.form.value.find(({\n        name\n      }) => name === 'methodType');\n      const methodTypeValue = this.values.methodType || (methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.value) || ((_c = (_b = methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.options) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.value);\n\n      if (methodTypeValue) {\n        return Object.assign(Object.assign({}, authenticatorMap), {\n          methodType: methodTypeValue\n        });\n      }\n\n      return authenticatorMap;\n    }\n\n    getInputUsername() {\n      return {\n        name: 'username',\n        type: 'string'\n      };\n    }\n\n  }\n\n  SelectAuthenticatorUnlockAccount.remediationName = 'select-authenticator-unlock-account';\n  return SelectAuthenticatorUnlockAccount;\n})();\nexport { SelectAuthenticatorUnlockAccount }; //# sourceMappingURL=SelectAuthenticatorUnlockAccount.js.map","map":null,"metadata":{},"sourceType":"module"}