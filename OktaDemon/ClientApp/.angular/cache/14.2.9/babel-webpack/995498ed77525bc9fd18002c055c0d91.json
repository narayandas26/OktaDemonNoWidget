{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { webcrypto as c } from './crypto/browser.js';\nconst isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\n\nfunction isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nfunction isIE11OrLess() {\n  if (!isBrowser()) {\n    return false;\n  }\n\n  const documentMode = document.documentMode;\n  return !!documentMode && documentMode <= 11;\n}\n\nfunction getUserAgent() {\n  return navigator.userAgent;\n}\n\nfunction isFingerprintSupported() {\n  const agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\n}\n\nfunction isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n\n  const documentMode = document.documentMode;\n  var isIE8or9 = documentMode && documentMode < 10;\n\n  if (typeof window.postMessage !== 'undefined' && !isIE8or9) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isTokenVerifySupported() {\n  return typeof c !== 'undefined' && c !== null && typeof c.subtle !== 'undefined' && typeof Uint8Array !== 'undefined';\n}\n\nfunction hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nfunction isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nfunction isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n\n  return window.location.protocol === 'https:';\n}\n\nfunction isLocalhost() {\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\nexport { getUserAgent, hasTextEncoder, isBrowser, isFingerprintSupported, isHTTPS, isIE11OrLess, isLocalhost, isPKCESupported, isPopupPostMessageSupported, isTokenVerifySupported }; //# sourceMappingURL=features.js.map","map":null,"metadata":{},"sourceType":"module"}