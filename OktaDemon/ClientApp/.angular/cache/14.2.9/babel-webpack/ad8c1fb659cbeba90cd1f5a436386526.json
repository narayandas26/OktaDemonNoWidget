{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module'; //import { environment } from '../environments/environment';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { LoginComponent } from './login/login.component';\nimport { environment as env } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class AppModule {}\n\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\n\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [//{\n  //  provide: HTTP_INTERCEPTORS,\n  //  useClass: AuthHttpInterceptor,\n  //  multi: true,\n  //},\n  {\n    provide: Window,\n    useValue: window\n  }, //{\n  //  provide: OKTA_CONFIG,\n  //  useFactory: () => {\n  //    const oktaAuth = new OktaAuth(config.oidc);\n  //    return {\n  //      oktaAuth,\n  //      onAuthRequired: (oktaAuth: OktaAuth, injector: Injector) => {\n  //        const triggerLogin = async () => {\n  //          await oktaAuth.signInWithRedirect();\n  //        };\n  //        if (!oktaAuth.authStateManager.getPreviousAuthState()?.isAuthenticated) {\n  //          // App initialization stage\n  //          triggerLogin();\n  //        } else {\n  //          //triggerLogin();\n  //        }\n  //      }\n  //    }\n  //  }\n  //},\n  {\n    provide: APP_BASE_HREF,\n    useValue: env.appBaseHref\n  }],\n  imports: [BrowserModule.withServerTransition({\n    appId: 'ng-cli-universal'\n  }), AppRoutingModule, HttpClientModule, FormsModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, NavMenuComponent, HomeComponent, CounterComponent, FetchDataComponent, LoginComponent],\n    imports: [i1.BrowserModule, AppRoutingModule, HttpClientModule, FormsModule]\n  });\n})();","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,2BAA9B;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,gBAAT,QAAoD,sBAApD;AAKA,SAASC,gBAAT,QAAiC,sBAAjC,C,CACA;;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAGA,SAASC,WAAW,IAAIC,GAAxB,QAAmC,6BAAnC;;;AAmDA,OAAM,MAAOC,SAAP,CAAgB;;;mBAATA;AAAS;;;QAATA;EAASC,YAFRT,YAEQ;;;aAlCT,CACT;EACA;EACA;EACA;EACA;EACA;IACEU,OAAO,EAAEC,MADX;IAEEC,QAAQ,EAAEC;EAFZ,CANS,EAUT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;IAAEH,OAAO,EAAEb,aAAX;IAA0Be,QAAQ,EAAEL,GAAG,CAACO;EAAxC,CA9BS;EA+BVC,UApCCpB,aAAa,CAACqB,oBAAd,CAAmC;IAAEC,KAAK,EAAE;EAAT,CAAnC,CAoCD,EAnCClB,gBAmCD,EAlCCD,gBAkCD,EAjCCF,WAiCD;;;;2EAGUY,WAAS;IAAAU,eA/ClBlB,YA+CkB,EA9ClBC,gBA8CkB,EA7ClBC,aA6CkB,EA5ClBC,gBA4CkB,EA3ClBC,kBA2CkB,EA1ClBC,cA0CkB;IA1CJU,4BAIdhB,gBAJc,EAKdD,gBALc,EAMdF,WANc;EA0CI;AApCP","names":["BrowserModule","FormsModule","APP_BASE_HREF","HttpClientModule","AppRoutingModule","AppComponent","NavMenuComponent","HomeComponent","CounterComponent","FetchDataComponent","LoginComponent","environment","env","AppModule","bootstrap","provide","Window","useValue","window","appBaseHref","imports","withServerTransition","appId","declarations"],"sourceRoot":"","sources":["C:\\Users\\Narean\\source\\repos\\OktaDemon\\OktaDemon\\ClientApp\\src\\app\\app.module.ts"],"sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\r\nimport { Injector, NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { OKTA_CONFIG, OktaAuthGuard, OktaAuthModule, OktaCallbackComponent } from '@okta/okta-angular';\r\nimport { OktaAuth } from '@okta/okta-auth-js';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n//import { environment } from '../environments/environment';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { LoginComponent } from './login/login.component';\r\n\r\nimport config from './okta.config';\r\nimport { environment as env } from '../environments/environment';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [\r\n    //{\r\n    //  provide: HTTP_INTERCEPTORS,\r\n    //  useClass: AuthHttpInterceptor,\r\n    //  multi: true,\r\n    //},\r\n    {\r\n      provide: Window,\r\n      useValue: window,\r\n    },\r\n    //{\r\n    //  provide: OKTA_CONFIG,\r\n    //  useFactory: () => {\r\n    //    const oktaAuth = new OktaAuth(config.oidc);\r\n    //    return {\r\n    //      oktaAuth,\r\n    //      onAuthRequired: (oktaAuth: OktaAuth, injector: Injector) => {\r\n    //        const triggerLogin = async () => {\r\n    //          await oktaAuth.signInWithRedirect();\r\n    //        };\r\n    //        if (!oktaAuth.authStateManager.getPreviousAuthState()?.isAuthenticated) {\r\n    //          // App initialization stage\r\n    //          triggerLogin();\r\n    //        } else {\r\n    //          //triggerLogin();\r\n    //        }\r\n    //      }\r\n    //    }\r\n    //  }\r\n    //},\r\n    { provide: APP_BASE_HREF, useValue: env.appBaseHref },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n"]},"metadata":{},"sourceType":"module"}