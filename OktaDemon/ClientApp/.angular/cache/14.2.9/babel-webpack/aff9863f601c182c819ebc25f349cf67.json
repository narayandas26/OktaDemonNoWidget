{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport AuthSdkError from '../../errors/AuthSdkError.js';\n\nfunction validateClaims(sdk, claims, validationParams) {\n  var aud = validationParams.clientId;\n  var iss = validationParams.issuer;\n  var nonce = validationParams.nonce;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  var now = Math.floor(Date.now() / 1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' + 'does not match [' + iss + ']');\n  }\n\n  if (claims.aud !== aud) {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' + 'does not match [' + aud + ']');\n  }\n\n  if (claims.iat > claims.exp) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if (now - sdk.options.maxClockSkew > claims.exp) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat > now + sdk.options.maxClockSkew) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n\nexport { validateClaims };","map":{"version":3,"names":["AuthSdkError","validateClaims","sdk","claims","validationParams","aud","clientId","iss","issuer","nonce","now","Math","floor","Date","iat","exp","options","ignoreLifetime","maxClockSkew"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/oidc/util/validateClaims.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../../errors/AuthSdkError.js';\n\nfunction validateClaims(sdk, claims, validationParams) {\n    var aud = validationParams.clientId;\n    var iss = validationParams.issuer;\n    var nonce = validationParams.nonce;\n    if (!claims || !iss || !aud) {\n        throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n    }\n    if (nonce && claims.nonce !== nonce) {\n        throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n    }\n    var now = Math.floor(Date.now() / 1000);\n    if (claims.iss !== iss) {\n        throw new AuthSdkError('The issuer [' + claims.iss + '] ' +\n            'does not match [' + iss + ']');\n    }\n    if (claims.aud !== aud) {\n        throw new AuthSdkError('The audience [' + claims.aud + '] ' +\n            'does not match [' + aud + ']');\n    }\n    if (claims.iat > claims.exp) {\n        throw new AuthSdkError('The JWT expired before it was issued');\n    }\n    if (!sdk.options.ignoreLifetime) {\n        if ((now - sdk.options.maxClockSkew) > claims.exp) {\n            throw new AuthSdkError('The JWT expired and is no longer valid');\n        }\n        if (claims.iat > (now + sdk.options.maxClockSkew)) {\n            throw new AuthSdkError('The JWT was issued in the future');\n        }\n    }\n}\n\nexport { validateClaims };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,YAAP,MAAyB,8BAAzB;;AAEA,SAASC,cAAT,CAAwBC,GAAxB,EAA6BC,MAA7B,EAAqCC,gBAArC,EAAuD;EACnD,IAAIC,GAAG,GAAGD,gBAAgB,CAACE,QAA3B;EACA,IAAIC,GAAG,GAAGH,gBAAgB,CAACI,MAA3B;EACA,IAAIC,KAAK,GAAGL,gBAAgB,CAACK,KAA7B;;EACA,IAAI,CAACN,MAAD,IAAW,CAACI,GAAZ,IAAmB,CAACF,GAAxB,EAA6B;IACzB,MAAM,IAAIL,YAAJ,CAAiB,kDAAjB,CAAN;EACH;;EACD,IAAIS,KAAK,IAAIN,MAAM,CAACM,KAAP,KAAiBA,KAA9B,EAAqC;IACjC,MAAM,IAAIT,YAAJ,CAAiB,wDAAjB,CAAN;EACH;;EACD,IAAIU,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACH,GAAL,KAAa,IAAxB,CAAV;;EACA,IAAIP,MAAM,CAACI,GAAP,KAAeA,GAAnB,EAAwB;IACpB,MAAM,IAAIP,YAAJ,CAAiB,iBAAiBG,MAAM,CAACI,GAAxB,GAA8B,IAA9B,GACnB,kBADmB,GACEA,GADF,GACQ,GADzB,CAAN;EAEH;;EACD,IAAIJ,MAAM,CAACE,GAAP,KAAeA,GAAnB,EAAwB;IACpB,MAAM,IAAIL,YAAJ,CAAiB,mBAAmBG,MAAM,CAACE,GAA1B,GAAgC,IAAhC,GACnB,kBADmB,GACEA,GADF,GACQ,GADzB,CAAN;EAEH;;EACD,IAAIF,MAAM,CAACW,GAAP,GAAaX,MAAM,CAACY,GAAxB,EAA6B;IACzB,MAAM,IAAIf,YAAJ,CAAiB,sCAAjB,CAAN;EACH;;EACD,IAAI,CAACE,GAAG,CAACc,OAAJ,CAAYC,cAAjB,EAAiC;IAC7B,IAAKP,GAAG,GAAGR,GAAG,CAACc,OAAJ,CAAYE,YAAnB,GAAmCf,MAAM,CAACY,GAA9C,EAAmD;MAC/C,MAAM,IAAIf,YAAJ,CAAiB,wCAAjB,CAAN;IACH;;IACD,IAAIG,MAAM,CAACW,GAAP,GAAcJ,GAAG,GAAGR,GAAG,CAACc,OAAJ,CAAYE,YAApC,EAAmD;MAC/C,MAAM,IAAIlB,YAAJ,CAAiB,kCAAjB,CAAN;IACH;EACJ;AACJ;;AAED,SAASC,cAAT"},"metadata":{},"sourceType":"module"}