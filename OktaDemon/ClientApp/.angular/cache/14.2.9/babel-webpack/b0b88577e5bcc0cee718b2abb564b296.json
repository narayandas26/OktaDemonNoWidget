{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { clone } from '../util/object.js';\nimport { createOAuthMeta } from './util/oauthMeta.js';\nimport { prepareTokenParams } from './util/prepareTokenParams.js';\nimport { buildAuthorizeParams } from './endpoints/authorize.js';\n\nfunction getWithRedirect(_x, _x2) {\n  return _getWithRedirect.apply(this, arguments);\n}\n\nfunction _getWithRedirect() {\n  _getWithRedirect = _asyncToGenerator(function* (sdk, options) {\n    if (arguments.length > 2) {\n      return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n    }\n\n    options = clone(options) || {};\n    const tokenParams = yield prepareTokenParams(sdk, options);\n    const meta = createOAuthMeta(sdk, tokenParams);\n    const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n    sdk.transactionManager.save(meta);\n\n    sdk.token.getWithRedirect._setLocation(requestUrl);\n  });\n  return _getWithRedirect.apply(this, arguments);\n}\n\nexport { getWithRedirect }; //# sourceMappingURL=getWithRedirect.js.map","map":null,"metadata":{},"sourceType":"module"}