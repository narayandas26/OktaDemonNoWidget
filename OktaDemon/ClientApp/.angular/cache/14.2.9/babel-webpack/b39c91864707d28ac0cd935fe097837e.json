{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { __rest } from '../../_virtual/_tslib.js';\nimport * as index from '../../crypto/index.js';\nimport { httpRequest } from '../../http/request.js';\nimport { PromiseQueue } from '../../util/PromiseQueue.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport PKCE from '../util/pkce.js';\nimport { createTokenAPI } from '../factory/api.js';\nimport { TokenManager } from '../TokenManager.js';\nimport { getOAuthUrls } from '../util/oauth.js';\nimport { isLoginRedirect } from '../util/loginRedirect.js';\nimport { provideOriginalUri } from './browser.js';\n\nfunction mixinOAuth(Base, TransactionManagerConstructor) {\n  var _a;\n\n  const WithOriginalUri = provideOriginalUri(Base);\n  return _a = class OktaAuthOAuth extends WithOriginalUri {\n    constructor(...args) {\n      super(...args);\n      this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: this.storageManager\n      }, this.options.transactionManager));\n      this.pkce = {\n        DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n        generateVerifier: PKCE.generateVerifier,\n        computeChallenge: PKCE.computeChallenge\n      };\n      this._pending = {\n        handleLogin: false\n      };\n      this._tokenQueue = new PromiseQueue();\n      this.token = createTokenAPI(this, this._tokenQueue);\n      this.tokenManager = new TokenManager(this, this.options.tokenManager);\n    }\n\n    clearStorage() {\n      super.clearStorage();\n      this.tokenManager.clear();\n    }\n\n    isAuthenticated(options = {}) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const {\n          autoRenew,\n          autoRemove\n        } = _this.tokenManager.getOptions();\n\n        const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n        const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n        let {\n          accessToken\n        } = _this.tokenManager.getTokensSync();\n\n        if (accessToken && _this.tokenManager.hasExpired(accessToken)) {\n          accessToken = undefined;\n\n          if (shouldRenew) {\n            try {\n              accessToken = yield _this.tokenManager.renew('accessToken');\n            } catch (_a) {}\n          } else if (shouldRemove) {\n            _this.tokenManager.remove('accessToken');\n          }\n        }\n\n        let {\n          idToken\n        } = _this.tokenManager.getTokensSync();\n\n        if (idToken && _this.tokenManager.hasExpired(idToken)) {\n          idToken = undefined;\n\n          if (shouldRenew) {\n            try {\n              idToken = yield _this.tokenManager.renew('idToken');\n            } catch (_b) {}\n          } else if (shouldRemove) {\n            _this.tokenManager.remove('idToken');\n          }\n        }\n\n        return !!(accessToken && idToken);\n      })();\n    }\n\n    signInWithRedirect(opts = {}) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        const {\n          originalUri\n        } = opts,\n              additionalParams = __rest(opts, [\"originalUri\"]);\n\n        if (_this2._pending.handleLogin) {\n          return;\n        }\n\n        _this2._pending.handleLogin = true;\n\n        try {\n          if (originalUri) {\n            _this2.setOriginalUri(originalUri);\n          }\n\n          const params = Object.assign({\n            scopes: _this2.options.scopes || ['openid', 'email', 'profile']\n          }, additionalParams);\n          yield _this2.token.getWithRedirect(params);\n        } finally {\n          _this2._pending.handleLogin = false;\n        }\n      })();\n    }\n\n    getUser() {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        const {\n          idToken,\n          accessToken\n        } = _this3.tokenManager.getTokensSync();\n\n        return _this3.token.getUserInfo(accessToken, idToken);\n      })();\n    }\n\n    getIdToken() {\n      const {\n        idToken\n      } = this.tokenManager.getTokensSync();\n      return idToken ? idToken.idToken : undefined;\n    }\n\n    getAccessToken() {\n      const {\n        accessToken\n      } = this.tokenManager.getTokensSync();\n      return accessToken ? accessToken.accessToken : undefined;\n    }\n\n    getRefreshToken() {\n      const {\n        refreshToken\n      } = this.tokenManager.getTokensSync();\n      return refreshToken ? refreshToken.refreshToken : undefined;\n    }\n\n    storeTokensFromRedirect() {\n      var _this4 = this;\n\n      return _asyncToGenerator(function* () {\n        const {\n          tokens\n        } = yield _this4.token.parseFromUrl();\n\n        _this4.tokenManager.setTokens(tokens);\n      })();\n    }\n\n    isLoginRedirect() {\n      return isLoginRedirect(this);\n    }\n\n    isPKCE() {\n      return !!this.options.pkce;\n    }\n\n    hasResponseType(responseType) {\n      let hasResponseType = false;\n\n      if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n        hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n      } else {\n        hasResponseType = this.options.responseType === responseType;\n      }\n\n      return hasResponseType;\n    }\n\n    isAuthorizationCodeFlow() {\n      return this.hasResponseType('code');\n    }\n\n    invokeApiMethod(options) {\n      var _this5 = this;\n\n      return _asyncToGenerator(function* () {\n        if (!options.accessToken) {\n          const accessToken = (yield _this5.tokenManager.getTokens()).accessToken;\n          options.accessToken = accessToken === null || accessToken === void 0 ? void 0 : accessToken.accessToken;\n        }\n\n        return httpRequest(_this5, options);\n      })();\n    }\n\n    revokeAccessToken(accessToken) {\n      var _this6 = this;\n\n      return _asyncToGenerator(function* () {\n        if (!accessToken) {\n          accessToken = (yield _this6.tokenManager.getTokens()).accessToken;\n\n          const accessTokenKey = _this6.tokenManager.getStorageKeyByType('accessToken');\n\n          _this6.tokenManager.remove(accessTokenKey);\n        }\n\n        if (!accessToken) {\n          return Promise.resolve(null);\n        }\n\n        return _this6.token.revoke(accessToken);\n      })();\n    }\n\n    revokeRefreshToken(refreshToken) {\n      var _this7 = this;\n\n      return _asyncToGenerator(function* () {\n        if (!refreshToken) {\n          refreshToken = (yield _this7.tokenManager.getTokens()).refreshToken;\n\n          const refreshTokenKey = _this7.tokenManager.getStorageKeyByType('refreshToken');\n\n          _this7.tokenManager.remove(refreshTokenKey);\n        }\n\n        if (!refreshToken) {\n          return Promise.resolve(null);\n        }\n\n        return _this7.token.revoke(refreshToken);\n      })();\n    }\n\n    getSignOutRedirectUrl(options = {}) {\n      let {\n        idToken,\n        postLogoutRedirectUri,\n        state\n      } = options;\n\n      if (!idToken) {\n        idToken = this.tokenManager.getTokensSync().idToken;\n      }\n\n      if (!idToken) {\n        return '';\n      }\n\n      if (!postLogoutRedirectUri) {\n        postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n      }\n\n      const logoutUrl = getOAuthUrls(this).logoutUrl;\n      const idTokenHint = idToken.idToken;\n      let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n\n      if (postLogoutRedirectUri) {\n        logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n      }\n\n      if (state) {\n        logoutUri += '&state=' + encodeURIComponent(state);\n      }\n\n      return logoutUri;\n    }\n\n    signOut(options) {\n      var _this8 = this;\n\n      return _asyncToGenerator(function* () {\n        options = Object.assign({}, options);\n        var defaultUri = window.location.origin;\n        var currentUri = window.location.href;\n        var postLogoutRedirectUri = options.postLogoutRedirectUri || _this8.options.postLogoutRedirectUri || defaultUri;\n        var accessToken = options.accessToken;\n        var refreshToken = options.refreshToken;\n        var revokeAccessToken = options.revokeAccessToken !== false;\n        var revokeRefreshToken = options.revokeRefreshToken !== false;\n\n        if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n          refreshToken = _this8.tokenManager.getTokensSync().refreshToken;\n        }\n\n        if (revokeAccessToken && typeof accessToken === 'undefined') {\n          accessToken = _this8.tokenManager.getTokensSync().accessToken;\n        }\n\n        if (!options.idToken) {\n          options.idToken = _this8.tokenManager.getTokensSync().idToken;\n        }\n\n        if (revokeRefreshToken && refreshToken) {\n          yield _this8.revokeRefreshToken(refreshToken);\n        }\n\n        if (revokeAccessToken && accessToken) {\n          yield _this8.revokeAccessToken(accessToken);\n        }\n\n        const logoutUri = _this8.getSignOutRedirectUrl(Object.assign(Object.assign({}, options), {\n          postLogoutRedirectUri\n        }));\n\n        if (!logoutUri) {\n          return _this8.closeSession().then(function () {\n            if (postLogoutRedirectUri === currentUri) {\n              window.location.reload();\n            } else {\n              window.location.assign(postLogoutRedirectUri);\n            }\n          });\n        } else {\n          if (options.clearTokensBeforeRedirect) {\n            _this8.tokenManager.clear();\n          } else {\n            _this8.tokenManager.addPendingRemoveFlags();\n          }\n\n          window.location.assign(logoutUri);\n        }\n      })();\n    }\n\n  }, _a.crypto = index, _a;\n}\n\nexport { mixinOAuth };","map":{"version":3,"names":["__rest","index","httpRequest","PromiseQueue","PKCE","createTokenAPI","TokenManager","getOAuthUrls","isLoginRedirect","provideOriginalUri","mixinOAuth","Base","TransactionManagerConstructor","_a","WithOriginalUri","OktaAuthOAuth","constructor","args","transactionManager","Object","assign","storageManager","options","pkce","DEFAULT_CODE_CHALLENGE_METHOD","generateVerifier","computeChallenge","_pending","handleLogin","_tokenQueue","token","tokenManager","clearStorage","clear","isAuthenticated","autoRenew","autoRemove","getOptions","shouldRenew","onExpiredToken","shouldRemove","accessToken","getTokensSync","hasExpired","undefined","renew","remove","idToken","_b","signInWithRedirect","opts","originalUri","additionalParams","setOriginalUri","params","scopes","getWithRedirect","getUser","getUserInfo","getIdToken","getAccessToken","getRefreshToken","refreshToken","storeTokensFromRedirect","tokens","parseFromUrl","setTokens","isPKCE","hasResponseType","responseType","Array","isArray","length","indexOf","isAuthorizationCodeFlow","invokeApiMethod","getTokens","revokeAccessToken","accessTokenKey","getStorageKeyByType","Promise","resolve","revoke","revokeRefreshToken","refreshTokenKey","getSignOutRedirectUrl","postLogoutRedirectUri","state","logoutUrl","idTokenHint","logoutUri","encodeURIComponent","signOut","defaultUri","window","location","origin","currentUri","href","closeSession","then","reload","clearTokensBeforeRedirect","addPendingRemoveFlags","crypto"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/oidc/mixin/index.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { __rest } from '../../_virtual/_tslib.js';\nimport * as index from '../../crypto/index.js';\nimport { httpRequest } from '../../http/request.js';\nimport { PromiseQueue } from '../../util/PromiseQueue.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport PKCE from '../util/pkce.js';\nimport { createTokenAPI } from '../factory/api.js';\nimport { TokenManager } from '../TokenManager.js';\nimport { getOAuthUrls } from '../util/oauth.js';\nimport { isLoginRedirect } from '../util/loginRedirect.js';\nimport { provideOriginalUri } from './browser.js';\n\nfunction mixinOAuth(Base, TransactionManagerConstructor) {\n    var _a;\n    const WithOriginalUri = provideOriginalUri(Base);\n    return _a = class OktaAuthOAuth extends WithOriginalUri {\n            constructor(...args) {\n                super(...args);\n                this.transactionManager = new TransactionManagerConstructor(Object.assign({\n                    storageManager: this.storageManager,\n                }, this.options.transactionManager));\n                this.pkce = {\n                    DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n                    generateVerifier: PKCE.generateVerifier,\n                    computeChallenge: PKCE.computeChallenge\n                };\n                this._pending = { handleLogin: false };\n                this._tokenQueue = new PromiseQueue();\n                this.token = createTokenAPI(this, this._tokenQueue);\n                this.tokenManager = new TokenManager(this, this.options.tokenManager);\n            }\n            clearStorage() {\n                super.clearStorage();\n                this.tokenManager.clear();\n            }\n            async isAuthenticated(options = {}) {\n                const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n                const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n                const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n                let { accessToken } = this.tokenManager.getTokensSync();\n                if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n                    accessToken = undefined;\n                    if (shouldRenew) {\n                        try {\n                            accessToken = await this.tokenManager.renew('accessToken');\n                        }\n                        catch (_a) {\n                        }\n                    }\n                    else if (shouldRemove) {\n                        this.tokenManager.remove('accessToken');\n                    }\n                }\n                let { idToken } = this.tokenManager.getTokensSync();\n                if (idToken && this.tokenManager.hasExpired(idToken)) {\n                    idToken = undefined;\n                    if (shouldRenew) {\n                        try {\n                            idToken = await this.tokenManager.renew('idToken');\n                        }\n                        catch (_b) {\n                        }\n                    }\n                    else if (shouldRemove) {\n                        this.tokenManager.remove('idToken');\n                    }\n                }\n                return !!(accessToken && idToken);\n            }\n            async signInWithRedirect(opts = {}) {\n                const { originalUri } = opts, additionalParams = __rest(opts, [\"originalUri\"]);\n                if (this._pending.handleLogin) {\n                    return;\n                }\n                this._pending.handleLogin = true;\n                try {\n                    if (originalUri) {\n                        this.setOriginalUri(originalUri);\n                    }\n                    const params = Object.assign({\n                        scopes: this.options.scopes || ['openid', 'email', 'profile']\n                    }, additionalParams);\n                    await this.token.getWithRedirect(params);\n                }\n                finally {\n                    this._pending.handleLogin = false;\n                }\n            }\n            async getUser() {\n                const { idToken, accessToken } = this.tokenManager.getTokensSync();\n                return this.token.getUserInfo(accessToken, idToken);\n            }\n            getIdToken() {\n                const { idToken } = this.tokenManager.getTokensSync();\n                return idToken ? idToken.idToken : undefined;\n            }\n            getAccessToken() {\n                const { accessToken } = this.tokenManager.getTokensSync();\n                return accessToken ? accessToken.accessToken : undefined;\n            }\n            getRefreshToken() {\n                const { refreshToken } = this.tokenManager.getTokensSync();\n                return refreshToken ? refreshToken.refreshToken : undefined;\n            }\n            async storeTokensFromRedirect() {\n                const { tokens } = await this.token.parseFromUrl();\n                this.tokenManager.setTokens(tokens);\n            }\n            isLoginRedirect() {\n                return isLoginRedirect(this);\n            }\n            isPKCE() {\n                return !!this.options.pkce;\n            }\n            hasResponseType(responseType) {\n                let hasResponseType = false;\n                if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n                    hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n                }\n                else {\n                    hasResponseType = this.options.responseType === responseType;\n                }\n                return hasResponseType;\n            }\n            isAuthorizationCodeFlow() {\n                return this.hasResponseType('code');\n            }\n            async invokeApiMethod(options) {\n                if (!options.accessToken) {\n                    const accessToken = (await this.tokenManager.getTokens()).accessToken;\n                    options.accessToken = accessToken === null || accessToken === void 0 ? void 0 : accessToken.accessToken;\n                }\n                return httpRequest(this, options);\n            }\n            async revokeAccessToken(accessToken) {\n                if (!accessToken) {\n                    accessToken = (await this.tokenManager.getTokens()).accessToken;\n                    const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n                    this.tokenManager.remove(accessTokenKey);\n                }\n                if (!accessToken) {\n                    return Promise.resolve(null);\n                }\n                return this.token.revoke(accessToken);\n            }\n            async revokeRefreshToken(refreshToken) {\n                if (!refreshToken) {\n                    refreshToken = (await this.tokenManager.getTokens()).refreshToken;\n                    const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n                    this.tokenManager.remove(refreshTokenKey);\n                }\n                if (!refreshToken) {\n                    return Promise.resolve(null);\n                }\n                return this.token.revoke(refreshToken);\n            }\n            getSignOutRedirectUrl(options = {}) {\n                let { idToken, postLogoutRedirectUri, state, } = options;\n                if (!idToken) {\n                    idToken = this.tokenManager.getTokensSync().idToken;\n                }\n                if (!idToken) {\n                    return '';\n                }\n                if (!postLogoutRedirectUri) {\n                    postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n                }\n                const logoutUrl = getOAuthUrls(this).logoutUrl;\n                const idTokenHint = idToken.idToken;\n                let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n                if (postLogoutRedirectUri) {\n                    logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n                }\n                if (state) {\n                    logoutUri += '&state=' + encodeURIComponent(state);\n                }\n                return logoutUri;\n            }\n            async signOut(options) {\n                options = Object.assign({}, options);\n                var defaultUri = window.location.origin;\n                var currentUri = window.location.href;\n                var postLogoutRedirectUri = options.postLogoutRedirectUri\n                    || this.options.postLogoutRedirectUri\n                    || defaultUri;\n                var accessToken = options.accessToken;\n                var refreshToken = options.refreshToken;\n                var revokeAccessToken = options.revokeAccessToken !== false;\n                var revokeRefreshToken = options.revokeRefreshToken !== false;\n                if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n                    refreshToken = this.tokenManager.getTokensSync().refreshToken;\n                }\n                if (revokeAccessToken && typeof accessToken === 'undefined') {\n                    accessToken = this.tokenManager.getTokensSync().accessToken;\n                }\n                if (!options.idToken) {\n                    options.idToken = this.tokenManager.getTokensSync().idToken;\n                }\n                if (revokeRefreshToken && refreshToken) {\n                    await this.revokeRefreshToken(refreshToken);\n                }\n                if (revokeAccessToken && accessToken) {\n                    await this.revokeAccessToken(accessToken);\n                }\n                const logoutUri = this.getSignOutRedirectUrl(Object.assign(Object.assign({}, options), { postLogoutRedirectUri }));\n                if (!logoutUri) {\n                    return this.closeSession()\n                        .then(function () {\n                        if (postLogoutRedirectUri === currentUri) {\n                            window.location.reload();\n                        }\n                        else {\n                            window.location.assign(postLogoutRedirectUri);\n                        }\n                    });\n                }\n                else {\n                    if (options.clearTokensBeforeRedirect) {\n                        this.tokenManager.clear();\n                    }\n                    else {\n                        this.tokenManager.addPendingRemoveFlags();\n                    }\n                    window.location.assign(logoutUri);\n                }\n            }\n        },\n        _a.crypto = index,\n        _a;\n}\n\nexport { mixinOAuth };\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,QAAuB,0BAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,uBAAvB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAO,cAAP;AACA,OAAO,WAAP;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,kBAAT,QAAmC,cAAnC;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,6BAA1B,EAAyD;EACrD,IAAIC,EAAJ;;EACA,MAAMC,eAAe,GAAGL,kBAAkB,CAACE,IAAD,CAA1C;EACA,OAAOE,EAAE,GAAG,MAAME,aAAN,SAA4BD,eAA5B,CAA4C;IAChDE,WAAW,CAAC,GAAGC,IAAJ,EAAU;MACjB,MAAM,GAAGA,IAAT;MACA,KAAKC,kBAAL,GAA0B,IAAIN,6BAAJ,CAAkCO,MAAM,CAACC,MAAP,CAAc;QACtEC,cAAc,EAAE,KAAKA;MADiD,CAAd,EAEzD,KAAKC,OAAL,CAAaJ,kBAF4C,CAAlC,CAA1B;MAGA,KAAKK,IAAL,GAAY;QACRC,6BAA6B,EAAEpB,IAAI,CAACoB,6BAD5B;QAERC,gBAAgB,EAAErB,IAAI,CAACqB,gBAFf;QAGRC,gBAAgB,EAAEtB,IAAI,CAACsB;MAHf,CAAZ;MAKA,KAAKC,QAAL,GAAgB;QAAEC,WAAW,EAAE;MAAf,CAAhB;MACA,KAAKC,WAAL,GAAmB,IAAI1B,YAAJ,EAAnB;MACA,KAAK2B,KAAL,GAAazB,cAAc,CAAC,IAAD,EAAO,KAAKwB,WAAZ,CAA3B;MACA,KAAKE,YAAL,GAAoB,IAAIzB,YAAJ,CAAiB,IAAjB,EAAuB,KAAKgB,OAAL,CAAaS,YAApC,CAApB;IACH;;IACDC,YAAY,GAAG;MACX,MAAMA,YAAN;MACA,KAAKD,YAAL,CAAkBE,KAAlB;IACH;;IACKC,eAAe,CAACZ,OAAO,GAAG,EAAX,EAAe;MAAA;;MAAA;QAChC,MAAM;UAAEa,SAAF;UAAaC;QAAb,IAA4B,KAAI,CAACL,YAAL,CAAkBM,UAAlB,EAAlC;;QACA,MAAMC,WAAW,GAAGhB,OAAO,CAACiB,cAAR,GAAyBjB,OAAO,CAACiB,cAAR,KAA2B,OAApD,GAA8DJ,SAAlF;QACA,MAAMK,YAAY,GAAGlB,OAAO,CAACiB,cAAR,GAAyBjB,OAAO,CAACiB,cAAR,KAA2B,QAApD,GAA+DH,UAApF;;QACA,IAAI;UAAEK;QAAF,IAAkB,KAAI,CAACV,YAAL,CAAkBW,aAAlB,EAAtB;;QACA,IAAID,WAAW,IAAI,KAAI,CAACV,YAAL,CAAkBY,UAAlB,CAA6BF,WAA7B,CAAnB,EAA8D;UAC1DA,WAAW,GAAGG,SAAd;;UACA,IAAIN,WAAJ,EAAiB;YACb,IAAI;cACAG,WAAW,SAAS,KAAI,CAACV,YAAL,CAAkBc,KAAlB,CAAwB,aAAxB,CAApB;YACH,CAFD,CAGA,OAAOhC,EAAP,EAAW,CACV;UACJ,CAND,MAOK,IAAI2B,YAAJ,EAAkB;YACnB,KAAI,CAACT,YAAL,CAAkBe,MAAlB,CAAyB,aAAzB;UACH;QACJ;;QACD,IAAI;UAAEC;QAAF,IAAc,KAAI,CAAChB,YAAL,CAAkBW,aAAlB,EAAlB;;QACA,IAAIK,OAAO,IAAI,KAAI,CAAChB,YAAL,CAAkBY,UAAlB,CAA6BI,OAA7B,CAAf,EAAsD;UAClDA,OAAO,GAAGH,SAAV;;UACA,IAAIN,WAAJ,EAAiB;YACb,IAAI;cACAS,OAAO,SAAS,KAAI,CAAChB,YAAL,CAAkBc,KAAlB,CAAwB,SAAxB,CAAhB;YACH,CAFD,CAGA,OAAOG,EAAP,EAAW,CACV;UACJ,CAND,MAOK,IAAIR,YAAJ,EAAkB;YACnB,KAAI,CAACT,YAAL,CAAkBe,MAAlB,CAAyB,SAAzB;UACH;QACJ;;QACD,OAAO,CAAC,EAAEL,WAAW,IAAIM,OAAjB,CAAR;MAhCgC;IAiCnC;;IACKE,kBAAkB,CAACC,IAAI,GAAG,EAAR,EAAY;MAAA;;MAAA;QAChC,MAAM;UAAEC;QAAF,IAAkBD,IAAxB;QAAA,MAA8BE,gBAAgB,GAAGpD,MAAM,CAACkD,IAAD,EAAO,CAAC,aAAD,CAAP,CAAvD;;QACA,IAAI,MAAI,CAACvB,QAAL,CAAcC,WAAlB,EAA+B;UAC3B;QACH;;QACD,MAAI,CAACD,QAAL,CAAcC,WAAd,GAA4B,IAA5B;;QACA,IAAI;UACA,IAAIuB,WAAJ,EAAiB;YACb,MAAI,CAACE,cAAL,CAAoBF,WAApB;UACH;;UACD,MAAMG,MAAM,GAAGnC,MAAM,CAACC,MAAP,CAAc;YACzBmC,MAAM,EAAE,MAAI,CAACjC,OAAL,CAAaiC,MAAb,IAAuB,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB;UADN,CAAd,EAEZH,gBAFY,CAAf;UAGA,MAAM,MAAI,CAACtB,KAAL,CAAW0B,eAAX,CAA2BF,MAA3B,CAAN;QACH,CARD,SASQ;UACJ,MAAI,CAAC3B,QAAL,CAAcC,WAAd,GAA4B,KAA5B;QACH;MAjB+B;IAkBnC;;IACK6B,OAAO,GAAG;MAAA;;MAAA;QACZ,MAAM;UAAEV,OAAF;UAAWN;QAAX,IAA2B,MAAI,CAACV,YAAL,CAAkBW,aAAlB,EAAjC;;QACA,OAAO,MAAI,CAACZ,KAAL,CAAW4B,WAAX,CAAuBjB,WAAvB,EAAoCM,OAApC,CAAP;MAFY;IAGf;;IACDY,UAAU,GAAG;MACT,MAAM;QAAEZ;MAAF,IAAc,KAAKhB,YAAL,CAAkBW,aAAlB,EAApB;MACA,OAAOK,OAAO,GAAGA,OAAO,CAACA,OAAX,GAAqBH,SAAnC;IACH;;IACDgB,cAAc,GAAG;MACb,MAAM;QAAEnB;MAAF,IAAkB,KAAKV,YAAL,CAAkBW,aAAlB,EAAxB;MACA,OAAOD,WAAW,GAAGA,WAAW,CAACA,WAAf,GAA6BG,SAA/C;IACH;;IACDiB,eAAe,GAAG;MACd,MAAM;QAAEC;MAAF,IAAmB,KAAK/B,YAAL,CAAkBW,aAAlB,EAAzB;MACA,OAAOoB,YAAY,GAAGA,YAAY,CAACA,YAAhB,GAA+BlB,SAAlD;IACH;;IACKmB,uBAAuB,GAAG;MAAA;;MAAA;QAC5B,MAAM;UAAEC;QAAF,UAAmB,MAAI,CAAClC,KAAL,CAAWmC,YAAX,EAAzB;;QACA,MAAI,CAAClC,YAAL,CAAkBmC,SAAlB,CAA4BF,MAA5B;MAF4B;IAG/B;;IACDxD,eAAe,GAAG;MACd,OAAOA,eAAe,CAAC,IAAD,CAAtB;IACH;;IACD2D,MAAM,GAAG;MACL,OAAO,CAAC,CAAC,KAAK7C,OAAL,CAAaC,IAAtB;IACH;;IACD6C,eAAe,CAACC,YAAD,EAAe;MAC1B,IAAID,eAAe,GAAG,KAAtB;;MACA,IAAIE,KAAK,CAACC,OAAN,CAAc,KAAKjD,OAAL,CAAa+C,YAA3B,KAA4C,KAAK/C,OAAL,CAAa+C,YAAb,CAA0BG,MAA1E,EAAkF;QAC9EJ,eAAe,GAAG,KAAK9C,OAAL,CAAa+C,YAAb,CAA0BI,OAA1B,CAAkCJ,YAAlC,KAAmD,CAArE;MACH,CAFD,MAGK;QACDD,eAAe,GAAG,KAAK9C,OAAL,CAAa+C,YAAb,KAA8BA,YAAhD;MACH;;MACD,OAAOD,eAAP;IACH;;IACDM,uBAAuB,GAAG;MACtB,OAAO,KAAKN,eAAL,CAAqB,MAArB,CAAP;IACH;;IACKO,eAAe,CAACrD,OAAD,EAAU;MAAA;;MAAA;QAC3B,IAAI,CAACA,OAAO,CAACmB,WAAb,EAA0B;UACtB,MAAMA,WAAW,GAAG,OAAO,MAAI,CAACV,YAAL,CAAkB6C,SAAlB,EAAP,EAAsCnC,WAA1D;UACAnB,OAAO,CAACmB,WAAR,GAAsBA,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACA,WAA5F;QACH;;QACD,OAAOvC,WAAW,CAAC,MAAD,EAAOoB,OAAP,CAAlB;MAL2B;IAM9B;;IACKuD,iBAAiB,CAACpC,WAAD,EAAc;MAAA;;MAAA;QACjC,IAAI,CAACA,WAAL,EAAkB;UACdA,WAAW,GAAG,OAAO,MAAI,CAACV,YAAL,CAAkB6C,SAAlB,EAAP,EAAsCnC,WAApD;;UACA,MAAMqC,cAAc,GAAG,MAAI,CAAC/C,YAAL,CAAkBgD,mBAAlB,CAAsC,aAAtC,CAAvB;;UACA,MAAI,CAAChD,YAAL,CAAkBe,MAAlB,CAAyBgC,cAAzB;QACH;;QACD,IAAI,CAACrC,WAAL,EAAkB;UACd,OAAOuC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;QACH;;QACD,OAAO,MAAI,CAACnD,KAAL,CAAWoD,MAAX,CAAkBzC,WAAlB,CAAP;MATiC;IAUpC;;IACK0C,kBAAkB,CAACrB,YAAD,EAAe;MAAA;;MAAA;QACnC,IAAI,CAACA,YAAL,EAAmB;UACfA,YAAY,GAAG,OAAO,MAAI,CAAC/B,YAAL,CAAkB6C,SAAlB,EAAP,EAAsCd,YAArD;;UACA,MAAMsB,eAAe,GAAG,MAAI,CAACrD,YAAL,CAAkBgD,mBAAlB,CAAsC,cAAtC,CAAxB;;UACA,MAAI,CAAChD,YAAL,CAAkBe,MAAlB,CAAyBsC,eAAzB;QACH;;QACD,IAAI,CAACtB,YAAL,EAAmB;UACf,OAAOkB,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;QACH;;QACD,OAAO,MAAI,CAACnD,KAAL,CAAWoD,MAAX,CAAkBpB,YAAlB,CAAP;MATmC;IAUtC;;IACDuB,qBAAqB,CAAC/D,OAAO,GAAG,EAAX,EAAe;MAChC,IAAI;QAAEyB,OAAF;QAAWuC,qBAAX;QAAkCC;MAAlC,IAA6CjE,OAAjD;;MACA,IAAI,CAACyB,OAAL,EAAc;QACVA,OAAO,GAAG,KAAKhB,YAAL,CAAkBW,aAAlB,GAAkCK,OAA5C;MACH;;MACD,IAAI,CAACA,OAAL,EAAc;QACV,OAAO,EAAP;MACH;;MACD,IAAI,CAACuC,qBAAL,EAA4B;QACxBA,qBAAqB,GAAG,KAAKhE,OAAL,CAAagE,qBAArC;MACH;;MACD,MAAME,SAAS,GAAGjF,YAAY,CAAC,IAAD,CAAZ,CAAmBiF,SAArC;MACA,MAAMC,WAAW,GAAG1C,OAAO,CAACA,OAA5B;MACA,IAAI2C,SAAS,GAAGF,SAAS,GAAG,iBAAZ,GAAgCG,kBAAkB,CAACF,WAAD,CAAlE;;MACA,IAAIH,qBAAJ,EAA2B;QACvBI,SAAS,IAAI,+BAA+BC,kBAAkB,CAACL,qBAAD,CAA9D;MACH;;MACD,IAAIC,KAAJ,EAAW;QACPG,SAAS,IAAI,YAAYC,kBAAkB,CAACJ,KAAD,CAA3C;MACH;;MACD,OAAOG,SAAP;IACH;;IACKE,OAAO,CAACtE,OAAD,EAAU;MAAA;;MAAA;QACnBA,OAAO,GAAGH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBE,OAAlB,CAAV;QACA,IAAIuE,UAAU,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAjC;QACA,IAAIC,UAAU,GAAGH,MAAM,CAACC,QAAP,CAAgBG,IAAjC;QACA,IAAIZ,qBAAqB,GAAGhE,OAAO,CAACgE,qBAAR,IACrB,MAAI,CAAChE,OAAL,CAAagE,qBADQ,IAErBO,UAFP;QAGA,IAAIpD,WAAW,GAAGnB,OAAO,CAACmB,WAA1B;QACA,IAAIqB,YAAY,GAAGxC,OAAO,CAACwC,YAA3B;QACA,IAAIe,iBAAiB,GAAGvD,OAAO,CAACuD,iBAAR,KAA8B,KAAtD;QACA,IAAIM,kBAAkB,GAAG7D,OAAO,CAAC6D,kBAAR,KAA+B,KAAxD;;QACA,IAAIA,kBAAkB,IAAI,OAAOrB,YAAP,KAAwB,WAAlD,EAA+D;UAC3DA,YAAY,GAAG,MAAI,CAAC/B,YAAL,CAAkBW,aAAlB,GAAkCoB,YAAjD;QACH;;QACD,IAAIe,iBAAiB,IAAI,OAAOpC,WAAP,KAAuB,WAAhD,EAA6D;UACzDA,WAAW,GAAG,MAAI,CAACV,YAAL,CAAkBW,aAAlB,GAAkCD,WAAhD;QACH;;QACD,IAAI,CAACnB,OAAO,CAACyB,OAAb,EAAsB;UAClBzB,OAAO,CAACyB,OAAR,GAAkB,MAAI,CAAChB,YAAL,CAAkBW,aAAlB,GAAkCK,OAApD;QACH;;QACD,IAAIoC,kBAAkB,IAAIrB,YAA1B,EAAwC;UACpC,MAAM,MAAI,CAACqB,kBAAL,CAAwBrB,YAAxB,CAAN;QACH;;QACD,IAAIe,iBAAiB,IAAIpC,WAAzB,EAAsC;UAClC,MAAM,MAAI,CAACoC,iBAAL,CAAuBpC,WAAvB,CAAN;QACH;;QACD,MAAMiD,SAAS,GAAG,MAAI,CAACL,qBAAL,CAA2BlE,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBE,OAAlB,CAAd,EAA0C;UAAEgE;QAAF,CAA1C,CAA3B,CAAlB;;QACA,IAAI,CAACI,SAAL,EAAgB;UACZ,OAAO,MAAI,CAACS,YAAL,GACFC,IADE,CACG,YAAY;YAClB,IAAId,qBAAqB,KAAKW,UAA9B,EAA0C;cACtCH,MAAM,CAACC,QAAP,CAAgBM,MAAhB;YACH,CAFD,MAGK;cACDP,MAAM,CAACC,QAAP,CAAgB3E,MAAhB,CAAuBkE,qBAAvB;YACH;UACJ,CARM,CAAP;QASH,CAVD,MAWK;UACD,IAAIhE,OAAO,CAACgF,yBAAZ,EAAuC;YACnC,MAAI,CAACvE,YAAL,CAAkBE,KAAlB;UACH,CAFD,MAGK;YACD,MAAI,CAACF,YAAL,CAAkBwE,qBAAlB;UACH;;UACDT,MAAM,CAACC,QAAP,CAAgB3E,MAAhB,CAAuBsE,SAAvB;QACH;MA9CkB;IA+CtB;;EAlN+C,CAAjD,EAoNH7E,EAAE,CAAC2F,MAAH,GAAYvG,KApNT,EAqNHY,EArNJ;AAsNH;;AAED,SAASH,UAAT"},"metadata":{},"sourceType":"module"}