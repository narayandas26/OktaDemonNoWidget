{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { createTransactionManager } from '../oidc/TransactionManager.js';\nimport { isRawIdxResponse } from './types/idx-js.js';\n\nfunction createIdxTransactionManager() {\n  const TransactionManager = createTransactionManager();\n  return class IdxTransactionManager extends TransactionManager {\n    constructor(options) {\n      super(options);\n    }\n\n    clear(options = {}) {\n      super.clear(options);\n\n      if (options.clearIdxResponse !== false) {\n        this.clearIdxResponse();\n      }\n    }\n\n    saveIdxResponse(data) {\n      if (!this.saveLastResponse) {\n        return;\n      }\n\n      const storage = this.storageManager.getIdxResponseStorage();\n\n      if (!storage) {\n        return;\n      }\n\n      storage.setStorage(data);\n    }\n\n    loadIdxResponse(options) {\n      if (!this.saveLastResponse) {\n        return null;\n      }\n\n      const storage = this.storageManager.getIdxResponseStorage();\n\n      if (!storage) {\n        return null;\n      }\n\n      const storedValue = storage.getStorage();\n\n      if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n        return null;\n      }\n\n      if (options) {\n        const {\n          stateHandle,\n          interactionHandle\n        } = options;\n\n        if (stateHandle && storedValue.stateHandle !== stateHandle) {\n          return null;\n        }\n\n        if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n          return null;\n        }\n      }\n\n      return storedValue;\n    }\n\n    clearIdxResponse() {\n      if (!this.saveLastResponse) {\n        return;\n      }\n\n      const storage = this.storageManager.getIdxResponseStorage();\n      storage === null || storage === void 0 ? void 0 : storage.clearStorage();\n    }\n\n  };\n}\n\nexport { createIdxTransactionManager }; //# sourceMappingURL=IdxTransactionManager.js.map","map":null,"metadata":{},"sourceType":"module"}