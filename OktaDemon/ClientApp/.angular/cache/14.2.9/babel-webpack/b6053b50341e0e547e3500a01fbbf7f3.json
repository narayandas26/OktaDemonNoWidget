{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { getDefaultTokenParams } from './util/defaultTokenParams.js';\nimport { getOAuthUrls } from './util/oauth.js';\nimport { clone } from '../util/object.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { postToTokenEndpoint } from './endpoints/token.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\n\nfunction exchangeCodeForTokens(sdk, tokenParams, urls) {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state\n  } = tokenParams;\n  var getTokenOptions = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier\n  };\n  return postToTokenEndpoint(sdk, getTokenOptions, urls).then(response => {\n    const responseType = ['token'];\n\n    if (scopes.indexOf('openid') !== -1) {\n      responseType.push('id_token');\n    }\n\n    const handleResponseOptions = {\n      clientId,\n      redirectUri,\n      scopes,\n      responseType,\n      ignoreSignature\n    };\n    return handleOAuthResponse(sdk, handleResponseOptions, response, urls).then(response => {\n      response.code = authorizationCode;\n      response.state = state;\n      return response;\n    });\n  }).finally(() => {\n    sdk.transactionManager.clear();\n  });\n}\n\nexport { exchangeCodeForTokens };","map":{"version":3,"names":["getDefaultTokenParams","getOAuthUrls","clone","postToTokenEndpoint","handleOAuthResponse","exchangeCodeForTokens","sdk","tokenParams","urls","Object","assign","authorizationCode","interactionCode","codeVerifier","clientId","redirectUri","scopes","ignoreSignature","state","getTokenOptions","then","response","responseType","indexOf","push","handleResponseOptions","code","finally","transactionManager","clear"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/oidc/exchangeCodeForTokens.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { getDefaultTokenParams } from './util/defaultTokenParams.js';\nimport { getOAuthUrls } from './util/oauth.js';\nimport { clone } from '../util/object.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { postToTokenEndpoint } from './endpoints/token.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\n\nfunction exchangeCodeForTokens(sdk, tokenParams, urls) {\n    urls = urls || getOAuthUrls(sdk, tokenParams);\n    tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n    const { authorizationCode, interactionCode, codeVerifier, clientId, redirectUri, scopes, ignoreSignature, state } = tokenParams;\n    var getTokenOptions = {\n        clientId,\n        redirectUri,\n        authorizationCode,\n        interactionCode,\n        codeVerifier,\n    };\n    return postToTokenEndpoint(sdk, getTokenOptions, urls)\n        .then((response) => {\n        const responseType = ['token'];\n        if (scopes.indexOf('openid') !== -1) {\n            responseType.push('id_token');\n        }\n        const handleResponseOptions = {\n            clientId,\n            redirectUri,\n            scopes,\n            responseType,\n            ignoreSignature,\n        };\n        return handleOAuthResponse(sdk, handleResponseOptions, response, urls)\n            .then((response) => {\n            response.code = authorizationCode;\n            response.state = state;\n            return response;\n        });\n    })\n        .finally(() => {\n        sdk.transactionManager.clear();\n    });\n}\n\nexport { exchangeCodeForTokens };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,qBAAT,QAAsC,8BAAtC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAO,cAAP;AACA,OAAO,WAAP;AACA,OAAO,aAAP;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoCC,WAApC,EAAiDC,IAAjD,EAAuD;EACnDA,IAAI,GAAGA,IAAI,IAAIP,YAAY,CAACK,GAAD,EAAMC,WAAN,CAA3B;EACAA,WAAW,GAAGE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,qBAAqB,CAACM,GAAD,CAAvC,EAA8CJ,KAAK,CAACK,WAAD,CAAnD,CAAd;EACA,MAAM;IAAEI,iBAAF;IAAqBC,eAArB;IAAsCC,YAAtC;IAAoDC,QAApD;IAA8DC,WAA9D;IAA2EC,MAA3E;IAAmFC,eAAnF;IAAoGC;EAApG,IAA8GX,WAApH;EACA,IAAIY,eAAe,GAAG;IAClBL,QADkB;IAElBC,WAFkB;IAGlBJ,iBAHkB;IAIlBC,eAJkB;IAKlBC;EALkB,CAAtB;EAOA,OAAOV,mBAAmB,CAACG,GAAD,EAAMa,eAAN,EAAuBX,IAAvB,CAAnB,CACFY,IADE,CACIC,QAAD,IAAc;IACpB,MAAMC,YAAY,GAAG,CAAC,OAAD,CAArB;;IACA,IAAIN,MAAM,CAACO,OAAP,CAAe,QAAf,MAA6B,CAAC,CAAlC,EAAqC;MACjCD,YAAY,CAACE,IAAb,CAAkB,UAAlB;IACH;;IACD,MAAMC,qBAAqB,GAAG;MAC1BX,QAD0B;MAE1BC,WAF0B;MAG1BC,MAH0B;MAI1BM,YAJ0B;MAK1BL;IAL0B,CAA9B;IAOA,OAAOb,mBAAmB,CAACE,GAAD,EAAMmB,qBAAN,EAA6BJ,QAA7B,EAAuCb,IAAvC,CAAnB,CACFY,IADE,CACIC,QAAD,IAAc;MACpBA,QAAQ,CAACK,IAAT,GAAgBf,iBAAhB;MACAU,QAAQ,CAACH,KAAT,GAAiBA,KAAjB;MACA,OAAOG,QAAP;IACH,CALM,CAAP;EAMH,CAnBM,EAoBFM,OApBE,CAoBM,MAAM;IACfrB,GAAG,CAACsB,kBAAJ,CAAuBC,KAAvB;EACH,CAtBM,CAAP;AAuBH;;AAED,SAASxB,qBAAT"},"metadata":{},"sourceType":"module"}