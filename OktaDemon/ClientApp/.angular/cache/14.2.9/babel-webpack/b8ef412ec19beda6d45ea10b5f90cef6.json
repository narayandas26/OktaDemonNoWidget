{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Authenticator } from './Authenticator.js';\n\nclass OktaPassword extends Authenticator {\n  canVerify(values) {\n    return !!(values.credentials || values.password || values.passcode);\n  }\n\n  mapCredentials(values) {\n    const {\n      credentials,\n      password,\n      passcode\n    } = values;\n\n    if (!credentials && !password && !passcode) {\n      return;\n    }\n\n    return credentials || {\n      passcode: passcode || password\n    };\n  }\n\n  getInputs(idxRemediationValue) {\n    var _a;\n\n    return Object.assign(Object.assign({}, (_a = idxRemediationValue.form) === null || _a === void 0 ? void 0 : _a.value[0]), {\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required\n    });\n  }\n\n}\n\nexport { OktaPassword };","map":{"version":3,"names":["Authenticator","OktaPassword","canVerify","values","credentials","password","passcode","mapCredentials","getInputs","idxRemediationValue","_a","Object","assign","form","value","name","type","required"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/authenticator/OktaPassword.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Authenticator } from './Authenticator.js';\n\nclass OktaPassword extends Authenticator {\n    canVerify(values) {\n        return !!(values.credentials || values.password || values.passcode);\n    }\n    mapCredentials(values) {\n        const { credentials, password, passcode } = values;\n        if (!credentials && !password && !passcode) {\n            return;\n        }\n        return credentials || { passcode: passcode || password };\n    }\n    getInputs(idxRemediationValue) {\n        var _a;\n        return Object.assign(Object.assign({}, (_a = idxRemediationValue.form) === null || _a === void 0 ? void 0 : _a.value[0]), { name: 'password', type: 'string', required: idxRemediationValue.required });\n    }\n}\n\nexport { OktaPassword };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAT,QAA8B,oBAA9B;;AAEA,MAAMC,YAAN,SAA2BD,aAA3B,CAAyC;EACrCE,SAAS,CAACC,MAAD,EAAS;IACd,OAAO,CAAC,EAAEA,MAAM,CAACC,WAAP,IAAsBD,MAAM,CAACE,QAA7B,IAAyCF,MAAM,CAACG,QAAlD,CAAR;EACH;;EACDC,cAAc,CAACJ,MAAD,EAAS;IACnB,MAAM;MAAEC,WAAF;MAAeC,QAAf;MAAyBC;IAAzB,IAAsCH,MAA5C;;IACA,IAAI,CAACC,WAAD,IAAgB,CAACC,QAAjB,IAA6B,CAACC,QAAlC,EAA4C;MACxC;IACH;;IACD,OAAOF,WAAW,IAAI;MAAEE,QAAQ,EAAEA,QAAQ,IAAID;IAAxB,CAAtB;EACH;;EACDG,SAAS,CAACC,mBAAD,EAAsB;IAC3B,IAAIC,EAAJ;;IACA,OAAOC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,CAACF,EAAE,GAAGD,mBAAmB,CAACI,IAA1B,MAAoC,IAApC,IAA4CH,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACI,KAAH,CAAS,CAAT,CAAvF,CAAd,EAAmH;MAAEC,IAAI,EAAE,UAAR;MAAoBC,IAAI,EAAE,QAA1B;MAAoCC,QAAQ,EAAER,mBAAmB,CAACQ;IAAlE,CAAnH,CAAP;EACH;;AAdoC;;AAiBzC,SAAShB,YAAT"},"metadata":{},"sourceType":"module"}