{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { warn } from '../util/console.js';\nimport { removeNils } from '../util/object.js';\nimport { createOAuthMeta } from '../oidc/util/oauthMeta.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\n\nfunction createTransactionMeta(_x) {\n  return _createTransactionMeta.apply(this, arguments);\n}\n\nfunction _createTransactionMeta() {\n  _createTransactionMeta = _asyncToGenerator(function* (authClient, options = {}) {\n    const tokenParams = yield authClient.token.prepareTokenParams(options);\n    const pkceMeta = createOAuthMeta(authClient, tokenParams);\n    let {\n      flow = 'default',\n      withCredentials = true,\n      activationToken = undefined,\n      recoveryToken = undefined,\n      maxAge = undefined\n    } = Object.assign(Object.assign({}, authClient.options), options);\n    const meta = Object.assign(Object.assign({}, pkceMeta), {\n      flow,\n      withCredentials,\n      activationToken,\n      recoveryToken,\n      maxAge\n    });\n    return meta;\n  });\n  return _createTransactionMeta.apply(this, arguments);\n}\n\nfunction hasSavedInteractionHandle(authClient, options) {\n  const savedMeta = getSavedTransactionMeta(authClient, options);\n\n  if (savedMeta === null || savedMeta === void 0 ? void 0 : savedMeta.interactionHandle) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSavedTransactionMeta(authClient, options) {\n  options = removeNils(options);\n  options = Object.assign(Object.assign({}, authClient.options), options);\n  let savedMeta;\n\n  try {\n    savedMeta = authClient.transactionManager.load(options);\n  } catch (e) {}\n\n  if (!savedMeta) {\n    return;\n  }\n\n  if (isTransactionMetaValid(savedMeta, options)) {\n    return savedMeta;\n  }\n\n  warn('Saved transaction meta does not match the current configuration. ' + 'This may indicate that two apps are sharing a storage key.');\n}\n\nfunction getTransactionMeta(_x2, _x3) {\n  return _getTransactionMeta.apply(this, arguments);\n}\n\nfunction _getTransactionMeta() {\n  _getTransactionMeta = _asyncToGenerator(function* (authClient, options) {\n    options = removeNils(options);\n    options = Object.assign(Object.assign({}, authClient.options), options);\n    const validExistingMeta = getSavedTransactionMeta(authClient, options);\n\n    if (validExistingMeta) {\n      return validExistingMeta;\n    }\n\n    return createTransactionMeta(authClient, options);\n  });\n  return _getTransactionMeta.apply(this, arguments);\n}\n\nfunction saveTransactionMeta(authClient, meta) {\n  authClient.transactionManager.save(meta, {\n    muteWarning: true\n  });\n}\n\nfunction clearTransactionMeta(authClient) {\n  authClient.transactionManager.clear();\n}\n\nfunction isTransactionMetaValid(meta, options = {}) {\n  const keys = ['issuer', 'clientId', 'redirectUri', 'state', 'codeChallenge', 'codeChallengeMethod', 'activationToken', 'recoveryToken'];\n\n  if (isTransactionMetaValidForOptions(meta, options, keys) === false) {\n    return false;\n  }\n\n  const {\n    flow\n  } = options;\n\n  if (isTransactionMetaValidForFlow(meta, flow) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isTransactionMetaValidForFlow(meta, flow) {\n  const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isTransactionMetaValidForOptions(meta, options, keys) {\n  const mismatch = keys.some(key => {\n    const value = options[key];\n\n    if (value && value !== meta[key]) {\n      return true;\n    }\n  });\n  return !mismatch;\n}\n\nexport { clearTransactionMeta, createTransactionMeta, getSavedTransactionMeta, getTransactionMeta, hasSavedInteractionHandle, isTransactionMetaValid, isTransactionMetaValidForFlow, isTransactionMetaValidForOptions, saveTransactionMeta };","map":{"version":3,"names":["warn","removeNils","createOAuthMeta","createTransactionMeta","authClient","options","tokenParams","token","prepareTokenParams","pkceMeta","flow","withCredentials","activationToken","undefined","recoveryToken","maxAge","Object","assign","meta","hasSavedInteractionHandle","savedMeta","getSavedTransactionMeta","interactionHandle","transactionManager","load","e","isTransactionMetaValid","getTransactionMeta","validExistingMeta","saveTransactionMeta","save","muteWarning","clearTransactionMeta","clear","keys","isTransactionMetaValidForOptions","isTransactionMetaValidForFlow","shouldValidateFlow","mismatch","some","key","value"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/transactionMeta.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { warn } from '../util/console.js';\nimport { removeNils } from '../util/object.js';\nimport { createOAuthMeta } from '../oidc/util/oauthMeta.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\n\nasync function createTransactionMeta(authClient, options = {}) {\n    const tokenParams = await authClient.token.prepareTokenParams(options);\n    const pkceMeta = createOAuthMeta(authClient, tokenParams);\n    let { flow = 'default', withCredentials = true, activationToken = undefined, recoveryToken = undefined, maxAge = undefined, } = Object.assign(Object.assign({}, authClient.options), options);\n    const meta = Object.assign(Object.assign({}, pkceMeta), { flow,\n        withCredentials,\n        activationToken,\n        recoveryToken,\n        maxAge });\n    return meta;\n}\nfunction hasSavedInteractionHandle(authClient, options) {\n    const savedMeta = getSavedTransactionMeta(authClient, options);\n    if (savedMeta === null || savedMeta === void 0 ? void 0 : savedMeta.interactionHandle) {\n        return true;\n    }\n    return false;\n}\nfunction getSavedTransactionMeta(authClient, options) {\n    options = removeNils(options);\n    options = Object.assign(Object.assign({}, authClient.options), options);\n    let savedMeta;\n    try {\n        savedMeta = authClient.transactionManager.load(options);\n    }\n    catch (e) {\n    }\n    if (!savedMeta) {\n        return;\n    }\n    if (isTransactionMetaValid(savedMeta, options)) {\n        return savedMeta;\n    }\n    warn('Saved transaction meta does not match the current configuration. ' +\n        'This may indicate that two apps are sharing a storage key.');\n}\nasync function getTransactionMeta(authClient, options) {\n    options = removeNils(options);\n    options = Object.assign(Object.assign({}, authClient.options), options);\n    const validExistingMeta = getSavedTransactionMeta(authClient, options);\n    if (validExistingMeta) {\n        return validExistingMeta;\n    }\n    return createTransactionMeta(authClient, options);\n}\nfunction saveTransactionMeta(authClient, meta) {\n    authClient.transactionManager.save(meta, { muteWarning: true });\n}\nfunction clearTransactionMeta(authClient) {\n    authClient.transactionManager.clear();\n}\nfunction isTransactionMetaValid(meta, options = {}) {\n    const keys = [\n        'issuer',\n        'clientId',\n        'redirectUri',\n        'state',\n        'codeChallenge',\n        'codeChallengeMethod',\n        'activationToken',\n        'recoveryToken'\n    ];\n    if (isTransactionMetaValidForOptions(meta, options, keys) === false) {\n        return false;\n    }\n    const { flow } = options;\n    if (isTransactionMetaValidForFlow(meta, flow) === false) {\n        return false;\n    }\n    return true;\n}\nfunction isTransactionMetaValidForFlow(meta, flow) {\n    const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n    if (shouldValidateFlow) {\n        if (flow !== meta.flow) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isTransactionMetaValidForOptions(meta, options, keys) {\n    const mismatch = keys.some(key => {\n        const value = options[key];\n        if (value && value !== meta[key]) {\n            return true;\n        }\n    });\n    return !mismatch;\n}\n\nexport { clearTransactionMeta, createTransactionMeta, getSavedTransactionMeta, getTransactionMeta, hasSavedInteractionHandle, isTransactionMetaValid, isTransactionMetaValidForFlow, isTransactionMetaValidForOptions, saveTransactionMeta };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}