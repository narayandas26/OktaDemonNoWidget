{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nexport { authenticate } from '../../idx/authenticate.js';\nexport { cancel } from '../../idx/cancel.js';\nexport { handleEmailVerifyCallback, isEmailVerifyCallback, isEmailVerifyCallbackError, parseEmailVerifyCallback } from '../../idx/emailVerify.js';\nexport { interact } from '../../idx/interact.js';\nexport { introspect } from '../../idx/introspect.js';\nexport { poll } from '../../idx/poll.js';\nexport { canProceed, proceed } from '../../idx/proceed.js';\nexport { register } from '../../idx/register.js';\nexport { recoverPassword } from '../../idx/recoverPassword.js';\nexport { handleInteractionCodeRedirect } from '../../idx/handleInteractionCodeRedirect.js';\nexport { startTransaction } from '../../idx/startTransaction.js';\nexport { unlockAccount } from '../../idx/unlockAccount.js';\nexport { clearTransactionMeta, createTransactionMeta, getSavedTransactionMeta, getTransactionMeta, hasSavedInteractionHandle, isTransactionMetaValid, isTransactionMetaValidForFlow, isTransactionMetaValidForOptions, saveTransactionMeta } from '../../idx/transactionMeta.js';\nexport { createIdxAPI } from '../../idx/factory/api.js';\nimport { createOktaAuthIdx } from '../../idx/factory/OktaAuthIdx.js';\nexport { createOktaAuthIdx } from '../../idx/factory/OktaAuthIdx.js';\nexport { mixinIdx } from '../../idx/mixin.js';\nimport { createIdxOptionsConstructor } from '../../idx/options.js';\nexport { createIdxOptionsConstructor } from '../../idx/options.js';\nimport { createIdxStorageManager } from '../../idx/storage.js';\nexport { createIdxStorageManager } from '../../idx/storage.js';\nexport { AuthenticatorKey, IdxFeature, IdxStatus, isAuthenticator } from '../../idx/types/api.js';\nimport { createIdxTransactionManager } from '../../idx/IdxTransactionManager.js';\nexport { createIdxTransactionManager } from '../../idx/IdxTransactionManager.js';\nexport { getProfile, getProfileSchema, updateProfile } from '../../myaccount/profileApi.js';\nexport { addEmail, deleteEmail, getEmail, getEmailChallenge, getEmails, sendEmailChallenge, verifyEmailChallenge } from '../../myaccount/emailApi.js';\nexport { addPhone, deletePhone, getPhone, getPhones, sendPhoneChallenge, verifyPhoneChallenge } from '../../myaccount/phoneApi.js';\nexport { createOktaAuthMyAccount } from '../../myaccount/factory.js';\nimport { mixinMyAccount } from '../../myaccount/mixin.js';\nexport { mixinMyAccount } from '../../myaccount/mixin.js';\nexport { EmailRole, Status } from '../../myaccount/types.js';\nexport { createAuthnTransactionAPI } from '../../authn/factory.js';\nimport { mixinAuthn } from '../../authn/mixin.js';\nexport { mixinAuthn } from '../../authn/mixin.js';\nimport * as index from '../../crypto/index.js';\nexport { index as crypto };\nexport { createOktaAuthBase } from '../../base/factory.js';\nexport { createBaseOptionsConstructor } from '../../base/options.js';\nexport { ACCESS_TOKEN_STORAGE_KEY, CACHE_STORAGE_NAME, DEFAULT_CACHE_DURATION, DEFAULT_CODE_CHALLENGE_METHOD, DEFAULT_MAX_CLOCK_SKEW, DEFAULT_POLLING_DELAY, IDX_API_VERSION, IDX_RESPONSE_STORAGE_NAME, ID_TOKEN_STORAGE_KEY, MAX_VERIFIER_LENGTH, MIN_VERIFIER_LENGTH, ORIGINAL_URI_STORAGE_NAME, PKCE_STORAGE_NAME, REFERRER_PATH_STORAGE_KEY, REFRESH_TOKEN_STORAGE_KEY, SHARED_TRANSACTION_STORAGE_NAME, STATE_TOKEN_KEY_NAME, TOKEN_STORAGE_NAME, TRANSACTION_STORAGE_NAME } from '../../constants.js';\nexport { AuthStateManager, INITIAL_AUTH_STATE } from '../../core/AuthStateManager.js';\nexport { createCoreOptionsConstructor } from '../../core/options.js';\nexport { createOktaAuthCore } from '../../core/factory.js';\nexport { mixinCore } from '../../core/mixin.js';\nexport { createCoreStorageManager } from '../../core/storage.js';\nexport { ServiceManager } from '../../core/ServiceManager/browser.js';\nexport { isAuthApiError, isOAuthError } from '../../errors/index.js';\nexport { setRequestHeader } from '../../http/headers.js';\nexport { OktaUserAgent } from '../../http/OktaUserAgent.js';\nexport { get, httpRequest, post } from '../../http/request.js';\nexport { mixinHttp } from '../../http/mixin.js';\nexport { createHttpOptionsConstructor } from '../../http/options.js';\nexport { createTokenAPI } from '../../oidc/factory/api.js';\nexport { createOktaAuthOAuth } from '../../oidc/factory/OktaAuthOAuth.js';\nexport { mixinOAuth } from '../../oidc/mixin/index.js';\nexport { createOAuthStorageManager } from '../../oidc/storage.js';\nexport { buildAuthorizeParams, convertTokenParamsToOAuthParams } from '../../oidc/endpoints/authorize.js';\nexport { postRefreshToken, postToTokenEndpoint } from '../../oidc/endpoints/token.js';\nexport { getKey, getWellKnown } from '../../oidc/endpoints/well-known.js';\nexport { createOAuthOptionsConstructor } from '../../oidc/options/OAuthOptionsConstructor.js';\nexport { isAccessToken, isIDToken, isRefreshToken, isToken } from '../../oidc/types/Token.js';\nexport { EVENT_ADDED, EVENT_ERROR, EVENT_EXPIRED, EVENT_REMOVED, EVENT_RENEWED, EVENT_SET_STORAGE } from '../../oidc/types/TokenManager.js';\nexport { isCustomAuthTransactionMeta, isIdxTransactionMeta, isOAuthTransactionMeta, isPKCETransactionMeta, isTransactionMeta } from '../../oidc/types/Transaction.js';\nexport { TokenManager } from '../../oidc/TokenManager.js';\nexport { createTransactionManager } from '../../oidc/TransactionManager.js';\nexport { addListener, addPostMessageListener, loadFrame, loadPopup, removeListener } from '../../oidc/util/browser.js';\nexport { getDefaultTokenParams } from '../../oidc/util/defaultTokenParams.js';\nexport { isAuthorizationCodeError, isInteractionRequiredError, isRefreshTokenInvalidError } from '../../oidc/util/errors.js';\nexport { getHashOrSearch, hasAuthorizationCode, hasErrorInUrl, hasInteractionCode, hasTokensInHash, isCodeFlow, isInteractionRequired, isLoginRedirect, isRedirectUri } from '../../oidc/util/loginRedirect.js';\nexport { generateNonce, generateState, getOAuthBaseUrl, getOAuthDomain, getOAuthUrls } from '../../oidc/util/oauth.js';\nexport { createOAuthMeta } from '../../oidc/util/oauthMeta.js';\nexport { default as pkce } from '../../oidc/util/pkce.js';\nexport { assertPKCESupport, preparePKCE, prepareTokenParams, validateCodeChallengeMethod } from '../../oidc/util/prepareTokenParams.js';\nexport { isRefreshTokenError, isSameRefreshToken } from '../../oidc/util/refreshToken.js';\nexport { urlParamsToObject } from '../../oidc/util/urlParams.js';\nexport { validateClaims } from '../../oidc/util/validateClaims.js';\nexport { validateToken } from '../../oidc/util/validateToken.js';\nexport { decodeToken } from '../../oidc/decodeToken.js';\nexport { revokeToken } from '../../oidc/revokeToken.js';\nexport { renewToken } from '../../oidc/renewToken.js';\nexport { renewTokensWithRefresh } from '../../oidc/renewTokensWithRefresh.js';\nexport { renewTokens } from '../../oidc/renewTokens.js';\nexport { verifyToken } from '../../oidc/verifyToken.js';\nexport { getUserInfo } from '../../oidc/getUserInfo.js';\nexport { handleOAuthResponse } from '../../oidc/handleOAuthResponse.js';\nexport { exchangeCodeForTokens } from '../../oidc/exchangeCodeForTokens.js';\nexport { getToken } from '../../oidc/getToken.js';\nexport { getWithoutPrompt } from '../../oidc/getWithoutPrompt.js';\nexport { getWithPopup } from '../../oidc/getWithPopup.js';\nexport { getWithRedirect } from '../../oidc/getWithRedirect.js';\nexport { parseFromUrl } from '../../oidc/parseFromUrl.js';\nexport { closeSession, getSession, refreshSession, sessionExists, setCookieAndRedirect } from '../../session/api.js';\nexport { createSessionApi } from '../../session/factory.js';\nexport { mixinSession } from '../../session/mixin.js';\nexport { createStorageOptionsConstructor } from '../../storage/options/StorageOptionsConstructor.js';\nexport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../../storage/BaseStorageManager.js';\nexport { mixinStorage } from '../../storage/mixin.js';\nexport { SavedObject } from '../../storage/SavedObject.js';\nexport { deprecate, deprecateWrap, getConsole, getNativeConsole, warn } from '../../util/console.js';\nexport { delay, genRandomString, isoToUTCString, split2 } from '../../util/misc.js';\nexport { bind, clone, extend, find, getLink, omit, removeNils } from '../../util/object.js';\nexport { PromiseQueue } from '../../util/PromiseQueue.js';\nexport { isFunction, isNumber, isObject, isPromise, isString } from '../../util/types.js';\nexport { isAbsoluteUrl, removeTrailingSlash, toAbsoluteUrl, toQueryString, toRelativeUrl } from '../../util/url.js';\nexport { default as AuthApiError } from '../../errors/AuthApiError.js';\nexport { default as AuthPollStopError } from '../../errors/AuthPollStopError.js';\nexport { default as AuthSdkError } from '../../errors/AuthSdkError.js';\nexport { default as OAuthError } from '../../errors/OAuthError.js';\nexport { default as EmailTransaction } from '../../myaccount/transactions/EmailTransaction.js';\nexport { default as EmailStatusTransaction } from '../../myaccount/transactions/EmailStatusTransaction.js';\nexport { default as EmailChallengeTransaction } from '../../myaccount/transactions/EmailChallengeTransaction.js';\nexport { default as PhoneTransaction } from '../../myaccount/transactions/PhoneTransaction.js';\nexport { default as ProfileTransaction } from '../../myaccount/transactions/ProfileTransaction.js';\nexport { default as ProfileSchemaTransaction } from '../../myaccount/transactions/ProfileSchemaTransaction.js';\nexport { default as BaseTransaction } from '../../myaccount/transactions/Base.js';\nconst OptionsConstructor = createIdxOptionsConstructor();\nconst StorageManager = createIdxStorageManager();\nconst TransactionManager = createIdxTransactionManager();\nconst WithIdx = createOktaAuthIdx(StorageManager, OptionsConstructor, TransactionManager);\nconst WithMyAccount = mixinMyAccount(WithIdx);\nconst WithAuthn = mixinAuthn(WithMyAccount);\n\nclass OktaAuth extends WithAuthn {\n  constructor(options) {\n    super(options);\n  }\n\n}\n\nexport { OktaAuth, OktaAuth as default }; //# sourceMappingURL=default.js.map","map":null,"metadata":{},"sourceType":"module"}