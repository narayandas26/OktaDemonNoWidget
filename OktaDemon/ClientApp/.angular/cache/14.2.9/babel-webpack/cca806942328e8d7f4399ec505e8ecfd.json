{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Authenticator } from './Authenticator.js';\n\nclass OktaPassword extends Authenticator {\n  canVerify(values) {\n    return !!(values.credentials || values.password || values.passcode);\n  }\n\n  mapCredentials(values) {\n    const {\n      credentials,\n      password,\n      passcode\n    } = values;\n\n    if (!credentials && !password && !passcode) {\n      return;\n    }\n\n    return credentials || {\n      passcode: passcode || password\n    };\n  }\n\n  getInputs(idxRemediationValue) {\n    var _a;\n\n    return Object.assign(Object.assign({}, (_a = idxRemediationValue.form) === null || _a === void 0 ? void 0 : _a.value[0]), {\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required\n    });\n  }\n\n}\n\nexport { OktaPassword }; //# sourceMappingURL=OktaPassword.js.map","map":null,"metadata":{},"sourceType":"module"}