{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { sendRequest } from './request.js';\n\nconst getPhones = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (oktaAuth, options) {\n    const transaction = yield sendRequest(oktaAuth, {\n      url: '/idp/myaccount/phones',\n      method: 'GET',\n      accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n      transactionClassName: 'PhoneTransaction'\n    });\n    return transaction;\n  });\n\n  return function getPhones(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconst getPhone = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      accessToken,\n      id\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/phones/${id}`,\n      method: 'GET',\n      accessToken,\n      transactionClassName: 'PhoneTransaction'\n    });\n    return transaction;\n  });\n\n  return function getPhone(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nconst addPhone = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      accessToken,\n      payload\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: '/idp/myaccount/phones',\n      method: 'POST',\n      payload,\n      accessToken,\n      transactionClassName: 'PhoneTransaction'\n    });\n    return transaction;\n  });\n\n  return function addPhone(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nconst deletePhone = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      id,\n      accessToken\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/phones/${id}`,\n      method: 'DELETE',\n      accessToken\n    });\n    return transaction;\n  });\n\n  return function deletePhone(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nconst sendPhoneChallenge = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      accessToken,\n      id,\n      payload\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/phones/${id}/challenge`,\n      method: 'POST',\n      payload,\n      accessToken\n    });\n    return transaction;\n  });\n\n  return function sendPhoneChallenge(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nconst verifyPhoneChallenge = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      id,\n      payload,\n      accessToken\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/phones/${id}/verify`,\n      method: 'POST',\n      payload,\n      accessToken\n    });\n    return transaction;\n  });\n\n  return function verifyPhoneChallenge(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nexport { addPhone, deletePhone, getPhone, getPhones, sendPhoneChallenge, verifyPhoneChallenge };","map":{"version":3,"names":["sendRequest","getPhones","oktaAuth","options","transaction","url","method","accessToken","transactionClassName","getPhone","id","addPhone","payload","deletePhone","sendPhoneChallenge","verifyPhoneChallenge"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/myaccount/phoneApi.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { sendRequest } from './request.js';\n\nconst getPhones = async (oktaAuth, options) => {\n    const transaction = await sendRequest(oktaAuth, {\n        url: '/idp/myaccount/phones',\n        method: 'GET',\n        accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n        transactionClassName: 'PhoneTransaction'\n    });\n    return transaction;\n};\nconst getPhone = async (oktaAuth, options) => {\n    const { accessToken, id } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/phones/${id}`,\n        method: 'GET',\n        accessToken,\n        transactionClassName: 'PhoneTransaction'\n    });\n    return transaction;\n};\nconst addPhone = async (oktaAuth, options) => {\n    const { accessToken, payload } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: '/idp/myaccount/phones',\n        method: 'POST',\n        payload,\n        accessToken,\n        transactionClassName: 'PhoneTransaction'\n    });\n    return transaction;\n};\nconst deletePhone = async (oktaAuth, options) => {\n    const { id, accessToken } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/phones/${id}`,\n        method: 'DELETE',\n        accessToken,\n    });\n    return transaction;\n};\nconst sendPhoneChallenge = async (oktaAuth, options) => {\n    const { accessToken, id, payload } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/phones/${id}/challenge`,\n        method: 'POST',\n        payload,\n        accessToken\n    });\n    return transaction;\n};\nconst verifyPhoneChallenge = async (oktaAuth, options) => {\n    const { id, payload, accessToken } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/phones/${id}/verify`,\n        method: 'POST',\n        payload,\n        accessToken\n    });\n    return transaction;\n};\n\nexport { addPhone, deletePhone, getPhone, getPhones, sendPhoneChallenge, verifyPhoneChallenge };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}