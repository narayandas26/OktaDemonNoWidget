{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { addPostMessageListener, loadFrame } from './util/browser.js';\nimport { getOAuthUrls } from './util/oauth.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { prepareTokenParams } from './util/prepareTokenParams.js';\nimport { buildAuthorizeParams } from './endpoints/authorize.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\n\nfunction getToken(sdk, options) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n  const popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n  return prepareTokenParams(sdk, options).then(function (tokenParams) {\n    var sessionTokenOverrides = {\n      prompt: 'none',\n      responseMode: 'okta_post_message',\n      display: null\n    };\n    var idpOverrides = {\n      display: 'popup'\n    };\n\n    if (options.sessionToken) {\n      Object.assign(tokenParams, sessionTokenOverrides);\n    } else if (options.idp) {\n      Object.assign(tokenParams, idpOverrides);\n    }\n\n    var requestUrl, endpoint, urls;\n    urls = getOAuthUrls(sdk, tokenParams);\n    endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n    requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n    var flowType;\n\n    if (tokenParams.sessionToken || tokenParams.display === null) {\n      flowType = 'IFRAME';\n    } else if (tokenParams.display === 'popup') {\n      flowType = 'POPUP';\n    } else {\n      flowType = 'IMPLICIT';\n    }\n\n    switch (flowType) {\n      case 'IFRAME':\n        var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n        var iframeEl = loadFrame(requestUrl);\n        return iframePromise.then(function (res) {\n          return handleOAuthResponse(sdk, tokenParams, res, urls);\n        }).finally(function () {\n          var _a;\n\n          if (document.body.contains(iframeEl)) {\n            (_a = iframeEl.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(iframeEl);\n          }\n        });\n\n      case 'POPUP':\n        var oauthPromise;\n\n        if (tokenParams.responseMode === 'okta_post_message') {\n          if (!sdk.features.isPopupPostMessageSupported()) {\n            throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n          }\n\n          oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n        }\n\n        if (popupWindow) {\n          popupWindow.location.assign(requestUrl);\n        }\n\n        var popupPromise = new Promise(function (resolve, reject) {\n          var closePoller = setInterval(function () {\n            if (!popupWindow || popupWindow.closed) {\n              clearInterval(closePoller);\n              reject(new AuthSdkError('Unable to parse OAuth flow response'));\n            }\n          }, 100);\n          oauthPromise.then(function (res) {\n            clearInterval(closePoller);\n            resolve(res);\n          }).catch(function (err) {\n            clearInterval(closePoller);\n            reject(err);\n          });\n        });\n        return popupPromise.then(function (res) {\n          return handleOAuthResponse(sdk, tokenParams, res, urls);\n        }).finally(function () {\n          if (popupWindow && !popupWindow.closed) {\n            popupWindow.close();\n          }\n        });\n\n      default:\n        throw new AuthSdkError('The full page redirect flow is not supported');\n    }\n  });\n}\n\nexport { getToken };","map":{"version":3,"names":["addPostMessageListener","loadFrame","getOAuthUrls","AuthSdkError","prepareTokenParams","buildAuthorizeParams","handleOAuthResponse","getToken","sdk","options","arguments","length","Promise","reject","popupWindow","undefined","then","tokenParams","sessionTokenOverrides","prompt","responseMode","display","idpOverrides","sessionToken","Object","assign","idp","requestUrl","endpoint","urls","codeVerifier","tokenUrl","authorizeUrl","flowType","iframePromise","timeout","state","iframeEl","res","finally","_a","document","body","contains","parentElement","removeChild","oauthPromise","features","isPopupPostMessageSupported","location","popupPromise","resolve","closePoller","setInterval","closed","clearInterval","catch","err","close"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/oidc/getToken.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { addPostMessageListener, loadFrame } from './util/browser.js';\nimport { getOAuthUrls } from './util/oauth.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { prepareTokenParams } from './util/prepareTokenParams.js';\nimport { buildAuthorizeParams } from './endpoints/authorize.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\n\nfunction getToken(sdk, options) {\n    if (arguments.length > 2) {\n        return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n    }\n    options = options || {};\n    const popupWindow = options.popupWindow;\n    options.popupWindow = undefined;\n    return prepareTokenParams(sdk, options)\n        .then(function (tokenParams) {\n        var sessionTokenOverrides = {\n            prompt: 'none',\n            responseMode: 'okta_post_message',\n            display: null\n        };\n        var idpOverrides = {\n            display: 'popup'\n        };\n        if (options.sessionToken) {\n            Object.assign(tokenParams, sessionTokenOverrides);\n        }\n        else if (options.idp) {\n            Object.assign(tokenParams, idpOverrides);\n        }\n        var requestUrl, endpoint, urls;\n        urls = getOAuthUrls(sdk, tokenParams);\n        endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n        requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n        var flowType;\n        if (tokenParams.sessionToken || tokenParams.display === null) {\n            flowType = 'IFRAME';\n        }\n        else if (tokenParams.display === 'popup') {\n            flowType = 'POPUP';\n        }\n        else {\n            flowType = 'IMPLICIT';\n        }\n        switch (flowType) {\n            case 'IFRAME':\n                var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n                var iframeEl = loadFrame(requestUrl);\n                return iframePromise\n                    .then(function (res) {\n                    return handleOAuthResponse(sdk, tokenParams, res, urls);\n                })\n                    .finally(function () {\n                    var _a;\n                    if (document.body.contains(iframeEl)) {\n                        (_a = iframeEl.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(iframeEl);\n                    }\n                });\n            case 'POPUP':\n                var oauthPromise;\n                if (tokenParams.responseMode === 'okta_post_message') {\n                    if (!sdk.features.isPopupPostMessageSupported()) {\n                        throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n                    }\n                    oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n                }\n                if (popupWindow) {\n                    popupWindow.location.assign(requestUrl);\n                }\n                var popupPromise = new Promise(function (resolve, reject) {\n                    var closePoller = setInterval(function () {\n                        if (!popupWindow || popupWindow.closed) {\n                            clearInterval(closePoller);\n                            reject(new AuthSdkError('Unable to parse OAuth flow response'));\n                        }\n                    }, 100);\n                    oauthPromise\n                        .then(function (res) {\n                        clearInterval(closePoller);\n                        resolve(res);\n                    })\n                        .catch(function (err) {\n                        clearInterval(closePoller);\n                        reject(err);\n                    });\n                });\n                return popupPromise\n                    .then(function (res) {\n                    return handleOAuthResponse(sdk, tokenParams, res, urls);\n                })\n                    .finally(function () {\n                    if (popupWindow && !popupWindow.closed) {\n                        popupWindow.close();\n                    }\n                });\n            default:\n                throw new AuthSdkError('The full page redirect flow is not supported');\n        }\n    });\n}\n\nexport { getToken };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}