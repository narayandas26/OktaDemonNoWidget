{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { isString } from '../util/types.js';\nimport { isInteractionRequiredError } from './util/errors.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { urlParamsToObject } from './util/urlParams.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nfunction getResponseMode(sdk) {\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nfunction parseOAuthResponseFromUrl(sdk, options) {\n  options = options || {};\n\n  if (isString(options)) {\n    options = {\n      url: options\n    };\n  } else {\n    options = options;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nfunction cleanOAuthResponseFromUrl(sdk, options) {\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nfunction parseFromUrl(_x, _x2) {\n  return _parseFromUrl.apply(this, arguments);\n}\n\nfunction _parseFromUrl() {\n  _parseFromUrl = _asyncToGenerator(function* (sdk, options) {\n    options = options || {};\n\n    if (isString(options)) {\n      options = {\n        url: options\n      };\n    } else {\n      options = options;\n    }\n\n    const res = parseOAuthResponseFromUrl(sdk, options);\n    const state = res.state;\n    const oauthParams = sdk.transactionManager.load({\n      state\n    });\n\n    if (!oauthParams) {\n      if (sdk.options.pkce) {\n        throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n      }\n\n      throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n    }\n\n    const urls = oauthParams.urls;\n    delete oauthParams.urls;\n\n    if (!options.url) {\n      cleanOAuthResponseFromUrl(sdk, options);\n    }\n\n    return handleOAuthResponse(sdk, oauthParams, res, urls).catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n\n      throw err;\n    }).then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n  });\n  return _parseFromUrl.apply(this, arguments);\n}\n\nexport { cleanOAuthResponseFromUrl, getResponseMode, parseFromUrl, parseOAuthResponseFromUrl };","map":{"version":3,"names":["AuthSdkError","isString","isInteractionRequiredError","urlParamsToObject","handleOAuthResponse","removeHash","sdk","nativeHistory","token","parseFromUrl","_getHistory","nativeDoc","_getDocument","nativeLoc","_getLocation","replaceState","title","pathname","search","hash","removeSearch","getResponseMode","defaultResponseMode","options","pkce","responseMode","parseOAuthResponseFromUrl","url","paramStr","substring","indexOf","cleanOAuthResponseFromUrl","res","state","oauthParams","transactionManager","load","undefined","urls","catch","err","clear","then"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/oidc/parseFromUrl.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { isString } from '../util/types.js';\nimport { isInteractionRequiredError } from './util/errors.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { urlParamsToObject } from './util/urlParams.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\n\nfunction removeHash(sdk) {\n    var nativeHistory = sdk.token.parseFromUrl._getHistory();\n    var nativeDoc = sdk.token.parseFromUrl._getDocument();\n    var nativeLoc = sdk.token.parseFromUrl._getLocation();\n    if (nativeHistory && nativeHistory.replaceState) {\n        nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n    }\n    else {\n        nativeLoc.hash = '';\n    }\n}\nfunction removeSearch(sdk) {\n    var nativeHistory = sdk.token.parseFromUrl._getHistory();\n    var nativeDoc = sdk.token.parseFromUrl._getDocument();\n    var nativeLoc = sdk.token.parseFromUrl._getLocation();\n    if (nativeHistory && nativeHistory.replaceState) {\n        nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n    }\n    else {\n        nativeLoc.search = '';\n    }\n}\nfunction getResponseMode(sdk) {\n    var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n    var responseMode = sdk.options.responseMode || defaultResponseMode;\n    return responseMode;\n}\nfunction parseOAuthResponseFromUrl(sdk, options) {\n    options = options || {};\n    if (isString(options)) {\n        options = { url: options };\n    }\n    else {\n        options = options;\n    }\n    var url = options.url;\n    var responseMode = options.responseMode || getResponseMode(sdk);\n    var nativeLoc = sdk.token.parseFromUrl._getLocation();\n    var paramStr;\n    if (responseMode === 'query') {\n        paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n    }\n    else {\n        paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n    }\n    if (!paramStr) {\n        throw new AuthSdkError('Unable to parse a token from the url');\n    }\n    return urlParamsToObject(paramStr);\n}\nfunction cleanOAuthResponseFromUrl(sdk, options) {\n    const responseMode = options.responseMode || getResponseMode(sdk);\n    responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\nasync function parseFromUrl(sdk, options) {\n    options = options || {};\n    if (isString(options)) {\n        options = { url: options };\n    }\n    else {\n        options = options;\n    }\n    const res = parseOAuthResponseFromUrl(sdk, options);\n    const state = res.state;\n    const oauthParams = sdk.transactionManager.load({\n        state\n    });\n    if (!oauthParams) {\n        if (sdk.options.pkce) {\n            throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n        }\n        throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n    }\n    const urls = oauthParams.urls;\n    delete oauthParams.urls;\n    if (!options.url) {\n        cleanOAuthResponseFromUrl(sdk, options);\n    }\n    return handleOAuthResponse(sdk, oauthParams, res, urls)\n        .catch(err => {\n        if (!isInteractionRequiredError(err)) {\n            sdk.transactionManager.clear({\n                state\n            });\n        }\n        throw err;\n    })\n        .then(res => {\n        sdk.transactionManager.clear({\n            state\n        });\n        return res;\n    });\n}\n\nexport { cleanOAuthResponseFromUrl, getResponseMode, parseFromUrl, parseOAuthResponseFromUrl };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}