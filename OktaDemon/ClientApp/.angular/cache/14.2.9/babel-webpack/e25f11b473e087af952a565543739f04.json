{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { PromiseQueue } from '../../util/PromiseQueue.js';\nimport { decodeToken } from '../decodeToken.js';\nimport { exchangeCodeForTokens } from '../exchangeCodeForTokens.js';\nimport { getUserInfo } from '../getUserInfo.js';\nimport { getWithoutPrompt } from '../getWithoutPrompt.js';\nimport { getWithPopup } from '../getWithPopup.js';\nimport { getWithRedirect } from '../getWithRedirect.js';\nimport { parseFromUrl } from '../parseFromUrl.js';\nimport { renewToken } from '../renewToken.js';\nimport { renewTokens } from '../renewTokens.js';\nimport { renewTokensWithRefresh } from '../renewTokensWithRefresh.js';\nimport { revokeToken } from '../revokeToken.js';\nimport { isLoginRedirect } from '../util/loginRedirect.js';\nimport { prepareTokenParams } from '../util/prepareTokenParams.js';\nimport { verifyToken } from '../verifyToken.js';\n\nfunction createTokenAPI(sdk, queue) {\n  const useQueue = method => {\n    return PromiseQueue.prototype.push.bind(queue, method, null);\n  };\n\n  const getWithRedirectFn = useQueue(getWithRedirect.bind(null, sdk));\n  const getWithRedirectApi = Object.assign(getWithRedirectFn, {\n    _setLocation: url => {\n      if (sdk.options.setLocation) {\n        sdk.options.setLocation(url);\n      } else {\n        window.location = url;\n      }\n    }\n  });\n  const parseFromUrlFn = useQueue(parseFromUrl.bind(null, sdk));\n  const parseFromUrlApi = Object.assign(parseFromUrlFn, {\n    _getHistory: function () {\n      return window.history;\n    },\n    _getLocation: function () {\n      return window.location;\n    },\n    _getDocument: function () {\n      return window.document;\n    }\n  });\n  const token = {\n    prepareTokenParams: prepareTokenParams.bind(null, sdk),\n    exchangeCodeForTokens: exchangeCodeForTokens.bind(null, sdk),\n    getWithoutPrompt: getWithoutPrompt.bind(null, sdk),\n    getWithPopup: getWithPopup.bind(null, sdk),\n    getWithRedirect: getWithRedirectApi,\n    parseFromUrl: parseFromUrlApi,\n    decode: decodeToken,\n    revoke: revokeToken.bind(null, sdk),\n    renew: renewToken.bind(null, sdk),\n    renewTokensWithRefresh: renewTokensWithRefresh.bind(null, sdk),\n    renewTokens: renewTokens.bind(null, sdk),\n    getUserInfo: (accessTokenObject, idTokenObject) => {\n      return getUserInfo(sdk, accessTokenObject, idTokenObject);\n    },\n    verify: verifyToken.bind(null, sdk),\n    isLoginRedirect: isLoginRedirect.bind(null, sdk)\n  };\n  const toWrap = ['getWithoutPrompt', 'getWithPopup', 'revoke', 'renew', 'renewTokensWithRefresh', 'renewTokens'];\n  toWrap.forEach(key => {\n    token[key] = useQueue(token[key]);\n  });\n  return token;\n}\n\nexport { createTokenAPI };","map":{"version":3,"names":["PromiseQueue","decodeToken","exchangeCodeForTokens","getUserInfo","getWithoutPrompt","getWithPopup","getWithRedirect","parseFromUrl","renewToken","renewTokens","renewTokensWithRefresh","revokeToken","isLoginRedirect","prepareTokenParams","verifyToken","createTokenAPI","sdk","queue","useQueue","method","prototype","push","bind","getWithRedirectFn","getWithRedirectApi","Object","assign","_setLocation","url","options","setLocation","window","location","parseFromUrlFn","parseFromUrlApi","_getHistory","history","_getLocation","_getDocument","document","token","decode","revoke","renew","accessTokenObject","idTokenObject","verify","toWrap","forEach","key"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/oidc/factory/api.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { PromiseQueue } from '../../util/PromiseQueue.js';\nimport { decodeToken } from '../decodeToken.js';\nimport { exchangeCodeForTokens } from '../exchangeCodeForTokens.js';\nimport { getUserInfo } from '../getUserInfo.js';\nimport { getWithoutPrompt } from '../getWithoutPrompt.js';\nimport { getWithPopup } from '../getWithPopup.js';\nimport { getWithRedirect } from '../getWithRedirect.js';\nimport { parseFromUrl } from '../parseFromUrl.js';\nimport { renewToken } from '../renewToken.js';\nimport { renewTokens } from '../renewTokens.js';\nimport { renewTokensWithRefresh } from '../renewTokensWithRefresh.js';\nimport { revokeToken } from '../revokeToken.js';\nimport { isLoginRedirect } from '../util/loginRedirect.js';\nimport { prepareTokenParams } from '../util/prepareTokenParams.js';\nimport { verifyToken } from '../verifyToken.js';\n\nfunction createTokenAPI(sdk, queue) {\n    const useQueue = (method) => {\n        return PromiseQueue.prototype.push.bind(queue, method, null);\n    };\n    const getWithRedirectFn = useQueue(getWithRedirect.bind(null, sdk));\n    const getWithRedirectApi = Object.assign(getWithRedirectFn, {\n        _setLocation: (url) => {\n            if (sdk.options.setLocation) {\n                sdk.options.setLocation(url);\n            }\n            else {\n                window.location = url;\n            }\n        }\n    });\n    const parseFromUrlFn = useQueue(parseFromUrl.bind(null, sdk));\n    const parseFromUrlApi = Object.assign(parseFromUrlFn, {\n        _getHistory: function () {\n            return window.history;\n        },\n        _getLocation: function () {\n            return window.location;\n        },\n        _getDocument: function () {\n            return window.document;\n        }\n    });\n    const token = {\n        prepareTokenParams: prepareTokenParams.bind(null, sdk),\n        exchangeCodeForTokens: exchangeCodeForTokens.bind(null, sdk),\n        getWithoutPrompt: getWithoutPrompt.bind(null, sdk),\n        getWithPopup: getWithPopup.bind(null, sdk),\n        getWithRedirect: getWithRedirectApi,\n        parseFromUrl: parseFromUrlApi,\n        decode: decodeToken,\n        revoke: revokeToken.bind(null, sdk),\n        renew: renewToken.bind(null, sdk),\n        renewTokensWithRefresh: renewTokensWithRefresh.bind(null, sdk),\n        renewTokens: renewTokens.bind(null, sdk),\n        getUserInfo: (accessTokenObject, idTokenObject) => {\n            return getUserInfo(sdk, accessTokenObject, idTokenObject);\n        },\n        verify: verifyToken.bind(null, sdk),\n        isLoginRedirect: isLoginRedirect.bind(null, sdk)\n    };\n    const toWrap = [\n        'getWithoutPrompt',\n        'getWithPopup',\n        'revoke',\n        'renew',\n        'renewTokensWithRefresh',\n        'renewTokens'\n    ];\n    toWrap.forEach(key => {\n        token[key] = useQueue(token[key]);\n    });\n    return token;\n}\n\nexport { createTokenAPI };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}