{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport crossFetch from 'cross-fetch';\nconst appJsonContentTypeRegex = /application\\/\\w*\\+?json/;\n\nfunction readData(response) {\n  if (response.headers.get('Content-Type') && response.headers.get('Content-Type').toLowerCase().indexOf('application/json') >= 0) {\n    return response.json().catch(e => {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status, data, response) {\n  const isObject = typeof data === 'object';\n  const headers = {};\n\n  for (const pair of response.headers.entries()) {\n    headers[pair[0]] = pair[1];\n  }\n\n  const result = {\n    responseText: isObject ? JSON.stringify(data) : data,\n    status: status,\n    headers\n  };\n\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data;\n  }\n\n  return result;\n}\n\nfunction fetchRequest(method, url, args) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = headers['Content-Type'] || headers['content-type'] || '';\n\n  if (body && typeof body !== 'string') {\n    if (appJsonContentTypeRegex.test(contentType)) {\n      body = JSON.stringify(body);\n    } else if (contentType === 'application/x-www-form-urlencoded') {\n      body = Object.entries(body).map(([param, value]) => `${param}=${encodeURIComponent(value)}`).join('&');\n    }\n  }\n\n  var fetch = window.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function (response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response).then(data => {\n      return formatResult(status, data, response);\n    }).then(result => {\n      var _a;\n\n      if (error || ((_a = result.responseJSON) === null || _a === void 0 ? void 0 : _a.error)) {\n        throw result;\n      }\n\n      return result;\n    });\n  });\n}\n\nexport { fetchRequest as default };","map":{"version":3,"names":["crossFetch","appJsonContentTypeRegex","readData","response","headers","get","toLowerCase","indexOf","json","catch","e","error","errorSummary","text","formatResult","status","data","isObject","pair","entries","result","responseText","JSON","stringify","responseType","responseJSON","fetchRequest","method","url","args","body","contentType","test","Object","map","param","value","encodeURIComponent","join","fetch","window","fetchPromise","credentials","withCredentials","finally","Promise","resolve","then","ok","_a","default"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/fetch/fetchRequest.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport crossFetch from 'cross-fetch';\n\nconst appJsonContentTypeRegex = /application\\/\\w*\\+?json/;\nfunction readData(response) {\n    if (response.headers.get('Content-Type') &&\n        response.headers.get('Content-Type').toLowerCase().indexOf('application/json') >= 0) {\n        return response.json()\n            .catch(e => {\n            return {\n                error: e,\n                errorSummary: 'Could not parse server response'\n            };\n        });\n    }\n    else {\n        return response.text();\n    }\n}\nfunction formatResult(status, data, response) {\n    const isObject = typeof data === 'object';\n    const headers = {};\n    for (const pair of response.headers.entries()) {\n        headers[pair[0]] = pair[1];\n    }\n    const result = {\n        responseText: isObject ? JSON.stringify(data) : data,\n        status: status,\n        headers\n    };\n    if (isObject) {\n        result.responseType = 'json';\n        result.responseJSON = data;\n    }\n    return result;\n}\nfunction fetchRequest(method, url, args) {\n    var body = args.data;\n    var headers = args.headers || {};\n    var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n    if (body && typeof body !== 'string') {\n        if (appJsonContentTypeRegex.test(contentType)) {\n            body = JSON.stringify(body);\n        }\n        else if (contentType === 'application/x-www-form-urlencoded') {\n            body = Object.entries(body)\n                .map(([param, value]) => `${param}=${encodeURIComponent(value)}`)\n                .join('&');\n        }\n    }\n    var fetch = window.fetch || crossFetch;\n    var fetchPromise = fetch(url, {\n        method: method,\n        headers: args.headers,\n        body: body,\n        credentials: args.withCredentials ? 'include' : 'omit'\n    });\n    if (!fetchPromise.finally) {\n        fetchPromise = Promise.resolve(fetchPromise);\n    }\n    return fetchPromise.then(function (response) {\n        var error = !response.ok;\n        var status = response.status;\n        return readData(response)\n            .then(data => {\n            return formatResult(status, data, response);\n        })\n            .then(result => {\n            var _a;\n            if (error || ((_a = result.responseJSON) === null || _a === void 0 ? void 0 : _a.error)) {\n                throw result;\n            }\n            return result;\n        });\n    });\n}\n\nexport { fetchRequest as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}