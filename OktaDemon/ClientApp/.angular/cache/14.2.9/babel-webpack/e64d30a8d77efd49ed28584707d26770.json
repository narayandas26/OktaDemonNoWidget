{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { EVENT_EXPIRED } from '../oidc/types/TokenManager.js';\nimport { isBrowser } from '../features.js';\n\nclass AutoRenewService {\n  constructor(tokenManager, options = {}) {\n    this.started = false;\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n\n  shouldThrottleRenew() {\n    let res = false;\n    this.renewTimeQueue.push(Date.now());\n\n    if (this.renewTimeQueue.length >= 10) {\n      const firstTime = this.renewTimeQueue.shift();\n      const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n      res = lastTime - firstTime < 30 * 1000;\n    }\n\n    return res;\n  }\n\n  requiresLeadership() {\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  onTokenExpiredHandler(key) {\n    if (this.options.autoRenew) {\n      if (this.shouldThrottleRenew()) {\n        const error = new AuthSdkError('Too many token renew requests');\n        this.tokenManager.emitError(error);\n      } else {\n        this.tokenManager.renew(key).catch(() => {});\n      }\n    } else if (this.options.autoRemove) {\n      this.tokenManager.remove(key);\n    }\n  }\n\n  canStart() {\n    return !!this.options.autoRenew || !!this.options.autoRemove;\n  }\n\n  start() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.canStart()) {\n        yield _this.stop();\n\n        _this.tokenManager.on(EVENT_EXPIRED, _this.onTokenExpiredHandler);\n\n        _this.started = true;\n      }\n    })();\n  }\n\n  stop() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.started) {\n        _this2.tokenManager.off(EVENT_EXPIRED, _this2.onTokenExpiredHandler);\n\n        _this2.renewTimeQueue = [];\n        _this2.started = false;\n      }\n    })();\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n}\n\nexport { AutoRenewService };","map":{"version":3,"names":["AuthSdkError","EVENT_EXPIRED","isBrowser","AutoRenewService","constructor","tokenManager","options","started","renewTimeQueue","onTokenExpiredHandler","bind","shouldThrottleRenew","res","push","Date","now","length","firstTime","shift","lastTime","requiresLeadership","syncStorage","key","autoRenew","error","emitError","renew","catch","autoRemove","remove","canStart","start","stop","on","off","isStarted"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/services/AutoRenewService.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { EVENT_EXPIRED } from '../oidc/types/TokenManager.js';\nimport { isBrowser } from '../features.js';\n\nclass AutoRenewService {\n    constructor(tokenManager, options = {}) {\n        this.started = false;\n        this.tokenManager = tokenManager;\n        this.options = options;\n        this.renewTimeQueue = [];\n        this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n    }\n    shouldThrottleRenew() {\n        let res = false;\n        this.renewTimeQueue.push(Date.now());\n        if (this.renewTimeQueue.length >= 10) {\n            const firstTime = this.renewTimeQueue.shift();\n            const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n            res = (lastTime - firstTime) < 30 * 1000;\n        }\n        return res;\n    }\n    requiresLeadership() {\n        return !!this.options.syncStorage && isBrowser();\n    }\n    onTokenExpiredHandler(key) {\n        if (this.options.autoRenew) {\n            if (this.shouldThrottleRenew()) {\n                const error = new AuthSdkError('Too many token renew requests');\n                this.tokenManager.emitError(error);\n            }\n            else {\n                this.tokenManager.renew(key).catch(() => { });\n            }\n        }\n        else if (this.options.autoRemove) {\n            this.tokenManager.remove(key);\n        }\n    }\n    canStart() {\n        return (!!this.options.autoRenew || !!this.options.autoRemove);\n    }\n    async start() {\n        if (this.canStart()) {\n            await this.stop();\n            this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n            this.started = true;\n        }\n    }\n    async stop() {\n        if (this.started) {\n            this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n            this.renewTimeQueue = [];\n            this.started = false;\n        }\n    }\n    isStarted() {\n        return this.started;\n    }\n}\n\nexport { AutoRenewService };\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,YAAP,MAAyB,2BAAzB;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAEA,MAAMC,gBAAN,CAAuB;EACnBC,WAAW,CAACC,YAAD,EAAeC,OAAO,GAAG,EAAzB,EAA6B;IACpC,KAAKC,OAAL,GAAe,KAAf;IACA,KAAKF,YAAL,GAAoBA,YAApB;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKE,cAAL,GAAsB,EAAtB;IACA,KAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,CAA7B;EACH;;EACDC,mBAAmB,GAAG;IAClB,IAAIC,GAAG,GAAG,KAAV;IACA,KAAKJ,cAAL,CAAoBK,IAApB,CAAyBC,IAAI,CAACC,GAAL,EAAzB;;IACA,IAAI,KAAKP,cAAL,CAAoBQ,MAApB,IAA8B,EAAlC,EAAsC;MAClC,MAAMC,SAAS,GAAG,KAAKT,cAAL,CAAoBU,KAApB,EAAlB;MACA,MAAMC,QAAQ,GAAG,KAAKX,cAAL,CAAoB,KAAKA,cAAL,CAAoBQ,MAApB,GAA6B,CAAjD,CAAjB;MACAJ,GAAG,GAAIO,QAAQ,GAAGF,SAAZ,GAAyB,KAAK,IAApC;IACH;;IACD,OAAOL,GAAP;EACH;;EACDQ,kBAAkB,GAAG;IACjB,OAAO,CAAC,CAAC,KAAKd,OAAL,CAAae,WAAf,IAA8BnB,SAAS,EAA9C;EACH;;EACDO,qBAAqB,CAACa,GAAD,EAAM;IACvB,IAAI,KAAKhB,OAAL,CAAaiB,SAAjB,EAA4B;MACxB,IAAI,KAAKZ,mBAAL,EAAJ,EAAgC;QAC5B,MAAMa,KAAK,GAAG,IAAIxB,YAAJ,CAAiB,+BAAjB,CAAd;QACA,KAAKK,YAAL,CAAkBoB,SAAlB,CAA4BD,KAA5B;MACH,CAHD,MAIK;QACD,KAAKnB,YAAL,CAAkBqB,KAAlB,CAAwBJ,GAAxB,EAA6BK,KAA7B,CAAmC,MAAM,CAAG,CAA5C;MACH;IACJ,CARD,MASK,IAAI,KAAKrB,OAAL,CAAasB,UAAjB,EAA6B;MAC9B,KAAKvB,YAAL,CAAkBwB,MAAlB,CAAyBP,GAAzB;IACH;EACJ;;EACDQ,QAAQ,GAAG;IACP,OAAQ,CAAC,CAAC,KAAKxB,OAAL,CAAaiB,SAAf,IAA4B,CAAC,CAAC,KAAKjB,OAAL,CAAasB,UAAnD;EACH;;EACKG,KAAK,GAAG;IAAA;;IAAA;MACV,IAAI,KAAI,CAACD,QAAL,EAAJ,EAAqB;QACjB,MAAM,KAAI,CAACE,IAAL,EAAN;;QACA,KAAI,CAAC3B,YAAL,CAAkB4B,EAAlB,CAAqBhC,aAArB,EAAoC,KAAI,CAACQ,qBAAzC;;QACA,KAAI,CAACF,OAAL,GAAe,IAAf;MACH;IALS;EAMb;;EACKyB,IAAI,GAAG;IAAA;;IAAA;MACT,IAAI,MAAI,CAACzB,OAAT,EAAkB;QACd,MAAI,CAACF,YAAL,CAAkB6B,GAAlB,CAAsBjC,aAAtB,EAAqC,MAAI,CAACQ,qBAA1C;;QACA,MAAI,CAACD,cAAL,GAAsB,EAAtB;QACA,MAAI,CAACD,OAAL,GAAe,KAAf;MACH;IALQ;EAMZ;;EACD4B,SAAS,GAAG;IACR,OAAO,KAAK5B,OAAZ;EACH;;AAtDkB;;AAyDvB,SAASJ,gBAAT"},"metadata":{},"sourceType":"module"}