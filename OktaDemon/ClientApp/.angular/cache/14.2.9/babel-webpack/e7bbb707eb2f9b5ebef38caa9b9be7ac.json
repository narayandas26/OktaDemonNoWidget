{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { warn } from '../util/console.js';\nimport { isIE11OrLess } from '../features.js';\nvar storageUtil = {\n  browserHasLocalStorage: function () {\n    try {\n      var storage = this.getLocalStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n  browserHasSessionStorage: function () {\n    try {\n      var storage = this.getSessionStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n  testStorageType: function (storageType) {\n    var supported = false;\n\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = this.browserHasSessionStorage();\n        break;\n\n      case 'localStorage':\n        supported = this.browserHasLocalStorage();\n        break;\n\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n\n      default:\n        supported = false;\n        break;\n    }\n\n    return supported;\n  },\n  getStorageByType: function (storageType, options) {\n    let storageProvider;\n\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = this.getSessionStorage();\n        break;\n\n      case 'localStorage':\n        storageProvider = this.getLocalStorage();\n        break;\n\n      case 'cookie':\n        storageProvider = this.getCookieStorage(options);\n        break;\n\n      case 'memory':\n        storageProvider = this.getInMemoryStorage();\n        break;\n\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n    }\n\n    return storageProvider;\n  },\n  findStorageType: function (types) {\n    let curType;\n    let nextType;\n    types = types.slice();\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n\n    if (!nextType) {\n      return curType;\n    }\n\n    if (this.testStorageType(curType)) {\n      return curType;\n    }\n\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n    return this.findStorageType(types);\n  },\n  getLocalStorage: function () {\n    if (isIE11OrLess() && !window.onstorage) {\n      window.onstorage = function () {};\n    }\n\n    return localStorage;\n  },\n  getSessionStorage: function () {\n    return sessionStorage;\n  },\n  getCookieStorage: function (options) {\n    const secure = options.secure;\n    const sameSite = options.sameSite;\n    const sessionCookie = options.sessionCookie;\n\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n\n    const storage = {\n      getItem: this.storage.get,\n      setItem: (key, value, expiresAt = '2200-01-01T00:00:00.000Z') => {\n        expiresAt = sessionCookie ? null : expiresAt;\n        this.storage.set(key, value, expiresAt, {\n          secure: secure,\n          sameSite: sameSite\n        });\n      },\n      removeItem: key => {\n        this.storage.delete(key);\n      }\n    };\n\n    if (!options.useSeparateCookies) {\n      return storage;\n    }\n\n    return {\n      getItem: function (key) {\n        var data = storage.getItem();\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key) === 0) {\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]);\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function (key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function (key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      }\n    };\n  },\n  inMemoryStore: {},\n  getInMemoryStorage: function () {\n    return {\n      getItem: key => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      }\n    };\n  },\n  testStorage: function (storage) {\n    var key = 'okta-test-storage';\n\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n  storage: {\n    set: function (name, value, expiresAt, options) {\n      const {\n        sameSite,\n        secure\n      } = options;\n\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n\n      var cookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      if (!!Date.parse(expiresAt)) {\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return this.get(name);\n    },\n    get: function (name) {\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n\n      return Cookies.get(name);\n    },\n    delete: function (name) {\n      return Cookies.remove(name, {\n        path: '/'\n      });\n    }\n  }\n};\nexport { storageUtil as default };","map":{"version":3,"names":["Cookies","AuthSdkError","warn","isIE11OrLess","storageUtil","browserHasLocalStorage","storage","getLocalStorage","testStorage","e","browserHasSessionStorage","getSessionStorage","testStorageType","storageType","supported","getStorageByType","options","storageProvider","getCookieStorage","getInMemoryStorage","findStorageType","types","curType","nextType","slice","shift","length","window","onstorage","localStorage","sessionStorage","secure","sameSite","sessionCookie","getItem","get","setItem","key","value","expiresAt","set","removeItem","delete","useSeparateCookies","data","Object","keys","forEach","k","indexOf","replace","JSON","parse","stringify","existingValues","storageKey","valueToStore","inMemoryStore","name","cookieOptions","path","Date","expires","arguments","remove","default"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/browser/browserStorage.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { warn } from '../util/console.js';\nimport { isIE11OrLess } from '../features.js';\n\nvar storageUtil = {\n    browserHasLocalStorage: function () {\n        try {\n            var storage = this.getLocalStorage();\n            return this.testStorage(storage);\n        }\n        catch (e) {\n            return false;\n        }\n    },\n    browserHasSessionStorage: function () {\n        try {\n            var storage = this.getSessionStorage();\n            return this.testStorage(storage);\n        }\n        catch (e) {\n            return false;\n        }\n    },\n    testStorageType: function (storageType) {\n        var supported = false;\n        switch (storageType) {\n            case 'sessionStorage':\n                supported = this.browserHasSessionStorage();\n                break;\n            case 'localStorage':\n                supported = this.browserHasLocalStorage();\n                break;\n            case 'cookie':\n            case 'memory':\n                supported = true;\n                break;\n            default:\n                supported = false;\n                break;\n        }\n        return supported;\n    },\n    getStorageByType: function (storageType, options) {\n        let storageProvider;\n        switch (storageType) {\n            case 'sessionStorage':\n                storageProvider = this.getSessionStorage();\n                break;\n            case 'localStorage':\n                storageProvider = this.getLocalStorage();\n                break;\n            case 'cookie':\n                storageProvider = this.getCookieStorage(options);\n                break;\n            case 'memory':\n                storageProvider = this.getInMemoryStorage();\n                break;\n            default:\n                throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        }\n        return storageProvider;\n    },\n    findStorageType: function (types) {\n        let curType;\n        let nextType;\n        types = types.slice();\n        curType = types.shift();\n        nextType = types.length ? types[0] : null;\n        if (!nextType) {\n            return curType;\n        }\n        if (this.testStorageType(curType)) {\n            return curType;\n        }\n        warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n        return this.findStorageType(types);\n    },\n    getLocalStorage: function () {\n        if (isIE11OrLess() && !window.onstorage) {\n            window.onstorage = function () { };\n        }\n        return localStorage;\n    },\n    getSessionStorage: function () {\n        return sessionStorage;\n    },\n    getCookieStorage: function (options) {\n        const secure = options.secure;\n        const sameSite = options.sameSite;\n        const sessionCookie = options.sessionCookie;\n        if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n            throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n        }\n        const storage = {\n            getItem: this.storage.get,\n            setItem: (key, value, expiresAt = '2200-01-01T00:00:00.000Z') => {\n                expiresAt = (sessionCookie ? null : expiresAt);\n                this.storage.set(key, value, expiresAt, {\n                    secure: secure,\n                    sameSite: sameSite,\n                });\n            },\n            removeItem: (key) => {\n                this.storage.delete(key);\n            },\n        };\n        if (!options.useSeparateCookies) {\n            return storage;\n        }\n        return {\n            getItem: function (key) {\n                var data = storage.getItem();\n                var value = {};\n                Object.keys(data).forEach(k => {\n                    if (k.indexOf(key) === 0) {\n                        value[k.replace(`${key}_`, '')] = JSON.parse(data[k]);\n                    }\n                });\n                return JSON.stringify(value);\n            },\n            setItem: function (key, value) {\n                var existingValues = JSON.parse(this.getItem(key));\n                value = JSON.parse(value);\n                Object.keys(value).forEach(k => {\n                    var storageKey = key + '_' + k;\n                    var valueToStore = JSON.stringify(value[k]);\n                    storage.setItem(storageKey, valueToStore);\n                    delete existingValues[k];\n                });\n                Object.keys(existingValues).forEach(k => {\n                    storage.removeItem(key + '_' + k);\n                });\n            },\n            removeItem: function (key) {\n                var existingValues = JSON.parse(this.getItem(key));\n                Object.keys(existingValues).forEach(k => {\n                    storage.removeItem(key + '_' + k);\n                });\n            },\n        };\n    },\n    inMemoryStore: {},\n    getInMemoryStorage: function () {\n        return {\n            getItem: (key) => {\n                return this.inMemoryStore[key];\n            },\n            setItem: (key, value) => {\n                this.inMemoryStore[key] = value;\n            },\n        };\n    },\n    testStorage: function (storage) {\n        var key = 'okta-test-storage';\n        try {\n            storage.setItem(key, key);\n            storage.removeItem(key);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    },\n    storage: {\n        set: function (name, value, expiresAt, options) {\n            const { sameSite, secure } = options;\n            if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n                throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n            }\n            var cookieOptions = {\n                path: options.path || '/',\n                secure,\n                sameSite\n            };\n            if (!!(Date.parse(expiresAt))) {\n                cookieOptions.expires = new Date(expiresAt);\n            }\n            Cookies.set(name, value, cookieOptions);\n            return this.get(name);\n        },\n        get: function (name) {\n            if (!arguments.length) {\n                return Cookies.get();\n            }\n            return Cookies.get(name);\n        },\n        delete: function (name) {\n            return Cookies.remove(name, { path: '/' });\n        }\n    }\n};\n\nexport { storageUtil as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}