{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport BaseTransaction from './Base.js';\nimport { generateRequestFnFromLinks } from '../request.js';\n\nclass EmailChallengeTransaction extends BaseTransaction {\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n    const {\n      accessToken,\n      res\n    } = options;\n    const {\n      id,\n      expiresAt,\n      profile,\n      status,\n      _links\n    } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n    this.poll = /*#__PURE__*/_asyncToGenerator(function* () {\n      const fn = generateRequestFnFromLinks({\n        oktaAuth,\n        accessToken,\n        methodName: 'poll',\n        links: _links,\n        transactionClassName: 'EmailStatusTransaction'\n      });\n      return yield fn();\n    });\n\n    this.verify = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (payload) {\n        const fn = generateRequestFnFromLinks({\n          oktaAuth,\n          accessToken,\n          methodName: 'verify',\n          links: _links\n        });\n        return yield fn(payload);\n      });\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n\n}\n\nexport { EmailChallengeTransaction as default };","map":{"version":3,"names":["BaseTransaction","generateRequestFnFromLinks","EmailChallengeTransaction","constructor","oktaAuth","options","accessToken","res","id","expiresAt","profile","status","_links","poll","fn","methodName","links","transactionClassName","verify","payload","default"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/myaccount/transactions/EmailChallengeTransaction.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport BaseTransaction from './Base.js';\nimport { generateRequestFnFromLinks } from '../request.js';\n\nclass EmailChallengeTransaction extends BaseTransaction {\n    constructor(oktaAuth, options) {\n        super(oktaAuth, options);\n        const { accessToken, res } = options;\n        const { id, expiresAt, profile, status, _links } = res;\n        this.id = id;\n        this.expiresAt = expiresAt;\n        this.profile = profile;\n        this.status = status;\n        this.poll = async () => {\n            const fn = generateRequestFnFromLinks({\n                oktaAuth,\n                accessToken,\n                methodName: 'poll',\n                links: _links,\n                transactionClassName: 'EmailStatusTransaction'\n            });\n            return await fn();\n        };\n        this.verify = async (payload) => {\n            const fn = generateRequestFnFromLinks({\n                oktaAuth,\n                accessToken,\n                methodName: 'verify',\n                links: _links,\n            });\n            return await fn(payload);\n        };\n    }\n}\n\nexport { EmailChallengeTransaction as default };\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,eAAP,MAA4B,WAA5B;AACA,SAASC,0BAAT,QAA2C,eAA3C;;AAEA,MAAMC,yBAAN,SAAwCF,eAAxC,CAAwD;EACpDG,WAAW,CAACC,QAAD,EAAWC,OAAX,EAAoB;IAC3B,MAAMD,QAAN,EAAgBC,OAAhB;IACA,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAuBF,OAA7B;IACA,MAAM;MAAEG,EAAF;MAAMC,SAAN;MAAiBC,OAAjB;MAA0BC,MAA1B;MAAkCC;IAAlC,IAA6CL,GAAnD;IACA,KAAKC,EAAL,GAAUA,EAAV;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKE,IAAL,kCAAY,aAAY;MACpB,MAAMC,EAAE,GAAGb,0BAA0B,CAAC;QAClCG,QADkC;QAElCE,WAFkC;QAGlCS,UAAU,EAAE,MAHsB;QAIlCC,KAAK,EAAEJ,MAJ2B;QAKlCK,oBAAoB,EAAE;MALY,CAAD,CAArC;MAOA,aAAaH,EAAE,EAAf;IACH,CATD;;IAUA,KAAKI,MAAL;MAAA,8BAAc,WAAOC,OAAP,EAAmB;QAC7B,MAAML,EAAE,GAAGb,0BAA0B,CAAC;UAClCG,QADkC;UAElCE,WAFkC;UAGlCS,UAAU,EAAE,QAHsB;UAIlCC,KAAK,EAAEJ;QAJ2B,CAAD,CAArC;QAMA,aAAaE,EAAE,CAACK,OAAD,CAAf;MACH,CARD;;MAAA;QAAA;MAAA;IAAA;EASH;;AA5BmD;;AA+BxD,SAASjB,yBAAyB,IAAIkB,OAAtC"},"metadata":{},"sourceType":"module"}