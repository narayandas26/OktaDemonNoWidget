{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Remediator.js';\nimport { isAuthenticator } from '../../types/api.js';\nimport { compareAuthenticators } from '../../authenticator/util.js';\n\nclass AuthenticatorData extends Remediator {\n  constructor(remediation, values = {}) {\n    super(remediation, values);\n    this.authenticator = this.getAuthenticator();\n    this.formatAuthenticatorData();\n  }\n\n  formatAuthenticatorData() {\n    const authenticatorData = this.getAuthenticatorData();\n\n    if (authenticatorData) {\n      this.values.authenticatorsData = this.values.authenticatorsData.map(data => {\n        if (compareAuthenticators(this.authenticator, data)) {\n          return this.mapAuthenticatorDataFromValues(data);\n        }\n\n        return data;\n      });\n    } else {\n      const data = this.mapAuthenticatorDataFromValues();\n\n      if (data) {\n        this.values.authenticatorsData.push(data);\n      }\n    }\n  }\n\n  getAuthenticatorData() {\n    return this.values.authenticatorsData.find(data => compareAuthenticators(this.authenticator, data));\n  }\n\n  canRemediate() {\n    return this.values.authenticatorsData.some(data => compareAuthenticators(this.authenticator, data));\n  }\n\n  mapAuthenticatorDataFromValues(authenticatorData) {\n    let {\n      methodType,\n      authenticator\n    } = this.values;\n\n    if (!methodType && isAuthenticator(authenticator)) {\n      methodType = authenticator === null || authenticator === void 0 ? void 0 : authenticator.methodType;\n    }\n\n    const {\n      id,\n      enrollmentId\n    } = this.authenticator;\n    const data = Object.assign(Object.assign({\n      id,\n      enrollmentId\n    }, authenticatorData && authenticatorData), methodType && {\n      methodType\n    });\n    return data.methodType ? data : null;\n  }\n\n  getAuthenticatorFromRemediation() {\n    const authenticator = this.remediation.value.find(({\n      name\n    }) => name === 'authenticator');\n    return authenticator;\n  }\n\n  getValuesAfterProceed() {\n    this.values = super.getValuesAfterProceed();\n    const authenticatorsData = this.values.authenticatorsData.filter(data => compareAuthenticators(this.authenticator, data) !== true);\n    return Object.assign(Object.assign({}, this.values), {\n      authenticatorsData\n    });\n  }\n\n}\n\nexport { AuthenticatorData };","map":{"version":3,"names":["Remediator","isAuthenticator","compareAuthenticators","AuthenticatorData","constructor","remediation","values","authenticator","getAuthenticator","formatAuthenticatorData","authenticatorData","getAuthenticatorData","authenticatorsData","map","data","mapAuthenticatorDataFromValues","push","find","canRemediate","some","methodType","id","enrollmentId","Object","assign","getAuthenticatorFromRemediation","value","name","getValuesAfterProceed","filter"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/Base/AuthenticatorData.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Remediator.js';\nimport { isAuthenticator } from '../../types/api.js';\nimport { compareAuthenticators } from '../../authenticator/util.js';\n\nclass AuthenticatorData extends Remediator {\n    constructor(remediation, values = {}) {\n        super(remediation, values);\n        this.authenticator = this.getAuthenticator();\n        this.formatAuthenticatorData();\n    }\n    formatAuthenticatorData() {\n        const authenticatorData = this.getAuthenticatorData();\n        if (authenticatorData) {\n            this.values.authenticatorsData = this.values.authenticatorsData.map(data => {\n                if (compareAuthenticators(this.authenticator, data)) {\n                    return this.mapAuthenticatorDataFromValues(data);\n                }\n                return data;\n            });\n        }\n        else {\n            const data = this.mapAuthenticatorDataFromValues();\n            if (data) {\n                this.values.authenticatorsData.push(data);\n            }\n        }\n    }\n    getAuthenticatorData() {\n        return this.values.authenticatorsData\n            .find((data) => compareAuthenticators(this.authenticator, data));\n    }\n    canRemediate() {\n        return this.values.authenticatorsData\n            .some(data => compareAuthenticators(this.authenticator, data));\n    }\n    mapAuthenticatorDataFromValues(authenticatorData) {\n        let { methodType, authenticator } = this.values;\n        if (!methodType && isAuthenticator(authenticator)) {\n            methodType = authenticator === null || authenticator === void 0 ? void 0 : authenticator.methodType;\n        }\n        const { id, enrollmentId } = this.authenticator;\n        const data = Object.assign(Object.assign({ id,\n            enrollmentId }, (authenticatorData && authenticatorData)), (methodType && { methodType }));\n        return data.methodType ? data : null;\n    }\n    getAuthenticatorFromRemediation() {\n        const authenticator = this.remediation.value\n            .find(({ name }) => name === 'authenticator');\n        return authenticator;\n    }\n    getValuesAfterProceed() {\n        this.values = super.getValuesAfterProceed();\n        const authenticatorsData = this.values.authenticatorsData\n            .filter(data => compareAuthenticators(this.authenticator, data) !== true);\n        return Object.assign(Object.assign({}, this.values), { authenticatorsData });\n    }\n}\n\nexport { AuthenticatorData };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,qBAAT,QAAsC,6BAAtC;;AAEA,MAAMC,iBAAN,SAAgCH,UAAhC,CAA2C;EACvCI,WAAW,CAACC,WAAD,EAAcC,MAAM,GAAG,EAAvB,EAA2B;IAClC,MAAMD,WAAN,EAAmBC,MAAnB;IACA,KAAKC,aAAL,GAAqB,KAAKC,gBAAL,EAArB;IACA,KAAKC,uBAAL;EACH;;EACDA,uBAAuB,GAAG;IACtB,MAAMC,iBAAiB,GAAG,KAAKC,oBAAL,EAA1B;;IACA,IAAID,iBAAJ,EAAuB;MACnB,KAAKJ,MAAL,CAAYM,kBAAZ,GAAiC,KAAKN,MAAL,CAAYM,kBAAZ,CAA+BC,GAA/B,CAAmCC,IAAI,IAAI;QACxE,IAAIZ,qBAAqB,CAAC,KAAKK,aAAN,EAAqBO,IAArB,CAAzB,EAAqD;UACjD,OAAO,KAAKC,8BAAL,CAAoCD,IAApC,CAAP;QACH;;QACD,OAAOA,IAAP;MACH,CALgC,CAAjC;IAMH,CAPD,MAQK;MACD,MAAMA,IAAI,GAAG,KAAKC,8BAAL,EAAb;;MACA,IAAID,IAAJ,EAAU;QACN,KAAKR,MAAL,CAAYM,kBAAZ,CAA+BI,IAA/B,CAAoCF,IAApC;MACH;IACJ;EACJ;;EACDH,oBAAoB,GAAG;IACnB,OAAO,KAAKL,MAAL,CAAYM,kBAAZ,CACFK,IADE,CACIH,IAAD,IAAUZ,qBAAqB,CAAC,KAAKK,aAAN,EAAqBO,IAArB,CADlC,CAAP;EAEH;;EACDI,YAAY,GAAG;IACX,OAAO,KAAKZ,MAAL,CAAYM,kBAAZ,CACFO,IADE,CACGL,IAAI,IAAIZ,qBAAqB,CAAC,KAAKK,aAAN,EAAqBO,IAArB,CADhC,CAAP;EAEH;;EACDC,8BAA8B,CAACL,iBAAD,EAAoB;IAC9C,IAAI;MAAEU,UAAF;MAAcb;IAAd,IAAgC,KAAKD,MAAzC;;IACA,IAAI,CAACc,UAAD,IAAenB,eAAe,CAACM,aAAD,CAAlC,EAAmD;MAC/Ca,UAAU,GAAGb,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAACa,UAAzF;IACH;;IACD,MAAM;MAAEC,EAAF;MAAMC;IAAN,IAAuB,KAAKf,aAAlC;IACA,MAAMO,IAAI,GAAGS,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc;MAAEH,EAAF;MACrCC;IADqC,CAAd,EACNZ,iBAAiB,IAAIA,iBADf,CAAd,EACmDU,UAAU,IAAI;MAAEA;IAAF,CADjE,CAAb;IAEA,OAAON,IAAI,CAACM,UAAL,GAAkBN,IAAlB,GAAyB,IAAhC;EACH;;EACDW,+BAA+B,GAAG;IAC9B,MAAMlB,aAAa,GAAG,KAAKF,WAAL,CAAiBqB,KAAjB,CACjBT,IADiB,CACZ,CAAC;MAAEU;IAAF,CAAD,KAAcA,IAAI,KAAK,eADX,CAAtB;IAEA,OAAOpB,aAAP;EACH;;EACDqB,qBAAqB,GAAG;IACpB,KAAKtB,MAAL,GAAc,MAAMsB,qBAAN,EAAd;IACA,MAAMhB,kBAAkB,GAAG,KAAKN,MAAL,CAAYM,kBAAZ,CACtBiB,MADsB,CACff,IAAI,IAAIZ,qBAAqB,CAAC,KAAKK,aAAN,EAAqBO,IAArB,CAArB,KAAoD,IAD7C,CAA3B;IAEA,OAAOS,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKlB,MAAvB,CAAd,EAA8C;MAAEM;IAAF,CAA9C,CAAP;EACH;;AAnDsC;;AAsD3C,SAAST,iBAAT"},"metadata":{},"sourceType":"module"}