{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { run } from './run.js';\nimport { hasSavedInteractionHandle } from './transactionMeta.js';\nimport { startTransaction } from './startTransaction.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { IdxFeature } from './types/api.js';\n\nfunction unlockAccount(_x) {\n  return _unlockAccount.apply(this, arguments);\n}\n\nfunction _unlockAccount() {\n  _unlockAccount = _asyncToGenerator(function* (authClient, options = {}) {\n    options.flow = 'unlockAccount';\n\n    if (!hasSavedInteractionHandle(authClient)) {\n      const {\n        enabledFeatures\n      } = yield startTransaction(authClient, Object.assign(Object.assign({}, options), {\n        autoRemediate: false\n      }));\n\n      if (enabledFeatures && !enabledFeatures.includes(IdxFeature.ACCOUNT_UNLOCK)) {\n        throw new AuthSdkError('Self Service Account Unlock is not supported based on your current org configuration.');\n      }\n    }\n\n    return run(authClient, Object.assign({}, options));\n  });\n  return _unlockAccount.apply(this, arguments);\n}\n\nexport { unlockAccount }; //# sourceMappingURL=unlockAccount.js.map","map":null,"metadata":{},"sourceType":"module"}