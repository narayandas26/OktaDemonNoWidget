{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { run } from './run.js';\nimport { getSavedTransactionMeta } from './transactionMeta.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\n\nfunction canProceed(authClient, options = {}) {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!(meta || options.stateHandle);\n}\n\nfunction proceed(_x) {\n  return _proceed.apply(this, arguments);\n}\n\nfunction _proceed() {\n  _proceed = _asyncToGenerator(function* (authClient, options = {}) {\n    if (!canProceed(authClient, options)) {\n      throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n    }\n\n    let {\n      flow,\n      state\n    } = options;\n\n    if (!flow) {\n      const meta = getSavedTransactionMeta(authClient, {\n        state\n      });\n      flow = meta === null || meta === void 0 ? void 0 : meta.flow;\n    }\n\n    return run(authClient, Object.assign(Object.assign({}, options), {\n      flow\n    }));\n  });\n  return _proceed.apply(this, arguments);\n}\n\nexport { canProceed, proceed }; //# sourceMappingURL=proceed.js.map","map":null,"metadata":{},"sourceType":"module"}