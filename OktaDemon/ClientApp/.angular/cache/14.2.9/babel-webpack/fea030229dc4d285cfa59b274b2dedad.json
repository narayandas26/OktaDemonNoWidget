{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { warn } from '../util/console.js';\nimport { isBrowser } from '../features.js';\nimport { IDX_RESPONSE_STORAGE_NAME } from '../constants.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { SavedObject } from '../storage/SavedObject.js';\nimport { createCoreStorageManager } from '../core/storage.js';\n\nfunction createIdxStorageManager() {\n  const CoreStorageManager = createCoreStorageManager();\n  return class IdxStorageManager extends CoreStorageManager {\n    constructor(storageManagerOptions, cookieOptions, storageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    getIdxResponseStorage(options) {\n      let storage;\n\n      if (isBrowser()) {\n        try {\n          storage = this.storageUtil.getStorageByType('memory', options);\n        } catch (e) {\n          warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n        }\n      } else {\n        const transactionStorage = this.getTransactionStorage(options);\n\n        if (transactionStorage) {\n          storage = {\n            getItem: key => {\n              const transaction = transactionStorage.getStorage();\n\n              if (transaction && transaction[key]) {\n                return transaction[key];\n              }\n\n              return null;\n            },\n            setItem: (key, val) => {\n              const transaction = transactionStorage.getStorage();\n\n              if (!transaction) {\n                throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n              }\n\n              transaction[key] = val;\n              transactionStorage.setStorage(transaction);\n            },\n            removeItem: key => {\n              const transaction = transactionStorage.getStorage();\n\n              if (!transaction) {\n                return;\n              }\n\n              delete transaction[key];\n              transactionStorage.setStorage(transaction);\n            }\n          };\n        }\n      }\n\n      if (!storage) {\n        return null;\n      }\n\n      return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n    }\n\n  };\n}\n\nexport { createIdxStorageManager };","map":{"version":3,"names":["warn","isBrowser","IDX_RESPONSE_STORAGE_NAME","AuthSdkError","SavedObject","createCoreStorageManager","createIdxStorageManager","CoreStorageManager","IdxStorageManager","constructor","storageManagerOptions","cookieOptions","storageUtil","getIdxResponseStorage","options","storage","getStorageByType","e","transactionStorage","getTransactionStorage","getItem","key","transaction","getStorage","setItem","val","setStorage","removeItem"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/idx/storage.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { warn } from '../util/console.js';\nimport { isBrowser } from '../features.js';\nimport { IDX_RESPONSE_STORAGE_NAME } from '../constants.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { SavedObject } from '../storage/SavedObject.js';\nimport { createCoreStorageManager } from '../core/storage.js';\n\nfunction createIdxStorageManager() {\n    const CoreStorageManager = createCoreStorageManager();\n    return class IdxStorageManager extends CoreStorageManager {\n        constructor(storageManagerOptions, cookieOptions, storageUtil) {\n            super(storageManagerOptions, cookieOptions, storageUtil);\n        }\n        getIdxResponseStorage(options) {\n            let storage;\n            if (isBrowser()) {\n                try {\n                    storage = this.storageUtil.getStorageByType('memory', options);\n                }\n                catch (e) {\n                    warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n                }\n            }\n            else {\n                const transactionStorage = this.getTransactionStorage(options);\n                if (transactionStorage) {\n                    storage = {\n                        getItem: (key) => {\n                            const transaction = transactionStorage.getStorage();\n                            if (transaction && transaction[key]) {\n                                return transaction[key];\n                            }\n                            return null;\n                        },\n                        setItem: (key, val) => {\n                            const transaction = transactionStorage.getStorage();\n                            if (!transaction) {\n                                throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n                            }\n                            transaction[key] = val;\n                            transactionStorage.setStorage(transaction);\n                        },\n                        removeItem: (key) => {\n                            const transaction = transactionStorage.getStorage();\n                            if (!transaction) {\n                                return;\n                            }\n                            delete transaction[key];\n                            transactionStorage.setStorage(transaction);\n                        }\n                    };\n                }\n            }\n            if (!storage) {\n                return null;\n            }\n            return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n        }\n    };\n}\n\nexport { createIdxStorageManager };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,IAAT,QAAqB,oBAArB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,yBAAT,QAA0C,iBAA1C;AACA,OAAO,cAAP;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,wBAAT,QAAyC,oBAAzC;;AAEA,SAASC,uBAAT,GAAmC;EAC/B,MAAMC,kBAAkB,GAAGF,wBAAwB,EAAnD;EACA,OAAO,MAAMG,iBAAN,SAAgCD,kBAAhC,CAAmD;IACtDE,WAAW,CAACC,qBAAD,EAAwBC,aAAxB,EAAuCC,WAAvC,EAAoD;MAC3D,MAAMF,qBAAN,EAA6BC,aAA7B,EAA4CC,WAA5C;IACH;;IACDC,qBAAqB,CAACC,OAAD,EAAU;MAC3B,IAAIC,OAAJ;;MACA,IAAId,SAAS,EAAb,EAAiB;QACb,IAAI;UACAc,OAAO,GAAG,KAAKH,WAAL,CAAiBI,gBAAjB,CAAkC,QAAlC,EAA4CF,OAA5C,CAAV;QACH,CAFD,CAGA,OAAOG,CAAP,EAAU;UACNjB,IAAI,CAAC,yIAAD,CAAJ;QACH;MACJ,CAPD,MAQK;QACD,MAAMkB,kBAAkB,GAAG,KAAKC,qBAAL,CAA2BL,OAA3B,CAA3B;;QACA,IAAII,kBAAJ,EAAwB;UACpBH,OAAO,GAAG;YACNK,OAAO,EAAGC,GAAD,IAAS;cACd,MAAMC,WAAW,GAAGJ,kBAAkB,CAACK,UAAnB,EAApB;;cACA,IAAID,WAAW,IAAIA,WAAW,CAACD,GAAD,CAA9B,EAAqC;gBACjC,OAAOC,WAAW,CAACD,GAAD,CAAlB;cACH;;cACD,OAAO,IAAP;YACH,CAPK;YAQNG,OAAO,EAAE,CAACH,GAAD,EAAMI,GAAN,KAAc;cACnB,MAAMH,WAAW,GAAGJ,kBAAkB,CAACK,UAAnB,EAApB;;cACA,IAAI,CAACD,WAAL,EAAkB;gBACd,MAAM,IAAInB,YAAJ,CAAiB,uDAAjB,CAAN;cACH;;cACDmB,WAAW,CAACD,GAAD,CAAX,GAAmBI,GAAnB;cACAP,kBAAkB,CAACQ,UAAnB,CAA8BJ,WAA9B;YACH,CAfK;YAgBNK,UAAU,EAAGN,GAAD,IAAS;cACjB,MAAMC,WAAW,GAAGJ,kBAAkB,CAACK,UAAnB,EAApB;;cACA,IAAI,CAACD,WAAL,EAAkB;gBACd;cACH;;cACD,OAAOA,WAAW,CAACD,GAAD,CAAlB;cACAH,kBAAkB,CAACQ,UAAnB,CAA8BJ,WAA9B;YACH;UAvBK,CAAV;QAyBH;MACJ;;MACD,IAAI,CAACP,OAAL,EAAc;QACV,OAAO,IAAP;MACH;;MACD,OAAO,IAAIX,WAAJ,CAAgBW,OAAhB,EAAyBb,yBAAzB,CAAP;IACH;;EAhDqD,CAA1D;AAkDH;;AAED,SAASI,uBAAT"},"metadata":{},"sourceType":"module"}