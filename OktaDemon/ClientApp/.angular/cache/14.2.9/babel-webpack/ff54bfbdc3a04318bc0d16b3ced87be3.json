{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport ProfileTransaction from './transactions/ProfileTransaction.js';\nimport ProfileSchemaTransaction from './transactions/ProfileSchemaTransaction.js';\nimport EmailTransaction from './transactions/EmailTransaction.js';\nimport EmailStatusTransaction from './transactions/EmailStatusTransaction.js';\nimport EmailChallengeTransaction from './transactions/EmailChallengeTransaction.js';\nimport PhoneTransaction from './transactions/PhoneTransaction.js';\nimport BaseTransaction from './transactions/Base.js';\nimport AuthApiError from '../errors/AuthApiError.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { httpRequest } from '../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\n\nconst parseInsufficientAuthenticationError = header => {\n  if (!header) {\n    throw new AuthSdkError('Missing header string');\n  }\n\n  return header.split(',').map(part => part.trim()).map(part => part.split('=')).reduce((acc, curr) => {\n    acc[curr[0]] = curr[1].replace(/^\"(.*)\"$/, '$1');\n    return acc;\n  }, {});\n};\n\nfunction sendRequest(_x, _x2) {\n  return _sendRequest.apply(this, arguments);\n}\n\nfunction _sendRequest() {\n  _sendRequest = _asyncToGenerator(function* (oktaAuth, options) {\n    var _a, _b;\n\n    const {\n      accessToken: accessTokenObj,\n      idToken: idTokenObj\n    } = oktaAuth.tokenManager.getTokensSync();\n    const idToken = idTokenObj === null || idTokenObj === void 0 ? void 0 : idTokenObj.idToken;\n    const accessToken = options.accessToken || (accessTokenObj === null || accessTokenObj === void 0 ? void 0 : accessTokenObj.accessToken);\n    const {\n      issuer\n    } = oktaAuth.options;\n    const {\n      url,\n      method,\n      payload\n    } = options;\n    const requestUrl = url.startsWith(issuer) ? url : `${issuer}${url}`;\n\n    if (!accessToken) {\n      throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n    }\n\n    let res;\n\n    try {\n      res = yield httpRequest(oktaAuth, Object.assign({\n        headers: {\n          'Accept': '*/*;okta-version=1.0.0'\n        },\n        accessToken,\n        url: requestUrl,\n        method\n      }, payload && {\n        args: payload\n      }));\n    } catch (err) {\n      const errorResp = err.xhr;\n\n      if (idToken && (errorResp === null || errorResp === void 0 ? void 0 : errorResp.status) === 403 && !!((_a = errorResp === null || errorResp === void 0 ? void 0 : errorResp.headers) === null || _a === void 0 ? void 0 : _a['www-authenticate'])) {\n        const {\n          error,\n          error_description,\n          max_age\n        } = parseInsufficientAuthenticationError((_b = errorResp === null || errorResp === void 0 ? void 0 : errorResp.headers) === null || _b === void 0 ? void 0 : _b['www-authenticate']);\n\n        if (error === 'insufficient_authentication_context') {\n          const insufficientAuthenticationError = new AuthApiError({\n            errorSummary: error,\n            errorCauses: [{\n              errorSummary: error_description\n            }]\n          }, errorResp, {\n            max_age: +max_age\n          });\n          throw insufficientAuthenticationError;\n        } else {\n          throw err;\n        }\n      } else {\n        throw err;\n      }\n    }\n\n    const map = {\n      EmailTransaction,\n      EmailStatusTransaction,\n      EmailChallengeTransaction,\n      ProfileTransaction,\n      ProfileSchemaTransaction,\n      PhoneTransaction\n    };\n    const TransactionClass = map[options.transactionClassName] || BaseTransaction;\n\n    if (Array.isArray(res)) {\n      return res.map(item => new TransactionClass(oktaAuth, {\n        res: item,\n        accessToken\n      }));\n    }\n\n    return new TransactionClass(oktaAuth, {\n      res,\n      accessToken\n    });\n  });\n  return _sendRequest.apply(this, arguments);\n}\n\nfunction generateRequestFnFromLinks({\n  oktaAuth,\n  accessToken,\n  methodName,\n  links,\n  transactionClassName\n}) {\n  for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n    if (method.toLowerCase() === methodName) {\n      const link = links.self;\n      return /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (payload) {\n          return sendRequest(oktaAuth, {\n            accessToken,\n            url: link.href,\n            method,\n            payload,\n            transactionClassName\n          });\n        });\n\n        return function (_x3) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n  }\n\n  const link = links[methodName];\n\n  if (!link) {\n    throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n  }\n\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (payload) {\n      return sendRequest(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method: link.hints.allow[0],\n        payload,\n        transactionClassName\n      });\n    });\n\n    return function (_x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\n\nexport { generateRequestFnFromLinks, sendRequest };","map":{"version":3,"names":["ProfileTransaction","ProfileSchemaTransaction","EmailTransaction","EmailStatusTransaction","EmailChallengeTransaction","PhoneTransaction","BaseTransaction","AuthApiError","AuthSdkError","httpRequest","parseInsufficientAuthenticationError","header","split","map","part","trim","reduce","acc","curr","replace","sendRequest","oktaAuth","options","_a","_b","accessToken","accessTokenObj","idToken","idTokenObj","tokenManager","getTokensSync","issuer","url","method","payload","requestUrl","startsWith","res","Object","assign","headers","args","err","errorResp","xhr","status","error","error_description","max_age","insufficientAuthenticationError","errorSummary","errorCauses","TransactionClass","transactionClassName","Array","isArray","item","generateRequestFnFromLinks","methodName","links","toLowerCase","link","self","href","hints","allow"],"sources":["C:/Users/Narean/source/repos/OktaDemon/OktaDemon/ClientApp/node_modules/@okta/okta-auth-js/esm/browser/myaccount/request.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport ProfileTransaction from './transactions/ProfileTransaction.js';\nimport ProfileSchemaTransaction from './transactions/ProfileSchemaTransaction.js';\nimport EmailTransaction from './transactions/EmailTransaction.js';\nimport EmailStatusTransaction from './transactions/EmailStatusTransaction.js';\nimport EmailChallengeTransaction from './transactions/EmailChallengeTransaction.js';\nimport PhoneTransaction from './transactions/PhoneTransaction.js';\nimport BaseTransaction from './transactions/Base.js';\nimport AuthApiError from '../errors/AuthApiError.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { httpRequest } from '../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\n\nconst parseInsufficientAuthenticationError = (header) => {\n    if (!header) {\n        throw new AuthSdkError('Missing header string');\n    }\n    return header\n        .split(',')\n        .map(part => part.trim())\n        .map(part => part.split('='))\n        .reduce((acc, curr) => {\n        acc[curr[0]] = curr[1].replace(/^\"(.*)\"$/, '$1');\n        return acc;\n    }, {});\n};\nasync function sendRequest(oktaAuth, options) {\n    var _a, _b;\n    const { accessToken: accessTokenObj, idToken: idTokenObj } = oktaAuth.tokenManager.getTokensSync();\n    const idToken = idTokenObj === null || idTokenObj === void 0 ? void 0 : idTokenObj.idToken;\n    const accessToken = options.accessToken || (accessTokenObj === null || accessTokenObj === void 0 ? void 0 : accessTokenObj.accessToken);\n    const { issuer } = oktaAuth.options;\n    const { url, method, payload } = options;\n    const requestUrl = url.startsWith(issuer) ? url : `${issuer}${url}`;\n    if (!accessToken) {\n        throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n    }\n    let res;\n    try {\n        res = await httpRequest(oktaAuth, Object.assign({ headers: { 'Accept': '*/*;okta-version=1.0.0' }, accessToken, url: requestUrl, method }, (payload && { args: payload })));\n    }\n    catch (err) {\n        const errorResp = err.xhr;\n        if (idToken && (errorResp === null || errorResp === void 0 ? void 0 : errorResp.status) === 403 && !!((_a = errorResp === null || errorResp === void 0 ? void 0 : errorResp.headers) === null || _a === void 0 ? void 0 : _a['www-authenticate'])) {\n            const { error,\n            error_description,\n            max_age } = parseInsufficientAuthenticationError((_b = errorResp === null || errorResp === void 0 ? void 0 : errorResp.headers) === null || _b === void 0 ? void 0 : _b['www-authenticate']);\n            if (error === 'insufficient_authentication_context') {\n                const insufficientAuthenticationError = new AuthApiError({\n                    errorSummary: error,\n                    errorCauses: [{ errorSummary: error_description }]\n                }, errorResp,\n                { max_age: +max_age });\n                throw insufficientAuthenticationError;\n            }\n            else {\n                throw err;\n            }\n        }\n        else {\n            throw err;\n        }\n    }\n    const map = {\n        EmailTransaction,\n        EmailStatusTransaction,\n        EmailChallengeTransaction,\n        ProfileTransaction,\n        ProfileSchemaTransaction,\n        PhoneTransaction\n    };\n    const TransactionClass = map[options.transactionClassName] || BaseTransaction;\n    if (Array.isArray(res)) {\n        return res.map(item => new TransactionClass(oktaAuth, {\n            res: item,\n            accessToken\n        }));\n    }\n    return new TransactionClass(oktaAuth, {\n        res,\n        accessToken\n    });\n}\nfunction generateRequestFnFromLinks({ oktaAuth, accessToken, methodName, links, transactionClassName }) {\n    for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n        if (method.toLowerCase() === methodName) {\n            const link = links.self;\n            return (async (payload) => sendRequest(oktaAuth, {\n                accessToken,\n                url: link.href,\n                method,\n                payload,\n                transactionClassName\n            }));\n        }\n    }\n    const link = links[methodName];\n    if (!link) {\n        throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n    }\n    return (async (payload) => sendRequest(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method: link.hints.allow[0],\n        payload,\n        transactionClassName\n    }));\n}\n\nexport { generateRequestFnFromLinks, sendRequest };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}